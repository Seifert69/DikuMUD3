/*
filename    udgaard
password    s0m313ls3
changedby   Etna
EmailAdd
request     compile
version     22.03
END HEADER*/

/* fixed janitors to work 8-2000 Ratlin */
/* updated RESCUE and TEAMWORK to dil 8-9-2000 Ratlin */
/*ver 22.00 added competition building and mobs 12-5-2005 
v22.01  Modified to adhere to house style specifications 
   Added no mob flag to moot_ent to cut down on spam in hall Heulflodyn 01/07-2006 */ 
/* Second rewrite by Heulflodyn 01-18-2006 
ver 22.02 2011.01.02 ETNA changed load on newbie ranger
to rapier as ranger cannot practice dagger till level 3
added more to newbie books in moot library and added ranger, paladin 
and necro books to objects was missing and did not load
ver 22.03 Shop keepers have notele flag added to keep players
from moving to fjord and grotto thus depriving newbies access. */

// 2020 MS. Added #ifndef EXTENDEDMUD to zap away complicated stuff in Udgaard
// Ken and I thought Udgaard had become too large for a starting zone. I'll add
// the same for Haon-Dor (a builder house). I'll also revamp login so you only choose
// one guild. And make it possible to choose additional guilds in the game.

#include <macros.h>

%zone udgaard

title "Village of Udgaard@Mainland"
lifespan 25
reset RESET_ANYHOW
creators {"papi"}

notes
"This is designed to be the small and easy starting village of Valhalla.
It contains basic shops, law, banking and post office. Midgaard then
becomes the capital of Valhalla.
Version 1.0 made 12 March 94 by Papi (Michael Seifert).
16 Rooms added by Isildur - May 1997 - added watch towers and
a path to the farming hamlet north of udgaard.
Dec 2005 Moot hall added"

help
"<pre>                   The Village of Udgaard<br/>
                       1 1 1 1 1 1 1 1 1 1<br/>
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9<br/>
A                C   T                         Temple          B07<br/>
      *          |   |<br/>
B      I-I   S   C   B   S 3                   Item Storage    A09<br/>
         |   |   |   |   | |                   Food Store      B05<br/>
C  1-W---#---#---#---#---#-#-W-2               Armourer        B11<br/>
         |   |   |   |   |                     Ironmonger      D05<br/>
D    R---P   S   |   O   S                     Weaponsmith     D11<br/>
                 |                             Inn             B03<br/>
E             H  |  F                          Post Office     D03<br/>
               \ | /                           Guard's Office  D09<br/>
F                # -- T                        Haon-Dor        C00<br/>
               / | \                           Bank            B09<br/>
G             M  |  Y                          Herbalist       E05<br/>
                 |                             Field Equipment E09<br/>
H                |                             Tobacco Shop    F10<br/>
                 |                             Mage Tailor     G05<br/>
I                |                             Fence           G09<br/>
                 |                             Village Dump    I07<br/>
J              Bridge --- D                    Town Records    D01<br/>
<br/>
                                               Teacher         A01<br/>
                                               Teacher         A01<br/>
&gt;From C13 you reach the city of Midgaard    Teacher         A01<br/>
by going 'eseseenenee'                         Teacher         A01<br/>
<br/>
                                               Cypress Forest  C14<br/>
The Udgaard Town Hall is situated at G13.      To Hamlet  B12<br/>
That's is where the Mayor is to be found.      W - Watchtowers<br/>
<br/>
<br/>
Udgaard is the starting Village for new players. It contains all the basic<br/>
elements needed: A temple, armory, weapon smith, banker, sheriff, food<br/>
store,<br/>
ironmonger, post office and an Inn. All of the four starting guilds are<br/>
reachable through the guild streets, also containing several<br/>
guild-dedicated shops.<br/><br/><br/>
<br/>
Udgaard is connected to the Haon-Dor forest, Cypress forest and Hamlet - all<br/>
are ideal zones for beginners as long as you are a little cautious.<br/><br/><br/>
<br/>
The only native monster in here is the ever-famous 'beastly fido'. A map of<br/>
Udgaard is available at the Ironmonger store and also has directions for<br/>
reaching the city of Midgaard.<br/>
<br/>
Beginners: Try 'help me' to get beginners help.</pre>"

#define CIGAR(price,smoketime)   \
extra {"$rem_s"}    \
"You put away your $2N for later enjoyment." \
extra {"$rem_o"}    \
"$1n puts away $1s $2N for later enjoyment." \
manipulate {MANIPULATE_TAKE,MANIPULATE_HOLD} \
type ITEM_OTHER     \
cost price IRON_PIECE   \
value[1] 0     \
dilcopy cigar_dil2@udgaard();                   \
dilcopy cigar_dil@udgaard(smoketime);  \
dilcopy smoke_dil@udgaard();

/* Price and weight are straightforward, smoketime is the time the
   pipe will stay lit (in seconds)        */

#define PIPE(price,wgt,smoketime)  \
extra {"$rem_s"}    \
"You put your $2N away for later enjoyment." \
extra {"$rem_o"}    \
"$1n puts $1s $2N away for later enjoyment." \
manipulate{MANIPULATE_TAKE,MANIPULATE_HOLD} \
type ITEM_OTHER     \
cost  price IRON_PIECE   \
weight  wgt     \
value[1] 0     \
value[2] 0     \
dilcopy pipe_dil@udgaard(smoketime);  \
dilcopy pipe_dil2@udgaard();                    \
dilcopy smoke_dil@udgaard();

#define NO_NEWBIE "Newbie Quest Declined"
#define DRAKAR_COMPLETE "Withstood the Test of Time"
#define DRAKAR_REPLACED "Replaced Shield"

%dil

/*heul load for bucket wrote by Whistler*/

dilbegin buck_load ();
var
 waist:unitptr;
 buck:unitptr;
code
{
buck:=restore("bucket",null);

if (buck==null)
 {
buck:=load("moot_buck@udgaard");
}
link (buck, self);
quit;
}
dilend


dilbegin no_command();
var
  pc:unitptr;
  splno:integer;
  s:string;
code
{
   on_activation((self.position <= POSITION_SLEEPING) or
   (self.position==POSITION_MORTALLYW) or
   (self.position== POSITION_STUNNED) or
   (self.position==POSITION_INCAP),skip);

:start:
heartbeat:= 3;
wait(SFB_PRE, (command("cast") and (target == self)));
   s := getword(argument);
   splno := atoi(s);

   if (not(splno == SPL_COMMAND)) goto start;

pc:=activator;
secure (pc,start);
power:=-1;
block;
exec("say You will pay for that "+pc.name ,self);
exec ("hunt "+pc.name,self);
goto start;
}
dilend

dilbegin no_sleep();
var
  pc:unitptr;
  splno:integer;
  s:string;
code
{
   on_activation((self.position <= POSITION_SLEEPING) or
   (self.position==POSITION_MORTALLYW) or
   (self.position== POSITION_STUNNED) or
   (self.position==POSITION_INCAP),skip);

:start:
heartbeat:= 3;
wait(SFB_PRE, (command("cast") and (target == self)));
   s := getword(argument);
   splno := atoi(s);

   if (not(splno == SPL_SLEEP)) goto start;
pc:=activator;
secure (pc,start);
power:=-1;
block;
exec("shout It's time for "+pc.name+" to die!",self);
exec ("hunt "+pc.name,self);
goto start;
}
dilend
/*  replaced with do_write@commands
dilbegin letter_subst();
var
        cc:integer;
   u : unitptr;
   p : unitptr;
   s : string;
code
{
   :start:
   unsecure(u);
   unsecure(p);

   wait(SFB_CMD, command("write"));

   if (argument == "")
     goto start;

   p := activator;
   secure(p, start);

   u := findunit(p, argument, FIND_UNIT_INVEN, null);

if (u == null)
        {
        u := load("letter@basis");
        cc:=can_carry (activator,u,1);
        if (cc==1)
                {
                act("You realize that you have nothing to write on, so you "
+
                    "try to grab a piece of paper.  Unfortunately you " +
                    "can't seem to carry anything more.",
                     A_ALWAYS, p, null, null, TO_CHAR);
                        destroy (u);
                goto start;
                }
        else
                {
                act("You realize that you have nothing to write on, so you "
+
                    "grab a piece of paper.",
                    A_ALWAYS, p, null, null, TO_CHAR);
     link(u,p);
   }
  }
         goto start;
}
dilend
*/

dilbegin go_home(place : string); /* If we aren't where we're supposed to be, go back there. */
code
{
   heartbeat := PULSE_SEC*60;

:start:
   wait(SFB_TICK, TRUE);

   if (self.outside.nameidx != place)
   {
      act("$1n returns to where $1e belongs.",
          A_SOMEONE, self, null, null, TO_ALL);
      link(self, findroom(place));
      act("$1n has returned after being away for a while.",
          A_SOMEONE, self, null, null, TO_ALL);
   }

   goto start;
}
dilend /* go_home */

/*
dilbegin aware email_list();

var
   mail_expd  : extraptr;
   mail_list  : stringlist;
   new_list   : stringlist;
   my_name    : string;
   my_email   : string;
   temp_str   : string;
   temp_str2  : string;
   public     : integer;

   pc         : unitptr;

code
{
:init:
   heartbeat := PULSE_SEC*2;
   interrupt(SFB_MSG, (activator == self.outside), new_entry);

:start:
   wait(SFB_CMD, (command("public") or command("show")) and
                  (activator.type == UNIT_ST_PC));

   pc := activator;
   secure(pc, lost_pc);

   if (command("public")) goto public_set;
   if (command("show")) goto show_info;
   goto lost_pc;

:public_set:
   block;
   temp_str2 := "$" + pc.name;
   mail_expd := temp_str2 in self.extra;
   if (mail_expd == null)
   {
      act("You do not have an entry on the email list. Please set an " +
          "email using the mail command at Kurt.",
          A_ALWAYS, pc, null, null, TO_CHAR);
      goto lost_pc;
   }
   mail_list := mail_expd.names;
   my_name := mail_list.[1];
   my_email := mail_list.[2];
   public := atoi(mail_list.[3]);
   if (public == 0)
   {
      substring(mail_list, itoa(0));
      public := 1;
      act("Your email address is now available to anyone who wants to " +
          "see it.",
          A_ALWAYS, pc, null, null, TO_CHAR);
   }
   else
   {
      substring(mail_list, itoa(1));
      public := 0;
      act("Your email address is no longer visible to others.",
          A_ALWAYS, pc, null, null, TO_CHAR);
   }

   addstring(mail_list, itoa(public));
   subextra(self.extra, pc.name);
   addextra(self.extra, mail_list, "");
   store(self,"udgaard.mail_list_obj",TRUE);
   goto lost_pc;

:show_info:
   block;
   temp_str2 := "$" + argument;
   mail_expd := temp_str2 in self.extra;
   if (mail_expd == null)
   {
      act("That person does not have a listing.",
          A_ALWAYS, pc, null, null, TO_CHAR);
      goto lost_pc;
   }
   mail_list := mail_expd.names;
   my_name := mail_list.[1];
   my_email := mail_list.[2];
   public := atoi(mail_list.[3]);
   if ((public == 0) and (pc.level < 240))
   {
      act(my_name + " has chosen not to have a publicly available email. " +
          "Sorry.",
          A_ALWAYS, pc, null, null, TO_CHAR);
   }
   else
   {
      act("" + my_name + "'s email address is " + my_email + ".",
          A_ALWAYS, pc, null, null, TO_CHAR);
   }
   goto lost_pc;

:new_entry:
   temp_str := argument;
   temp_str2 := temp_str;
   log("Got new entry - " + temp_str);
   my_name := getword(temp_str);
   my_email := temp_str;
   mail_expd :=( "$" + my_name) in self.extra;
   if (mail_expd == null)
   {
      public := 0;
      addstring(new_list, "$" + my_name);
      addstring(new_list, my_name);
      addstring(new_list, my_email);
      addstring(new_list, itoa(public));
      addextra(self.extra, new_list, "");
   }
   else
   {
      mail_list := mail_expd.names;
      my_name := mail_list.[1];
      my_email := mail_list.[2];
      public := atoi(mail_list.[3]);

      substring(mail_list, itoa(public));
      substring(mail_list, my_email);
      my_email := getword(temp_str2);
      my_email := temp_str2;
      addstring(mail_list, my_email);
      addstring(mail_list, itoa(public));
      subextra(self.extra, "$" + my_name);
      addextra(self.extra, mail_list, "");
   }

   store(self,"udgaard.mail_list_obj",TRUE);
   log ("Stored after new entry.");
   goto lost_pc;

:lost_pc:
   unsecure(pc);
   goto start;
}
dilend */

dilbegin info_changer(); /* Change your maiden name and email */

var
   mail_expd  : extraptr;
   mail_list  : stringlist;
   new_list   : stringlist;
   my_name    : string;
   my_email   : string;
   temp_str   : string;
   temp_str2  : string;
   public     : integer;

   expd       : extraptr;
   pc         : unitptr;
   mail_obj   : unitptr;
   maiden_str : string;
   email_str  : string;
   creat      : string;

code
{
:init:
   heartbeat := PULSE_SEC*2;
   mail_obj := self.inside;
   if ((mail_obj == null) or (mail_obj.nameidx != "mail_list_obj"))
   {
      mail_obj:= restore(self.zoneidx+".mail_list_obj",null);
      if (mail_obj == null)
         mail_obj:=load("mail_list_obj@udgaard");
   }

:start:
   wait(SFB_CMD, (activator.type == UNIT_ST_PC) and (command("see") or
                  command("mail") or command("maiden") or command("public")
                  or command("show") or command("update") or
                  command("add") or command("remove")));

   pc := activator;
   secure(pc, lost_pc);

   if (command("see")) goto show_file;
   if (command("mail")) goto change_mail;
   if (command("maiden")) goto change_maiden;
   if (command("public")) goto public_set;
   if (command("show")) goto show_info;
   if (command("update")) goto new_entry;
   if (command("add")) goto god_add;
   if (command("remove")) goto god_remove;
   goto lost_pc;

:god_add:
   block;
   if (pc.level < 253)
   {
      act("Only Administrators can modify the list. Sorry.",
          A_ALWAYS, pc, null, null, TO_CHAR);
      goto lost_pc;
   }

   temp_str := argument;

   my_name := getword(temp_str);
   my_email := getword(temp_str);
   temp_str2 := getword(temp_str);

   if ((my_name == "") or (my_email == "") or (temp_str2 == ""))
   {
      act("You must fill in 3 parameters: name email public, " +
          "where email is the player's address and public is 1 " +
          "or 0 (0 meaning private).",
          A_ALWAYS, pc, null, null, TO_CHAR);
      goto lost_pc;
   }
   expd := ("$" + my_name) in self.inside.extra;
   if (expd)
   {
      act(my_name + " already has an entry.",
          A_ALWAYS, pc, null, null, TO_CHAR);
      goto lost_pc;
   }

   addstring(new_list, "$" + my_name);
   addstring(new_list, my_name);
   addstring(new_list, my_email);
   addstring(new_list, temp_str2);

   subextra(self.inside.extra, "$" + my_name);
   addextra(self.inside.extra, new_list, "");

   act(my_name + " added with email address " + my_email + ".",
       A_ALWAYS, pc, null, null, TO_CHAR);

   new_list := null;

   store(self.inside,"udgaard.mail_list_obj",TRUE);

   goto lost_pc;

:god_remove:
   if (pc.level < 253) goto start;

   if (cmdstr != "remove") goto start;

   block;

   temp_str := argument;

   my_name := getword(temp_str);

   if (my_name == "")
   {
      act("You must supply the name of a player.",
          A_ALWAYS, pc, null, null, TO_CHAR);
      goto lost_pc;
   }
   expd := ("$" + my_name) in self.inside.extra;
   if (not(expd))
   {
      act(my_name + " does not have an entry.",
          A_ALWAYS, pc, null, null, TO_CHAR);
      goto lost_pc;
   }

   temp_str2 := "$" + my_name;
   subextra(self.inside.extra, temp_str2);

   act(my_name + "'s entry has been removed.",
       A_ALWAYS, pc, null, null, TO_CHAR);

   store(self.inside,"udgaard.mail_list_obj",TRUE);

   goto lost_pc;

:new_entry:
   block;
   expd := "$email" in pc.info;
   if ((not expd) or (expd.descr == "") or (not("@" in expd.descr)))
   {
      act("Kurt says 'You have not set an email address. Please do so " +
          "with the mail command'",
          A_ALWAYS, pc, null, null, TO_CHAR);
      act("Kurt checks his files.",
          A_HIDEINV, pc, null, null, TO_REST);
      goto lost_pc;
   }
   email_str := expd.descr;

   temp_str := pc.name + " " + email_str;
   mail_obj := self.inside;
   if (mail_obj == null)
   {
      act("There was an error in adding you to the email list.",
          A_ALWAYS, pc, null, null, TO_CHAR);
      log("No List object found for email list in Kurt. Restarting.");
      goto init;
   }
   temp_str2 := temp_str;
   my_name := getword(temp_str);
   my_email := temp_str;
   mail_expd :=( "$" + my_name) in self.inside.extra;
   if (mail_expd == null)
   {
      public := 0;
      addstring(new_list, "$" + my_name);
      addstring(new_list, my_name);
      addstring(new_list, my_email);
      addstring(new_list, itoa(public));
      addextra(self.inside.extra, new_list, "");
   }
   else
   {
      mail_list := mail_expd.names;
      my_name := mail_list.[1];
      my_email := mail_list.[2];
      public := atoi(mail_list.[3]);

      substring(mail_list, itoa(public));
      substring(mail_list, my_email);
      my_email := getword(temp_str2);
      my_email := temp_str2;
      addstring(mail_list, my_email);
      addstring(mail_list, itoa(public));
      subextra(self.inside.extra, "$" + my_name);
      addextra(self.inside.extra, mail_list, "");
   }

   act("Kurt says 'Your email address has been updated on the email " +
       "listing to match your file information'",
       A_ALWAYS, pc, null, null, TO_CHAR);
   act("Kurt checks his files.",
        A_HIDEINV, pc, null, null, TO_REST);

   new_list := null;

   store(self.inside,"udgaard.mail_list_obj",TRUE);

   goto lost_pc;

:show_info:
   block;
   mail_obj := self.inside;
   if (mail_obj == null)
   {
      act("There was an error. Please try again.",
          A_ALWAYS, pc, null, null, TO_CHAR);
      log("No List object found for email list in Kurt. Restarting.");
      goto init;
   }
   temp_str2 := "$" + argument;
   mail_expd := temp_str2 in self.inside.extra;
   if (mail_expd == null)
   {
      act("Kurt says 'That person does not have a listing'",
          A_ALWAYS, pc, null, null, TO_CHAR);
      goto lost_pc;
   }
   mail_list := mail_expd.names;
   my_name := mail_list.[1];
   my_email := mail_list.[2];
   public := atoi(mail_list.[3]);
   if ((public == 0) and (pc.level < 240))
   {
      act("Kurt says '" + my_name + " has chosen not to have a " +
          "publicly available email - Sorry'",
          A_ALWAYS, pc, null, null, TO_CHAR);
      act("Kurt checks his files.",
          A_HIDEINV, pc, null, null, TO_REST);
   }
   else
   {
      act("Kurt says '" + my_name + "'s email address is " +
          "" + my_email + "'",
          A_ALWAYS, pc, null, null, TO_CHAR);
      act("Kurt checks his files.",
          A_HIDEINV, pc, null, null, TO_REST);
   }
   goto lost_pc;

:public_set:
   block;
   mail_obj := self.inside;
   if (mail_obj == null)
   {
      act("There was an error. Please try again.",
          A_ALWAYS, pc, null, null, TO_CHAR);
      log("No List object found for email list in Kurt. Restarting.");
      goto init;
   }
   temp_str2 := "$" + pc.name;
   mail_expd := temp_str2 in self.inside.extra;
   if (mail_expd == null)
   {
      act("Kurt says 'You do not have an entry on the email list. " +
          "Please set an email using the mail command'",
          A_ALWAYS, pc, null, null, TO_CHAR);
      act("Kurt checks his files.",
          A_HIDEINV, pc, null, null, TO_REST);
      goto lost_pc;
   }
   mail_list := mail_expd.names;
   my_name := mail_list.[1];
   my_email := mail_list.[2];
   public := atoi(mail_list.[3]);
   if (public == 0)
   {
      substring(mail_list, itoa(0));
      public := 1;
      act("Kurt says 'Your email address is now available to anyone " +
          "who wants to see it'",
          A_ALWAYS, pc, null, null, TO_CHAR);
      act("Kurt checks his files.",
          A_HIDEINV, pc, null, null, TO_REST);
   }
   else
   {
      substring(mail_list, itoa(1));
      public := 0;
      act("Kurt says 'Your email address is no longer visible to others'",
          A_ALWAYS, pc, null, null, TO_CHAR);
      act("Kurt checks his files.",
          A_HIDEINV, pc, null, null, TO_REST);
   }

   addstring(mail_list, itoa(public));
   subextra(self.inside.extra, pc.name);
   addextra(self.inside.extra, mail_list, "");
   store(self.inside,"udgaard.mail_list_obj",TRUE);
   goto lost_pc;

:show_file:
   block;
   expd := "$maiden" in pc.info;
   if ((not expd) or (expd.descr == ""))
      maiden_str := "You have no Maiden name set for your character. It "
+
                "would be a good idea to set one in case you lose your " +
                "password - e.g. 'maiden Mommy'.";
   else
      maiden_str := "Your character's maiden name is set to " +
                expd.descr + ".";

   expd := "$email" in pc.info;
   if ((not expd) or (expd.descr == ""))
   {
      email_str := "You do not have an email address set for your " +
               "character. It would be a good idea to set one - " +
               "e.g. 'email your@email.address' .";
   }
   else
   {
      email_str := "Your email address is set to " + expd.descr +
".";   }
/*
   creat := asctime(pc.birth);
   creat := "Your character was created " + creat + ".";
*/
   mail_expd := ("$" + pc.name) in self.inside.extra;
   if (not(mail_expd))
   {
      email_str := email_str + "<br/>You do not have an entry on the " +
                               "email list - please type " +
                               "'update'.";
   }
   else
   {
   public := atoi(mail_expd.names.[3]);
   if (public == 0)
   {
      email_str := email_str + "<br/>Your email address is private.";
   }
   else email_str := email_str + "<br/>Your email address is public.";
   }

   act(self.name + " says 'Here is your file information, " + pc.name +
"'<br/>",
       A_ALWAYS, pc, null, null, TO_CHAR);
      act("Kurt checks his files.",
          A_HIDEINV, pc, null, null, TO_REST);
   act("Your name is " + pc.name + " " + pc.title + ".<br/>You are " +
       "currently level " + itoa(pc.level) +  ".<br/>" +
       maiden_str + "<br/>" +
       email_str + "<br/><br/>You can change your maiden " +
       "name and email address. Don't forget to add your email to " +
       "our player email list by typing update (if you " +
       "haven't done so already, or have changed your address) - " +
       "'look sign' for info.",
       A_ALWAYS, pc, null, null, TO_CHAR);

   email_str := "";

   goto lost_pc;

:change_maiden:
   block;
   maiden_str := argument;
   if (maiden_str == "")
   {
      act(self.name + " says 'You can't have a blank Maiden Name, " +
          pc.name + "'",
          A_ALWAYS, pc, null, null, TO_CHAR);
      goto lost_pc;
   }
   subextra(pc.info, "$maiden");
   addextra(pc.info, {"$maiden"}, maiden_str);
   act(self.name + " says 'Your maiden name has been changed'",
       A_ALWAYS, pc, null, null, TO_CHAR);
   act("Kurt checks his files.",
       A_HIDEINV, pc, null, null, TO_REST);
   goto show_file;

   goto lost_pc;

:change_mail:
   block;
   email_str := argument;
   if ((email_str == "") or (not("@" in email_str)))
   {
      act(self.name + " says 'That is not a valid email address, " +
          pc.name + "'",
          A_ALWAYS, pc, null, null, TO_CHAR);
      goto lost_pc;
   }
   subextra(pc.info, "$email");
   addextra(pc.info, {"$email"}, email_str);
   act(self.name + " says 'Your email address has been changed. You " +
       "may wish to put your address on the email list. If so, " +
       "type update'<br/>",
       A_ALWAYS, pc, null, null, TO_CHAR);
      act("Kurt checks his files.",
          A_HIDEINV, pc, null, null, TO_REST);

   goto show_file;

   goto lost_pc;

:lost_pc:
   unsecure(pc);
   goto start;
}
dilend /* info_changer */

dilbegin all_block();
var
  word:string;
  args:stringlist;
code
{
   :start:
   wait(SFB_CMD, ((command("get")) or (command ("bury"))));
   word:=getword (argument);

   if (word== "all")
   {
      block;
      act("This command's 'all' argument has been restricted for Donations rooms.",
 A_ALWAYS, activator, null, null, TO_CHAR);
   }
   args:=split(word,".");
   if (length(args)>1)
   if (args.[0]=="all")
   {
         block;
      act("This command's 'all' argument has been restricted for Donations rooms.",
 A_ALWAYS, activator, null, null, TO_CHAR);

   }
         goto start;
}
dilend



dilbegin aware unique still_newbie();
code
{
interrupt (SFB_CMD, ((command ("level")) and
(activator==self)),lvl_check);
:start:
wait (SFB_DONE, command ("say") and
  (activator==self) and
(("help me" in argument) and
("newbie guide" in argument)));
if ((self.outside.nameidx+"@"+self.outside.zoneidx)=="nightmare@hobgob")
goto start;
subextra(activator.quests, NO_NEWBIE);
sendto("stillnewbie", findroom("newbie_hangout@newbie"));
goto start;
:lvl_check:
if (activator.level>5) quit;
goto start;
}
dilend

/* This is the special Valhalla program made just for Alex J Crosswell
   (Bloodrage) to help him administer playing on Valhalla */

dilbegin limittime();
var
  spent      : integer;
  playagain  : integer;

code
{
   heartbeat := PULSE_SEC * 60 * 5;

   :loop:

   if (realtime > playagain)
   {
      spent := 0;
      playagain := 0;
      goto playing;
   }

   wait(SFB_CMD, self==activator);

   if (command("quit") or command("tell") or command("flee"))
     goto loop;

   act("You have spent your time limit, come back at "+asctime(playagain),
A_ALWAYS, self, null, null, TO_CHAR);
   block;
   goto loop;

   :playing:

   wait(SFB_TICK, TRUE);
   spent := spent + 5;

   if (spent < 190)
      goto playing;

   if (spent > 240)
   {
      playagain := realtime + SECS_PER_REAL_DAY - 240 * 60;
      goto loop;
   }
   else if (spent > 230)
   {
      act("Your four hours are almost spent!", A_ALWAYS, self, null,
null, TO_CHAR);
   }
   else if (spent > 210)
   {
      act("Time is passing...!", A_ALWAYS, self, null, null,
TO_CHAR);
   }

   goto playing;
}
dilend

dilbegin eager_read();
var
   u : unitptr;
   state : integer;
code
{
   wait(SFB_CMD, activator == self.outside);

   state := 0;
   u := self.outside;
   secure(u, stop);

   pause;
   heartbeat := PULSE_SEC * 45;

   :loop:
   wait(SFB_CMD | SFB_TICK, TRUE);
   if (command("read"))
   {
      if (findunit(u, argument, FIND_UNIT_IN_ME, null) == self)
        quit;
      else if (("chapter 1" in argument) or
               ("chapter 2" in argument) or
               ("chapter 3" in argument) or
               ("chapter 4" in argument) or
               ("chapter 5" in argument) or
               ("chapter 6" in argument))
        quit;
   }
   else if (command(CMD_AUTO_TICK))
   {
      state := state + 1;

      if (state <= 2)
        act("You should read $2n by writing: 'read handbook'",
     A_ALWAYS, u, self, null, TO_CHAR);
      else if (state == 3)
        act("$2n wants to be read.",
     A_ALWAYS, u, self, null, TO_CHAR);
      else if (state == 4)
        act("$2n tells you, 'Read me now or I will make you!'",
     A_ALWAYS, u, self, null, TO_CHAR);
      else if (state == 5)
      {
        exec("read handbook", u);
        quit;
      }
   }
   goto loop;

   :stop:
   quit;
}
dilend


dilbegin recall home();
var
   hour : integer;
   i : integer;

code
{
   hour := -24;

   :start:
   wait(SFB_CMD, (activator == self.outside) and command("home"));
   block;
   if (self.outside.position == POSITION_FIGHTING)
   {
      act("The $2N does not work in combat.",
   A_ALWAYS, self.outside, self, null, TO_CHAR);
      goto start;
   }
   if (self.equip == 0)
   {
      act("The $2N must be worn for it to work.",
   A_ALWAYS, self.outside, self, null, TO_CHAR);
      goto start;
   }
   if (activator.level > 3)
   {
      act("As you attempt to use $2n it suddenly dissolves.",
   A_ALWAYS, self.outside, self, null, TO_CHAR);
      act("$1n's $2n suddenly dissolves as $1e attempts to use it,",
   A_ALWAYS, self.outside, self, null, TO_REST);
      destroy(self);
   }
   i := hour - (mudhour + mudday * MUD_DAY);
   if (i < 0)
     i := -i;
   if (i < 6)
   {
      act("The $2N has not charged enough power yet.",
   A_ALWAYS, self.outside, self, null, TO_CHAR);
      goto start;
   }
   hour := mudhour + mudday * MUD_DAY;
   act("Your $2N glows and you feel transported to another place!",
        A_ALWAYS, self.outside, self, null, TO_CHAR);
   act("The $2N on $1n's finger glows brightly as $1e vanishes in a "+
       "flash of light!", A_ALWAYS, self.outside, self, null, TO_REST);
   link(self.outside, findroom(self.outside.hometown));
   exec("look", self.outside);
   act("$1n appears in a flash of light!",
       A_ALWAYS, self.outside, self, null, TO_REST);
   goto start;
}
dilend


dilbegin blowaway(s : string);
code
{
   heartbeat := PULSE_SEC * 120;

   :loop:
   pause;

   if (self.outside.type == UNIT_ST_ROOM)
   {
      act(s, A_SOMEONE, self, null, null, TO_ROOM);
      destroy(self);
   }

   goto loop;
}
dilend


dilbegin statue_load(pc : unitptr, s : string, i : integer);
var
  u : unitptr;

code
{
   if (findsymbolic(pc, s, FIND_UNIT_INVEN | FIND_UNIT_EQUIP) == null)
   {
      u := load(s);
      u.cost := 0;
      u.height := pc.height;
      link(u, pc);
      if (i)
        dilcopy("blowaway@udgaard($1n explodes in a flash of "+
         "bright yellow light!)", u);
   }
   return;
}
dilend

dilbegin clone_attr(original : unitptr, tgt : unitptr);
var
   i : integer;

code
{

   /* - - - Abilities - - - */

   i := 0;

   while (i < ABIL_TREE_MAX)
   {
      tgt.abilities[i] := original.abilities[i];
      i := i + 1;
   }

   /* tgt.level   := original.level; */
   /* tgt.max_hp := original.max_hp; */
   tgt.hp     := original.hp;

   /* - - - Spells - - - */

   i := 0;

   if (tgt.type == UNIT_ST_PC)
   {
      while (i < SPL_GROUP_MAX)
      {
         tgt.spells[i] := (3 * original.spells[i]) / 2;
         i := i + 1;
      }
   }
   else
   {
      while (i < SPL_GROUP_MAX)
      {
         tgt.spells[i] := original.spells[i];
         i := i + 1;
      }
   }



   /* - - - Weapons - - - */

   i := 0;

   if (tgt.type == UNIT_ST_PC)
   {
      while (i < WPN_GROUP_MAX)
      {
         tgt.weapons[i] := (3 * original.weapons[i]) / 2;
         i := i + 1;
      }
   }
   else
   {
      while (i < SPL_GROUP_MAX)
      {
         tgt.weapons[i] := original.weapons[i];
         i := i + 1;
      }
   }

   quit;
}
dilend



dilbegin restore_bounty();
external
 integer walk_room@function (s:string,i:integer);

var
tf:integer;
  i : integer;
code
{
   heartbeat := PULSE_SEC * 5;

   i := dildestroy("hunt@udgaard", self);
   i := dildestroy("checkaround@udgaard", self);
   i := dildestroy("inter_target@udgaard", self);
tf:=     walk_room@function ("accuse_room@midgaard",4);

   dilcopy("wait_for_bounty@udgaard", self);
   quit;
}
dilend


dilbegin checkaround(pcname : string, uid : integer);
var
  pc   : unitptr;
  s    : string;

code
{
   /* As long as we are in combat, do nothing.... */

   on_activation(self.position == POSITION_FIGHTING, skip);

   heartbeat := PULSE_SEC * 3;

   :loop:
   s := pcname;
   pc := findunit(self, s, FIND_UNIT_SURRO, null);

   if (pc.idx == uid)
   {
      if (not isset(pc.charflags, CHAR_OUTLAW))
      {
         dilcopy("restore_bounty@udgaard", self);
         quit;
      }

      secure(pc, gonner);

      if (self.master != pc)
      {
         exec("follow "+pc.name, self);
         pause;
      }

      exec("backstab "+pc.name, self);
      pause;

      exec("say It is time, "+pc.name+"... time to die!", self);
      pause;

      :finish_him:
      exec("kill "+pc.name, self);
      pause;

      goto finish_him;
   }

   :gonner:
   quit;
}
dilend


dilbegin collect();
external
 integer walk_room@function (t:string,i:integer);

var
tf:integer;
   u : unitptr;
   s : unitptr;
temp : unitptr;
code
{
   heartbeat := PULSE_SEC * 10;
tf:=     walk_room@function ("accuse_room@midgaard",4);

   :again:
   u := findunit(self, "head", FIND_UNIT_INVEN, null);
   if (u)
   {
      secure(u, gaveit);
      exec("give head to captain", self);
      pause;
      goto again;

      :gaveit:
      exec("smirk", self);
      pause;
      goto again;
   }

   pause;

   s := findunit(self, "safe", FIND_UNIT_HERE, null);

   if (s)
   {
      secure(s, again); /* Will not happen */
      exec("emote stores his stuff in the safe.", self);
      u := self.inside;
      while (u)
      {
        temp := u.next;
		 if (u.type == UNIT_ST_OBJ)
         {
           if (u.equip == 0)
             link(u, s);
         }
         u := temp;
      }
   }

   pause;


   dilcopy("restore_bounty@udgaard", self);
   quit;
}
dilend


dilbegin intercept_kill(uid : integer);
external
  collect@udgaard();

var
   tmpid : integer;
   i     : integer;

code
{
   heartbeat := PULSE_SEC * 3;

   :loop:
   wait(SFB_DEAD, activator == self.fighting);
   tmpid := activator.idx;

   if (tmpid == uid)
   {
      i := dildestroy("hunt@udgaard", self);
      i := dildestroy("checkaround@udgaard", self);
      i := dildestroy("inter_target@udgaard", self);
   }
  pause;
  exec("decap corpse", self);
  exec ("follow al",self);
  pause;
  exec("cackle",self);
  exec("take all from corpse", self);
  pause;
  exec("shout Valhalla is a much safer place! I bagged another outlaw!", self);

   if (tmpid == uid)
   {
      collect@udgaard();
      quit;
   }

   goto loop;
}
dilend


dilbegin inter_target(pcname : string, uid : integer);
var
  pc   : unitptr;

code
{
   /* As long as we are in combat, do nothing.... */

   on_activation(self.position == POSITION_FIGHTING, skip);

   heartbeat := PULSE_SEC * 3;

   :loop:
   wait(SFB_CMD, activator.idx == uid);

   pc := activator;
   secure(pc, loop);

   if (self.master != pc)
   {
      exec("follow "+pc.name, self);
      pause;
   }

   if (not isset(pc.charflags, CHAR_OUTLAW))
   {
      dilcopy("restore_bounty@udgaard", self);
      quit;
   }

   exec("kill "+pc.name, self);
   pause;

   goto loop;
}
dilend

dilbegin hunt(pcname : string, uid : integer);

external checkaround(s : string, i : integer);
 integer walk_room@function (t:string,i:integer);

var
tf:integer;
  s    : string;
  pc   : unitptr;
  room : unitptr;
  i    : integer;

code
{
   heartbeat := PULSE_SEC * 5;

   :loop:
   checkaround(pcname, uid);

   :find:
   pause;

   s  := pcname;

   pc := findunit(self, s, FIND_UNIT_WORLD, null);

   if (pc.idx == uid)
   {
      room := pc.outside;
      while (room.type != UNIT_ST_ROOM)
        room := room.outside;

      s := room.nameidx+"@"+room.zoneidx;

      pause;
      tf:=     walk_room@function ("+s+",4);
	       goto loop;
   }
   else
   {
      heartbeat := PULSE_SEC * 40;
      pause;
      i := i + 1;
      heartbeat := PULSE_SEC * 5;
      if (i > 20)
      {
         /* Mission unaccomplished */
         exec("sigh", self);

         dilcopy("restore_bounty@udgaard", self);
         quit;
      }

      goto find;
   }
}
dilend


/* ------------------ DIL FROM GUILD SHOPS ----------------------- */

/* ----------------------- HOLYWATER DIL ---------------- */

/* Works only for (ex) healers and paladins. Does not work on Necros.
Blesses PC's. Damages undead and demons. Use with care. */

dilbegin holy_water();
var
 mob : unitptr;
 n : integer;
 txt : string;
code
{
 :start:
wait(SFB_CMD,command("sprinkle")and(activator==self.outside));
block;
txt:=argument;
mob:=findunit(activator,txt,FIND_UNIT_SURRO,null);

if (not(mob))
{
sendtext("Sprinkle who?<br/>",self.outside);
goto start;
}

if ((mob.type == UNIT_ST_PC)and
     (mob!=activator)and(visible(self.outside,mob)))
{
act("You open your vial and sprinkle holy water over $3n with a blessing.",
A_SOMEONE,self.outside,self,mob,TO_CHAR);
act("$1n opens a vial and sprinkles holy water over $3n with a blessing.",
A_SOMEONE,self.outside,self,mob,TO_NOTVICT);
act("$1n opens a vial and sprinkles holy water over you with a blessing.",
A_SOMEONE,self.outside,self,mob,TO_VICT);
if ((("$Udgaard Healer" in self.outside.quests)or
     ("$Midgaard Paladin" in self.outside.quests))and
     (mob.guild!=GUILD_NECROMANCER))
{
n:=cast_spell(SPL_BLESS,self.outside,self,mob,"");
}
destroy(self);
}

if ((mob.type == UNIT_ST_PC)and(mob==activator))
{
act("You open your vial and sprinkle yourself with the holy water.",
A_SOMEONE,self.outside,self,mob,TO_CHAR);
act("$1n opens a vial and sprinkles $1mself with holy water.",
A_SOMEONE,self.outside,self,mob,TO_REST);
if ((("$Udgaard Healer" in self.outside.quests)or
     ("$Midgaard Paladin" in self.outside.quests))and
     (self.outside.guild!=GUILD_NECROMANCER))
{
n:=cast_spell(SPL_BLESS,self.outside,self,self.outside,"");
}
destroy(self);
}

if (mob.type==UNIT_ST_NPC)
{
act("You sprinkle $3n with holy water!",
A_SOMEONE,self.outside,self,mob,TO_CHAR);
act("$1n sprinkles $3n with holy water!",
A_SOMEONE,self.outside,self,mob,TO_REST);

if (((mob.race>5999)and(mob.race<6999)) or
    ((mob.race>5019)and(mob.race<5030)) or
    ((mob.race>5000)and(mob.race<5006)))
{
act("The water melts $3n like hot acid!",
A_SOMEONE,self.outside,self,mob,TO_ALL);
n:=cast_spell(SPL_ACIDBALL_1,self.outside,self,mob,"");
exec("kill "+self.outside.name,mob);
}
destroy(self);
}
sendtext("Sprinkle who? --TEST--<br/>",self.outside);
goto start;
}
dilend

/* ----------------------- TENT DIL --------------------- */

dilbegin tent_dil();
var
 item:unitptr;
code
{
        :start:
wait(SFB_DONE,command("get")and(self==medium));
if (self.inside)
  {
act("You almost break your back trying to lift the tent, there must be "+
"something inside!<br/>"+
"You drop the tent back to the ground.",
A_SOMEONE,activator,self,null,TO_CHAR);
link(self,self.outside.outside);
goto start;
}
goto start;
}
dilend

/* ------------------- SMOKING DIL ----------------------------- */

dilbegin tobacco_pouch();
code
{
        :start:
wait(SFB_DONE,command("look")and(self==target));
if (self.value[1]>0)
sendtext("It currently contains enough tobacco for "+itoa(self.value[1])+
" fillings of the pipe.<br/>",activator);
else
sendtext("It is empty.<br/>",activator);
goto start;
}
dilend

dilbegin recall aware pipe_dil2();
code
{
        :start:
wait(SFB_DONE,command("remove")and(self.value[1]==1)and
(medium==self)and(activator==self.outside));

self.value[1]:=0;
self.value[2]:=0;
sendtext("You put out your "+self.name+" and knock out the "+
"remaining ashes.<br/>",self.outside);
act("$1n puts out $1s $2N and knocks out the remaining ashes.",
A_HIDEINV,self.outside,self,null,TO_REST);
goto start;
}
dilend

dilbegin recall aware pipe_dil(time:integer);
var
        pc      : unitptr;
        u       : unitptr;
code
{
        :start:
interrupt(SFB_CMD,(command("fill")or command("light")or
command("extinguish"))
and(activator==self.outside)and(activator.position>POSITION_SLEEPING)
,commands);

wait(SFB_DONE,self.value[1]==1);

heartbeat:=PULSE_SEC*time/2;
wait(SFB_TICK,TRUE);
wait(SFB_TICK,TRUE);

self.value[1]:=0;
self.value[2]:=0;
sendtext("Your pipe goes out.<br/>",self.outside);
act("$1n's pipe goes out.",A_HIDEINV,self.outside,self,null,TO_REST);
goto start;

        :commands:
u:=findunit(self.outside,argument,FIND_UNIT_IN_ME,null);
if ((u==null)or(u!=self)) goto start;
pc:=self.outside;
secure(pc,gone);

/*      Value 1 of the pipe is lit (1) or not (0)
        Value 2 of the pipe is filled (1) or not (0)    */

if (command("fill")and(self.value[2]==0))
{
block;
u:=findunit(pc,"tobacco pouch",FIND_UNIT_IN_ME,pc.inside);
if ((u)and(u.value[1]>0))
 {
 self.value[2]:=1;
 u.value[1]:=u.value[1]-1;
 sendtext("You fill your pipe with some tobacco from your pouch.<br/>"
 ,pc);
 act("$1n fills $1s $2n with some tobacco from $1s tobacco pouch."
 ,A_HIDEINV,pc,self,u,TO_REST);
 goto start;
 }
sendtext("You regretfully realize that you lack tobacco to fill in your "+
"pipe!<br/>",pc);
goto start;
}

if (command("fill")and(self.value[2]==1))
{
block;
sendtext("Your "+self.name+" is already filled with tobacco!<br/>",pc);
goto start;
}

if (command("extinguish")and(self.value[1]==0))
{
block;
sendtext("But your pipe is not lit!<br/>",pc);
goto start;
}

if (command("extinguish")and(self.value[1]==1))
{
block;
sendtext("You extinguish your "+self.name+".<br/>",pc);
self.value[1]:=0;
goto start;
}

if (command("light")and(self.value[1]==0))
{
block;
if (self.equip==WEAR_HOLD)
 {
 if (self.value[2]==1)
  {
  sendtext("You puff on your pipe and light it, inhaling the smoke
deeply.<br/>",pc);
  act("$1n lights a pipe, blowing out a cloud of smoke."
  ,A_SOMEONE,pc,self,null,TO_REST);
  self.value[1]:=1;
  self.value[2]:=0;
  goto start;
  }
 if (self.value[2]==0)
  {
  sendtext("You lack tobacco in your pipe!<br/>",pc);
  goto start;
  }
 }
sendtext("You need to hold your pipe to light it, do you want it smoking "+
"in your pocket?<br/>",pc);
goto start;
}

if (command("light")and(self.value[1]==1))
{
block;
sendtext("But your pipe is already lit..?<br/>",pc);
goto start;
}

else goto start;

        :gone:
unsecure(pc);
self.value[1]:=0;
goto start;
}
dilend

dilbegin aware cigar_dil2();
code
{
        :start:
wait(SFB_DONE,command("remove")and(activator==self.outside)and
(medium==self));

if (self.value[1]==1)
{
self.value[1]:=0;
sendtext("You put out your "+self.name+".<br/>",self.outside);
act("$1n puts out $1s $2N.",A_HIDEINV,self.outside,self,null,TO_REST);
goto start;
}
else goto start;
}
dilend

dilbegin recall aware cigar_dil(time:integer);
var
        pc      : unitptr;
        u       : unitptr;
        item    : unitptr;
code
{
        :start:
interrupt(SFB_CMD,(command("light")or command("extinguish"))
and(activator==self.outside)and(activator.position>POSITION_SLEEPING)
,commands);

wait(SFB_CMD,(self.value[1]==1)and(self.equip==WEAR_HOLD));

heartbeat:=PULSE_SEC*time/2;
wait(SFB_TICK,TRUE);
wait(SFB_TICK,TRUE);

self.value[1]:=0;
sendtext("Your cigar burns out.<br/>",self.outside);
act("$1n's cigar burns out.",A_HIDEINV,self.outside,self,null,TO_REST);
u:=load("dogend@udgaard");
secure(u,blah);
link(u,self.outside);
addequip(u,WEAR_HOLD);
destroy(self);
quit;
        :blah:
unsecure(u);
goto start;

        :commands:
item:=findunit(self.outside,argument,FIND_UNIT_IN_ME,null);
if ((item==null)or(item!=self)) goto start;
pc:=activator;
secure(pc,gone);

/*      Value 1 of the cigar is lit (1) or not (0)      */

if (command("extinguish")and(self.value[1]==0))
{
block;
sendtext("But your "+self.name+" is not lit!<br/>",pc);
goto start;
}

if (command("extinguish")and(self.value[1]==1))
{
block;
sendtext("You put out your "+self.name+".<br/>",pc);
self.value[1]:=0;
goto start;
}

if (command("light")and(self.value[1]==0))
{
block;
if (self.equip==WEAR_HOLD)
 {
  sendtext("You light your "+self.name+".<br/>",pc);
  act("$1n lights "+self.title+", blowing out a cloud of smoke."
  ,A_SOMEONE,pc,self,null,TO_REST);
  self.value[1]:=1;
  goto start;
 }
sendtext("You need to hold your cigar to light it, do you want it smoking "+
"in your pocket?<br/>",pc);
goto start;
}

if (command("light")and(self.value[1]==1))
{
block;
sendtext("You re-light your "+self.name+", just to be sure.<br/>",pc);
act("$1n re-lights $1s $2N, just to be on the safe side.",
A_SOMEONE,pc,self,null,TO_REST);
goto start;
}
goto start;

        :gone:
unsecure(pc);
self.value[1]:=0;
goto start;
}
dilend

dilbegin recall aware smoke_dil();
var
 u : unitptr;
 i : integer;
 txt : string;
code
{
 :start:
interrupt(SFB_CMD,command("smoke")and(activator==self.outside),smoking);
wait(SFB_CMD,(self.value[1]==1)and(self.equip==WEAR_HOLD));
 :smokeloop:
if ((self.value[1]==1)and(not(command("remove"))))
{
i:=rnd(1,5);
heartbeat:=PULSE_SEC*5;
pause;
if (i==1)
{
sendtext("You inhale deeply the tobacco smoke.<br/>",self.outside);
act("$1n inhales deeply the tobacco smoke from $1s $2n with every sign "+
"of enjoyment.",A_HIDEINV,self.outside,self,null,TO_REST);
}
if (i==2)
{
sendtext("You blow smoke rings in the air.<br/>",self.outside);
act("$1n blows smoke rings in the air.",
A_SOMEONE,self.outside,self,null,TO_REST);
}
if (i==3)
{
sendtext("Puffing energetically on your "+self.name+", you blow a cloud of "+
"smoke in the air.<br/>", self.outside);
act("Puffing energetically on $1s $2n, $1n blows a cloud of smoke.",
A_HIDEINV,self.outside,self,null,TO_REST);
}
if (i==4)
{
sendtext("You take another puff on your "+self.name+".<br/>",self.outside);
act("$1n takes another puff on $1s $2n.",
A_HIDEINV,self.outside,self,null,TO_REST);
}
if (i==5)
{
sendtext("You enjoy the smoke of your "+self.name+".<br/>",self.outside);
act("A cloud of tobacco smoke surrounds $1n.",
A_HIDEINV,self.outside,self,null,TO_REST);
}
heartbeat:=PULSE_SEC*20;
pause;
goto smokeloop;
}
else goto start;

 :smoking:
/* -------------------- Smoke Social ---------------------- */
block;
if (self.value[1]==0)
{
sendtext("Light your "+self.name+" first, then smoke it!<br/>",self.outside);
goto smokeloop;
}

txt:=argument;
if ((txt==self.outside.name)or(txt==self.name)or
((txt=="cigar")and("cigar" in self.name))or
((txt=="pipe")and("pipe" in self.name)))
txt:="";
if (txt=="")
  {
 if (rnd(1,3)==1)
 {
 sendtext("You puff on your "+self.name+" and blow smoke into "+
 "the air.<br/>",self.outside);
 act("$1n puffs on $1s $2N and blows smoke into the air.",
 A_SOMEONE,self.outside,self,null,TO_REST);
 goto start;
 }
 if (rnd(1,2)==1)
 {
 sendtext("You inhale the aromatic smoke deeply.<br/>",self.outside);
 act("$1n inhales deeply the smoke of $1s $2N.",
 A_SOMEONE,self.outside,self,null,TO_REST);
 goto start;
 }
 if (rnd(1,2)==1)
 {
 sendtext("You blow smoke circles in the air.<br/>",self.outside);
 act("$1n blows smoke circles in the air.",
 A_SOMEONE,self.outside,self,null,TO_REST);
 goto start;
 }
 sendtext("You pulse on your "+self.name+".<br/>",self.outside);
 act("$1n pulses on $1s $2n.",
 A_SOMEONE,self.outside,self,null,TO_REST);
 goto start;
  }
 if (txt!="")
 {
 u:=findunit(self.outside,txt,FIND_UNIT_SURRO,null);
        if ((u.type==UNIT_ST_PC)and(rnd(1,2)==1))
         {
         sendtext("You blow a cloud of smoke in the face of "+u.name+".<br/>",
         self.outside);
         act("$1n blows a cloud of tobacco smoke in $3n's face.",
         A_SOMEONE,self.outside,self,u,TO_NOTVICT);
         act("$1n blows a cloud of tobacco smoke in your face.",
         A_SOMEONE,self.outside,self,u,TO_VICT);
         goto start;
         }
        if (u.type==UNIT_ST_PC)
         {
         sendtext("You blow a neat smoke ring right at "+u.name+"!<br/>",
         self.outside);
         act("$1n blows a neat smoke ring right at $3n.",
         A_SOMEONE,self.outside,self,u,TO_NOTVICT);
         act("$1n blows a ring of smoke right in your face.",
         A_SOMEONE,self.outside,self,u,TO_VICT);
         goto start;
         }
  if (u.type==UNIT_ST_NPC)
  {
         sendtext("You blow a cloud of smoke at "+u.title+".<br/>",
         self.outside);
         act("$1n blows a cloud of tobacco smoke at $3n.",
         A_SOMEONE,self.outside,self,u,TO_NOTVICT);
         act("$1n blows a cloud of tobacco smoke in your face.",
         A_SOMEONE,self.outside,self,u,TO_VICT);
   if (u.alignment<0)
  {
  exec("growl "+self.outside.name,u);
  }
  goto start;
  }
 sendtext("No-one here by this name.<br/>",self.outside);
 }
goto start;
}
dilend

%rooms
post_path
names {"path"}
title "A Small Dirt Path"
descr
"The small dirt path has trees lining both sides of it. Not far in the
distance a spiral of smoke floats up from a chimney of a log cabin. In
front of the cabin are various furs and pelts hung to dry in the wind.
Southward along the path one can hear the everyday lives of a small
village."
gmap(642,252)
movement SECT_CITY
south to village_rd7 descr
"The path continues south.";
north to trading_post descr
"A log cabin can be seen ahead";
end

trading_post
names {"trading post"}
title "Ben's Trading"
descr
"Although the cabin is fairly large, there are so many furs and pelts
laying around that it is difficult to move. A wood stove along the north
wall of the cabin provides heat to help dry some of the newer hides."
gmap(644,200)
movement SECT_INSIDE
south to post_path descr
"The door opens onto a path.";
end


village_rd4
title "Village Road"
descr
"To the east is a bend in the village road. The armourer and
weapon smith are located north and south of here. The village road continues
east and west."
movement SECT_CITY
gmap(588,582)
north to armourer;
south to weaponsmith;
west to village_rd3;
east to village_rd5;
ALWAYS_LIGHT
end


village_rd5

title "Bend in the Village Road"
descr
"The village road bends from north to west here. To the east is a tall
wooden watchtower, and large trees block all passage to the south."
extra {"village road", "road"}
"The road is constructed of hard-packed dirt."
extra {"wooden watchtower", "watchtower", "tower"}
"This watchtower helps to protect the town of Udgaard."
extra {"large trees", "trees", "tree"}
"These trees seem to be very old."
movement SECT_CITY
gmap(642,582)
west to village_rd4 descr "Village Road.";
east to watch_tower descr "A wooden watch tower.";
north to village_rd6 descr "Village Road.";
ALWAYS_LIGHT
end

village_rd6

title "Village Road"
descr
"The village road leads from north to south here. West of the road is
the side of the armourer's shop, and trees block all passage to the east."
extra {"village road", "road"}
"The road is constructed of hard-packed dirt."
extra {"large trees", "trees", "tree"}
"These trees seem to be very old."
extra {"armourer's shop", "shop"}
"You can outfit yourself with some better equipment here."
movement SECT_CITY
gmap(642,526)
north to village_rd7 descr "Village road north of Udgaard.";
south to village_rd5 descr "Bend in the Village Road.";
ALWAYS_LIGHT
end

village_rd7

title "Village Road North of Udgaard"
descr
"At this point the village road bends from west to south. To the north
is a small house, and to the east all passage is blocked by large trees."
extra {"village road", "road"}
"The road is constructed of hard-packed dirt."
extra {"large trees", "trees", "tree"}
"These trees seem to be very old."
extra {"small house", "house"}
"This small house is owned by Arny the weapon smith, whose shop is in the
main village to the south of here."
movement SECT_CITY
gmap(642,310)
west to village_rd8 descr "Village Road.";
south to village_rd6 descr "Village Road.";
north to post_path descr
"A small dirt path";
ALWAYS_LIGHT
end

village_rd8

title "Village Road"
descr
"The village road travels from west to east here. Some small houses are
north, while to the south is the back side of Slade's Better Clothing."
extra {"village road", "road"}
"The road is constructed of hard-packed dirt."
extra {"small houses", "houses", "house"}
"These houses are owned by the inhabitants of Udgaard."
extra {"better clothing", "back side", "clothing", "slades", "slade"}
"You can buy armour here, helping to protect your body. To get there,
follow the path to the east."
movement SECT_CITY
gmap(478,310)
west to village_rd9 descr "Village Road.";
east to village_rd7 descr "Village Road north of Udgaard.";
ALWAYS_LIGHT
end


village_rd9

title "Village Road"
descr
"The village road runs from west to east here. To the south is
the back side of the bank."
extra {"village road", "road"}
"The road is constructed of hard-packed dirt."
extra {"back side", "bank"}
"You can deposit your money at the bank, making it protected from thieves.
To get there, follow the Village Road to the east."

gmap(424,310)


#ifdef EXTENDEDMUD
DESCR: "A large round building with a sign is to the north, while "

extra {"round building","hall","building"}
"The building is carved with battle scenes and painted a bright
yellow." 

extra {"sign"}
"The sign is really a picture of broken weapons: axes, swords, scythes and
maces are a few. It lets you know you have come to the Hall of Broken Arms"
#endif

movement SECT_CITY
/* EXTENDEDMUD north to moot_ent descr "Moot Entrance.";          */
west to village_rd10 descr "End of the Village Road.";
east to village_rd8 descr "Village Road.";
ALWAYS_LIGHT
end


/* SHould probably not be in Udgaard.... It's the simple starting village... */
/* MOOTHALL mod 2.201*/
/*DOWNSTAIRS MAIN AREA */
/* entrance here place guard/bouncer here. Modified to adhere to house
   style specifications by Heulflodyn 01/07/2006 
   Second rewrite by Heulflodyn 01/18/2006  */

moot_ent
title "The Entrance"
descr
"The short entrance way to The Hall of Broken Arms is dim, with two high
solid wooden walls constricting traffic. There is room for one
person to defend the entrance with an axe or a large sword in
case of invasion. Nicks and scratches on the wall indicate
that perhaps it has been necessary in the past. A <a cmd='read #'>sign</a> hangs on
the eastern wall and the head of a broken pike on the western.
The main room of the hall is visable to the north and the village road
goes south."

extra {"head", "pike"}
"The pike blade is the weapon that killed the giant Kewor
after his rampage upon the town of ThorBardin. Twenty citizens
were lost to his voracious appetite. The Rotten gang used townspeople
as bait to lure Kewor into a trap. The ex-fighter Tablen, thrust the
pike through one of the giant's eyes and into his brain killing him.
The giant cursed Tablen who died one year later to the day."

extra {"sign"}
"<pre><br/>
   * To see the competition type look board. <br/><br/>
   * To see the requirements for the competition type <br/><br/>
     look &lt;competition number&gt; ex: 'look 1'<br/><br/>
   * To see standings in the competition type <br/><br/>
     list &lt;competition number&gt; ex: 'list 1'</pre>"

extra {"$smell"}
"Wood smoke, food and sawdust fill your nostrils as you enter."

extra {"$listen"}
"Rowdy singing, loud talking and the occasional stories mingle with
sounds from the village road."

/*No mob flag added to cut down spam */
ALWAYS_LIGHT
movement SECT_INSIDE
flags {UNIT_FL_NO_WEATHER, UNIT_FL_NO_MOB, UNIT_FL_INDOORS, UNIT_FL_NO_BURY }

north to moot_sou descr
"The Southern Hall";

south to village_rd9 descr
"A Village Road";
end

/*load current xp contest board here, */

moot_sou
title "The Southern Hall"
descr
"The circular hall has long tables with benches
and chairs are set throughout. Pillars support the
flat ceiling with beams of wood stretching between each one.
Lamps hang from the ceiling beams to augmenting the light
from the great northern fireplace. The pillar nearest to the door
has a plaque mounted on it. Vendor stalls ring the hall providing
services and displaying wares. A food vendor's stall is southeast,
while southwest is a mead shop. Other parts of the hall are to
the east and the west." 

extra {"lamps"}
"The bronze lamps have a strange orange undertone in the metal. 
They are dwarven manufactured from Fortress Farginok
where many minerals are found. The chimney for each lamp is 
a single piece of blown glass, and shields the flame from drafts. 
Someone tends to these everyday for no soot shows on the lamp or 
the glass and each lamp is filled with fragrant oil."

extra {"pillars"}
"The pillars are evenly spaced in two concentric circles.
They are elaborately carved on two sides each with various
battle scenes from history and legend." 

extra {"plaque"}
"This gem is said to have been set into the pommel of the famed 
singing sword of Torudem. Enchanted by the Mystics of old, it 
was used in the battle of Cenedal. It is unknown what happened 
to Torudem but this gem was discovered at his last known location. "

extra {"stone","gem"}
"The glowing gem flickers with an inner fire that does not
have any relation to the lights in the room. The faceted jewel 
pulses rhythmically a deep red, while lighter flashes occur 
with random frequency and intensity."

extra {"tables"}
"Long heavy wooden tables sit solidly on the floor. They are scraped,
scarred and stained by years of use."

extra {"chairs"}
"The heavy chairs are made of wood darkened by age. The bottom of the 
legs are, worn and uneven."

extra {"benches"}
"Benches sit beside most of the tables. The wood may have once been light
but now it is grey with age. They are well used, the seats are smooth
from years of use."

extra {"$smell"}
"Woodsmoke, rosemary and mead assault the nose. "

extra {"$listen"}
"Snatches of conversation surround you, 'Well, at least
he died fast.', 'I hate Sal Kanar' and 'Clanwar, no that never
happens' are just a few you hear."

ALWAYS_LIGHT
movement SECT_INSIDE
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_BURY }

north to moot_cen descr
"Hall Center";

east to moot_soea descr
"Southeast Hall";

southeast to moot_food descr
"A food counter";

south to moot_ent descr
"A small hallway";

west to moot_sowe descr
"Southwest Hall";

southwest to moot_bar descr
"a bar";

end


/*load zone contest, guide or other voted board here,  */

moot_soea
title "The Southeastern Hall"
descr
"The tables in this section are not in any particular formation,
as if they are moved a great deal. Wooden pillars support 
darkened beams hung with lamps. One has a plaque attached to it.
Northwest of here the fire flickers in the center hall. A vendor's 
stall of some sort waits to the southeast. North leads deeper into
the hall, while west heads towards the exit."

extra {"plaque"}
"The metal ball on this plaque is said to be the molten remains
of the sword named Todedig. The dragon, Smocilor, toasted Sir
Castan of Nymgaard during the dragon wars and left only this
blob of metal to be returned to his family."

extra {"ball"}                                                 
"An irregular round piece of dull metal is held to the plaque." 

extra {"pillars"}
"Pillars are evenly spaced in two concentric circles.
They are elaborately carved on two sides each with various
battle scenes from history and legend." 

extra {"names","initials"}
"Names are carved into the wood, some grey with age others freshly 
cut. Ratling, Adolph, Mary, John, Kitty, Darkmoon, and Nikolai are 
but a few."

extra {"tables"}
"Long heavy wooden tables sit solidly on the floor. They are scraped,
scarred and stained by years of use. Many have names and initials
carved into the top."

extra {"chairs"}
"The heavy chairs are made of some dark wood. The bottom of the legs are
worn and uneven."

extra {"benches"}
"Benches sit beside most of the tables. The wood may have once been light
but now it is grey with age. They are well used, the seats worn smooth
from years of use."

extra {"$smell"}
"Fido burger, cheap perfume and wood smoke mix with fragrant 
rosemary oil."

extra {"$listen"}
"Loud bragging and raucous laughter of adventurers drunk
with their own successes fill the air."

ALWAYS_LIGHT
movement SECT_INSIDE
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_BURY }

north to moot_noea descr
"Northeastern Hall";

northwest to moot_cen descr
"Hall Center";

west to moot_sou descr
"Southern Hall";

southeast to moot_vote descr
"The voting booth";
end

/*load undetermined board here*/

moot_noea
title "The Northeastern Hall"
descr
"Motes of metal from the booth to the northeast sparkle in the 
flickering firelight before they float to the floor and disappear in 
the joints between boards. Orderly arranged tables curve to the shape 
of the hall between wooden pillars.  One pillar has an old axe mounted 
to it. There is a plaque beneath the axe. More seating can be seen to 
the west and to the south."

extra {"pillars"}
"Pillars are evenly spaced in two concentric circles.
They are elaborately carved on two sides each with various
battle scenes from history and legend." 

extra {"plaque"}
"This is the axe of the famed defender of the dwarves, Pegor,
who held off an invasion by the dark elven reavers almost
single handily when they attempted to claim Farginok. He held the
gates until reinforcements arrived from Danalek. The axe splintered
as the reinforcements entered the fortress, and Pegor fell to an 
unnamed darkelf as the dwarven forces defeated the invaders."

extra {"axe"}
"The head of the axe is split and cracked from blade to blade
as if it were used to cut another weapon."

extra {"tables"}
"Long heavy wooden tables sit solidly on the floor. They are scraped,
scarred and stained by years of use. "

extra {"chairs"}
"The heavy chairs are made of some dark wood. The bottom of the legs are
worn and uneven."

extra {"benches"}
"Benches sit beside most of the tables. The wood may have once been light
but now it is grey with age. They are well used, the seats are smooth
from years of use."

extra {"motes","metal"}
"Metal dust and flake float throughout the area and settle
on everything."

extra {"floor"}
"Old boards of uneven lengths and different woods make up the
floor. The joins between the boards sparkle in the light with bits
of metal."

extra {"$smell"}
"Ale, steel, sword oil and woodsmoke mix in the air."

extra {"$listen"}
"The constant murmur of conversation is occasionally
overridden with an argument of who is the better
fighter or thief. Chairs scrape against the floor, and
tables bang and the debaters rise to head for the southwestern
part of the hall to settle the discussion with steel"

ALWAYS_LIGHT
movement SECT_INSIDE
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_BURY }

northeast to moot_weap descr
"Moot Point";

south to moot_soea descr
"Southeastern Hall";

southwest to moot_cen descr
"Hall Center";

west to moot_nor descr
"Northern Hall";

end

/* Highest xp of all time here - board of all PC in db
and their xp. top 20? */
moot_nor
title "Northern Hall"
descr
"A lighted glass display case stands near a staircase leading up. 
Lamps illuminate the staircase and when combined with the 
soft firelight from the south, they lend a relaxed air to this 
section of seating. Tables are smaller in this part of the hall. 
Each table has only one or two chairs. A vendor's stall 
is to the north, more tables are east and west."


extra {"case"}
"The glass case contains a spear and a bracer. A small <a cmd='read #'>sign</a> explains 
them. On the lower lefthand side of the case is engraved provided
by Midgaard Sorcerer's guild."

extra {"spear","bracer"}
"About half of a spear and a piece of a bronze arm bracer hangs seemingly
in midair. Strange tooth marks can bee seen in the wooden shaft of the
spear. They are illuminated by a white light that shines down as
if from heaven." 

extra {"sign"}
"It is said these belonged to Minak the Paladin. He is famed for his defense
of Midgaard during the Dragon Wars. He was killed defending Urland from
the Mad Skaven Lord, Ligoden. Upon slaying Ligoden, he was swarmed by
Skavens. These artifacts were all that could be identified."

extra {"tables"}
"Small tables sit in shadows. They are just large enough for four people
to sit around."

extra {"chairs"}
"The heavy chairs are made of some dark wood. The bottom of the legs are
worn and uneven."

extra {"lamps"}
"Lamps hang from the rafters on heavy chains casting a soft
light over the staircase. "

extra {"$smell"}
"Woodsmoke, rosemary and ale permeate everything."

extra {"$listen"}
"The sound of the skald's singing can actually be heard from here."

ALWAYS_LIGHT
movement SECT_INSIDE
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_BURY }

south to moot_cen descr
"Hall Center";

east to moot_noea descr
"The Northeast Hall";

west to moot_nowe descr
"The Northwest Hall";

north to moot_sta2 descr
"An empty stall";

up to moot_uha1 descr
"A Hallway";

end

/* most deaths board here */

moot_nowe
title "The Northwestern Hall"
descr
"Light from the fire to the southeast warms the tone of
the wooden floor, giving it a reddish hue. The shadows
cast dance eerily between the tables and chairs like
shades of the fallen. A staff is mounted to one of the
pillars. A plaque is next to it. There is a wine vendor to the
northwest and more of the hall can be seen to both the
south and east."

extra {"pillars"}
"Pillars are evenly spaced in two concentric circles.
They are elaborately carved on two sides each with various
battle scenes from history and legend. One of them has
a staff and a plaque mounted on it." 

extra {"staff","wood"}
"The staff is burnt and broken. The lower portion is all that remains. 
Some sort of snake or reptile's tail is carved winding up the wood. 
This has led experts to believe that it is the remains of the staff of the
legendary ice wizard, Eira." 

extra {"plaque"}
"Eira was renown for his tactics as a general during the goblin 
raids on the gnome mining project. He led and trained the gnomes
against the goblin hordes. Upon securing the mines and 
as a result Urland from attack, he joined the forces at
Midgaard to defeat the dragons. After the war he continued
his campaign for the world by fighting on the side of
Good. He died fighting the lava dragon in an effort to retrieve 
the ring of command in defense of the world. "

extra {"floor"}
"Old boards of uneven lengths and different woods make up the
floor. "

extra {"tables"}
"Long heavy wooden tables sit solidly on the floor. They are scraped,
scarred and stained by years of use."

extra {"chairs"}
"The heavy chairs are made of some dark wood. The bottom of the legs are
worn and uneven."

extra {"benches"}
"Benches sit beside most of the tables. The wood may have once been light
but now it is grey with age. They are well used, the seats are smooth
from years of use."

extra {"shadows"}
"The shadows flicker throughout the room seemingly
of their own volition."

extra {"$smell"}
"Woodsmoke and ale permeate everything."

extra {"$listen"}
"The skald's singing can be heard in between the bell ringing and
drunk people toasting to absent companions. There are long moments
of silence after each toast, broken by loud laughter."

ALWAYS_LIGHT
movement SECT_INSIDE
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_BURY }

east to moot_nor descr
"Northern Hall";

southeast to moot_cen descr
"Hall Center";

south to moot_sowe descr
"Southwestern Hall";

northwest to moot_sta1 descr
"A wine seller";

end

/*PK board here Room for PK has sacred flag */

moot_sowe
title "The Southwestern Hall"
descr
"Sawdust is scattered all over the floor. Barrels and footprints 
mark a round area in the cleared portion of this room. No tables 
or chairs are in this part of the hall, although a couple of benches 
sit between the pillars. The easternmost pillar has the remains of a katana 
sheared off close to the handle mounted with a plaque beside it. It 
seems impromptu battles take place here a lot. There is more of the 
hall north and west and the performance area is to the northeast."

extra {"benches"}
"Benches sit beside most of the tables. The wood may have once been light
but now it is grey with age. They are well used, the seats are smooth
from years of use. There are carvings on the seat."

extra {"katana"}
"The katana has symbols engraved in what remains of the blade.
It looks to be made of silver, most likely alloyed with a
harder metal. The alloy must not have been hard enough though
for the blade is broken in three places." 

extra {"plaque"}
"This is the remains of Pavan al-Rashid's katana. The famed mercenary
and rumored assassin used this in defense of Midgaard during the war 
between the dark elves and the elves of Serenity. He was hired by 
the king as an advisor on foreign affairs. He happened to hear of
Roantilis's plan to flood the dark elven city while he was visiting
Serenity incognito. He warned the king of Midgaard, thus the city
was prepared for the influx of refugees. A group of dark elven militants
sought to take the fledgling human city as a new base for the war. 
Al-Rashid collected bounty on one hundred twenty-five dark elven 
assassins, warriors and mages. He received an appointment as
keeper of the peace for the city. He died in battle in the pay of 
the dwarves of Danalek. He never returned to Khorsabad again.
The characters on the blade translate to 'May the one true God
guide this blade to defend the weak.'"

extra {"barrels"}
"Basic wooden barrels hooped with metal bands. The lids are nailed
shut, but the lettering on the side is a good indication of what
is in them. Sawdust."

extra {"sawdust"}
"The sawdust is obviously here to absorb fighters' falls as well as
their blood. There seems to be quite a bit of blood soaked into it. "


extra {"carvings","seat"}
"Names are crudely craved into the benches. Al Kazeem, Shino, the ferret,
Dagnath and Vasslius are among them."

extra {"$smell"}
"Woodsmoke, sweat, blood and ale permeate everything."

extra {"$listen"}
"Loud groans and thumps echo to the wooden rafters."

ALWAYS_LIGHT
movement SECT_INSIDE
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_BURY, UNIT_FL_SACRED }

north to moot_nowe descr
"Northwestern Hall";

northeast to moot_cen descr
"Hall Center";

east to moot_sou descr
"Southern Hall";

southwest to moot_bet descr
"A betting counter";

end

/*DOWNSTAIRS SPECIAL ROOMS AND SHOPS*/

/*load Jan Hammerskald here*/

moot_cen
title "Hall Center"
descr
"A low retaining wall of bricks circles the huge fire roaring 
in the center of the hall. A chimney funnels the smoke from
the fire away from the platform that serves as a stage. The platform
circles the retaining wall. Six pillars surrounding the stage
 at intervals. One has a harp and a plaque on it. Another
 has a <a cmd='read #'>sign</a> . The wrestling ring can be spied to the southwest, 
seating areas farther from the heat of the flames can be seen to 
the north, south, southeast, southwest, northwest and northeast."

extra {"pillars"}
"Pillars are evenly spaced around the center.
They are elaborately carved on two sides each with various
battle scenes from history and legend. One of them has
a harp and a plaque mounted on it. Another has a sign." 

extra {"harp"}
"The harp is a plain bard's travel harp. The soundboard is 
split and the strings are broken." 

extra {"plaque"}
"This is the famed harp of Datgan, the bard. He held the armies of the
Dark Knights and the Paladins apart for two days by his performance.
The guilds had warred for months. Much innocent blood was spilt.
Citizens of Midgaard forced negotiations for peace. They progressed 
slowly and the guild members were anxious. The two armies marched 
forth and met in front of the cathedral in Midgaard. Datgun used his 
skills as a bard to calm the mob and hold off a civil war in the 
streets. Unfortunately, a tone deaf Paladin who rode into town on the
second day, attacked Datgan. As he ceased singing the announcement
was made that an accord had been reached, but not before a few 
skirmishes broke out. Datgun was found dead lying over his
harp trying to protect it from harm."


extra {"sign"}
"<pre><br/>
   * No spitting contests with board, skald, food or mead barrels<br/>
     as target permitted.<br/>
   * All fight winners must clean up blood and entrails<br/>
     themselves.<br/>
   * Do NOT annoy the wait staff, good help is hard to find.<br/>
   * Do NOT kill the entertainers. Maim only the<br/>
     bad ones.</pre>"

extra {"fire"}
"A huge roaring fire is here. It seems as if small fire
spirits are dancing in the flames. Maybe it's just the mead. "

extra {"chimney"}
"A large clay pipe goes up through the ceiling. It carries some
of the smoke from the fire away."

extra {"$smell"}
"Woodsmoke and cinnamon waft through the air here."

extra {"$listen"}
"The skald sings of the valor and bravery of heroes in his high
pitched voice. Laughter abounds when humorous tales are added
to the mix. Between songs the crackling of the flames is the only
sound other than the murmur of pleasant conversations."

ALWAYS_LIGHT

movement SECT_INSIDE
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_BURY }

north to moot_nor descr
"Northern Hall";

northeast to moot_noea descr
"Northeastern Hall";

southeast to moot_soea descr
"Southeastern Hall";

south to moot_sou descr
"Southern Hall";

southwest to moot_sowe descr
"Southwestern Hall";

northwest to moot_nowe descr
"Northwestern Hall";


dilcopy buck_load();
end

/* Place to buy food shopkeeper here */

moot_food
title "Village Road Kill Cafe"
descr
"Dingy grease-stained walls soak up the torchlight turning
everything a little yellow. The counter is smeared with grease, making
the wood appear almost black. A notched cleaver hangs near the grill.
There is no room to sit, it seems people buy their food and return to
the room to the northwest."

extra {"grill"}
"An open flame with what looks like an old flattened metal shield
mounted over it. "

extra {"cleaver"}
"Sieff is burned into wooden handle of the cleaver. The sous chef of
 sanctuary who held off the undead legions with his famous boiling garlic
soup barrage from the parapets of the church. Unfortunately, not all
undead react to heat and garlic."

extra {"counter"}
"A basic wood counter with a hinged part to let the help
through. It is dark brown from being coated with
grease."

extra {"$smell"}
"Fried everything. Smells like grease."

extra {"$listen"}
"The sizzling sound of frying food."

movement SECT_INSIDE
ALWAYS_LIGHT
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_BURY }

northwest to moot_sou descr
"The southern hall";

end


/* Place to buy drinks. */

moot_bar
title "The Gulp and Belch"
descr
"Bottles line the back of the bar reflected in the polished
metal mirror. There are no chairs to be seen here. The bar top
is spotless. A broken ball and chain are hung behind the bar with a
brass plaque under it. The main room is to the northeast."

extra{"ball and chain","morning star","ball"}
"The spiked ball is broken into two neat halves. The chain connecting
it to the haft looks as if it were sheared by intense heat."

extra{"ball and chain","ball"}
"This is the legendary weapon that killed both the demon Bifrons as he 
was lighting the dead lights in Souraigne and the wielder Brother 
Ignatius of Udgaard. The good brother went to exorcise the demon and
the demon took exception to this. A streak of lightning split the chain 
to the ball. The ball flew true and hit the horn on the demon's 
forehead with such force that it split in two and half 
ricocheted back to kill the good brother with one blow."

extra {"bottles"}
"Bottles line a shelf behind the bar. Some have names
written on them. It seems the bartenders take care of their
regulars."

extra {"bar"}
"The bar is spotless and polished so that you can see a
faint reflection of yourself. A brass foot hold gleams at
the bottom of the bar in the torchlight."

extra {"$smell"}
"Wood polish and mead are the predominate scents."

extra {"$listen"}
"Orders are shouted to the bartender over the clamor. A bell rings
every time someone tips Besri. There is the occasional crash as a
something glass is broken. "

ALWAYS_LIGHT
movement SECT_INSIDE
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_BURY}

northeast to moot_sou descr
"The southern hall";

end

/* Room for betting Odds maker Jimmy here*/
moot_bet
title "The Betting Windows"
descr
"A wall goes all the way to the ceiling with barred
windows where bets are taken. A <a cmd='read #'>sign</a> explains the betting
procedure."

/* this is just a filler for now perhaps something
similar to casino here?*/
extra {"sign"}
"Select the contest on which you wish to bet.<br/>
Exp monthly<br/>
Exp yearly<br/>
Ghoul Pool<br/>
PK monthly<br/>
Give amount you wish to bet to agent (minimum 2 silver)
state the player you wish to bet on."

extra {"wall","windows"}
"A thick wall with barred windows is here. It looks like
anyone who tried to break through would make a lot of noise."

extra {"$smell"}
"Woodsmoke, tobacco and ale permeate everything."

extra {"$listen"}
"Calls back and forth of odds on various contests drown out
most other sounds."

ALWAYS_LIGHT
movement SECT_INSIDE
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_BURY}

northeast to moot_sowe descr
"The Southwestern Hall";

end

/* Wine seller loads here*/
moot_sta1
title "A fern bar"
descr
"The bar is tastefully decorated with wispy plants, silver candelabras,
portraits of famous patrons and a staff of wood with live vines
growing from it. Bottles of fine wine and brandy are lined
up against a polished silver mirror. A few stools are in front of the
highly polished bar. They are wooden with black leather covered seats.
There is a <a cmd='read #'>sign</a> on the wall."

extra{"staff"}
"The staff seems to be old dead wood. It is grey with age and
there is a bearded man carved on the top of the staff. Living
vines sprout from the beard and hair of the carving and wind
around the staff and the walls of the bar. "

extra{"plaque"}
"The druid Miaren halted the advance of the armies of Ufel 
upon Udgaard with a spell of entanglement. He used so much power 
that he was absorbed into the roots and vines created by the spell
and his strength of will helped strangle the fire worm."

extra {"sign"}
"If you are underage you will not be served."

extra {"portraits","pictures"}
"Many portraits of patrons that are now famous throughout the world are
hung behind the bar. The infamous Renegade Mage, King Harold, and
Eldritch."

extra {"$smell"}
"Woodsmoke, peaches, blackberries and for some
reason lavender permeate everything."

extra {"$listen"}
"Dellinger's constant conversation can be heard
over everything, except when the skald sings. Then
he shuts up."

ALWAYS_LIGHT
movement SECT_INSIDE
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_BURY}

southeast to moot_nowe descr
"The Northwestern Hall";

end


/* empty stall Maybe balms, herbs etc? Fortune teller?*/
moot_sta2
title "An empty stall"
descr
"An empty stall waits an enterprising shopkeeper
to open an exciting new store to bilk the locals
out of their hard earned cash. A <a cmd='read #'>sign</a> rests on the
dusty counter. You can return south to the
hall."

extra {"sign"}
"Your business could be more profitable if you rented this
space. See the hall manager for details and start making
money today!"

extra {"$smell"}
"Woodsmoke and ale permeate everything."

extra {"$listen"}
"Sounds of silence."

ALWAYS_LIGHT
movement SECT_INSIDE
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_BURY}
south to moot_nor descr
"The Northern Hall";

end

/* Load repair Rathvith here */
moot_weap
title "The Moot Point"
descr
"The counter is coated with a fine layer of rock and metal dust.
Tools lie scattered here and there about the floor next to the
grindstone. Jars of various grades of oil sit on a bench near
the work area. A <a cmd='read #'>sign</a> sits on the counter"

extra {"grindstone"}
"A large grey stone mounted on a stand. It is kept turning
by a treadle and a pulley."

extra {"sign"}
"The sign is sword shaped. On it is written
Moot Point - Rathvith Sharpinr"

extra {"$smell"}
"Hot steel, sword oil and the smell of ground stone."

extra {"$listen"}
"The ringing of the blacksmith's hammer, whirring of the
grindstone and the grate of metal all combine to set one's
teeth on edge."

ALWAYS_LIGHT
movement SECT_INSIDE
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_BURY}

southwest to moot_noea descr
"Northeastern Hall";

end
/* Voting room booths here. Ideas are vote for best zone, guide, quest,
OLQ, perhaps have player polls for input on various game ideas presented
by admins. Suggest cheating be kept to a minimum with the following
checks, player level - over 40 for anything involving a newbie, over
50 of all others. Character creation date check. Character must
be over 1 month old - monthly xp board check. Character must have
over 75,000 xp for the month prior to voting.
one ballot for newbie zones one for midbie zones and one for the high
level zones. Perhaps separate between donation and non donation zones.
Vote for favorite quest. Running tally one vote per character per year.
perhaps an overall best player vote from player point of view?*/


moot_vote
title "The Polling Place"
descr
"Boxes stuffed with papers are here. Each has a <a cmd='read #'>sign</a> on it
stating the election type. The boxes are chained to the counter. The
only exit from this room is to the northwest."

extra {"sign"}
"Select which poll you wish to vote in. Please read your
ballot fully and vote according to the rules."

extra {"$smell"}
"Woodsmoke and tobacco permeate everything."

extra {"$listen"}
"Scratching of quills on paper and the quiet
counting of votes. "

ALWAYS_LIGHT
movement SECT_INSIDE
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_BURY}

northwest to moot_soea descr
"The southeastern hall";

end


/*Upstairs*/


moot_uha1
title "A Hallway"
descr
"The stairs end at a sort of junction of two hallways. One
seems to go around the outer edge of the building. The
other goes south towards the center."

extra {"stairs"}
"Basic wooden creaky stairs. A few runners have been repaired"

extra {"$smell"}
"Herbal oils from the lamps are a pleasant change
from the harsh woodsmoke below. The scent of rosemary
and lemon seems to add energy to the air."

extra {"$listen"}
"You can barely hear the murmur of voices from downstairs."

ALWAYS_LIGHT
movement SECT_INSIDE
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_BURY}

east to moot_uha9 descr
"A Circular Hallway";

south to moot_uha2 descr
"North South Hall";

west to moot_uha3 descr
"A Circular Hallway";

down to moot_nor descr
"The Northern Hall";
end

moot_uha2
title "A North South Hallway"
descr
"The hall is dim. Unpainted wooden walls rise on
either side of you and the ceiling slants up toward the
center. There is a flickering light to the south and the
stairs down are to the north at the junction."

extra {"wall","ceiling"}
"The walls are rough un sanded wood. They go up to
a ceiling with exposed beams. Lamps hang from the beams"

extra {"$smell"}
"The scent from the herbal oils in the lamps blend
with the scent of the wood in the walls to create a
smell much like the Cypress woods."

extra {"$listen"}
"You can barely hear the murmur of voices from downstairs."

ALWAYS_LIGHT
movement SECT_INSIDE
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_BURY}

north to moot_uha1 descr
"A Hallway";

south to moot_lib1 descr
"Library Entrance";

end


moot_uha3
title "A Circular Hallway"
descr
"The unpainted wooden walls rise to the slanting ceiling. It is 
reminiscent of a round tent. The door to the southeast has some
sort of picture painted on it. The stairs down are to the
east and the hall curves to the south."

extra{"door"}
"There is a gold star painted on this door and the name
Jan Hammerskald in gold letters under it."

extra {"$smell"}
"The fruit and flower scents from the oil in the lamps 
is very like those in an orchard or on a farm."

extra {"$listen"}
"You can barely hear the murmur of voices from downstairs."

ALWAYS_LIGHT
movement SECT_INSIDE
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_BURY}

east to moot_uha1 descr
"A junction in the hallway";

southeast to moot_dres descr "A Dressing Room"
   keyword {"door"}
   key dres_key
   open {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED}
   difficulty 50;

south to moot_uha4 descr
"A Circular Hallway";

end

moot_uha4
title "A Circular Hallway"
descr
"Unpainted wooden walls rise on either side of you and lamps
filled with scented oil hang from chains to light your way.
A dusty door is to the east. The hall curves north and
to the south."

extra {"lamps"}
"Brass oil lamps are lit and hung from hooks suspended
on chains from ceiling beams."

extra {"$smell"}
"Herbal oils from the lamps hanging from the beams blend
with the scent of the wood in the walls."

extra {"$listen"}
"You can barely hear the murmur of voices from downstairs."

ALWAYS_LIGHT
movement SECT_INSIDE
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_BURY}

north to moot_uha3 descr
"A circular Hallway";

east to moot_urm1 descr
"A large room"
keyword {"door"}
open {EX_OPEN_CLOSE, EX_CLOSED};

south to moot_uha5 descr
"A Circular Hallway";

end

moot_uha5
title "A Circular Hallway"
descr
"Unpainted wooden walls rise on either side of you and
lamps filled with scented oil hang from heavy chains to
light your way. Windows look out over the street below.
Sounds of the bar rise muffled through the floor. There is a door
to the northeast and the hall curves to the north and to the east."

extra{"wall","ceiling"}
"The walls are rough un sanded wood. They go up to
a ceiling with exposed beams."


extra {"window"}
"The village road can be seen below with the back of the
bank directly across."

extra {"$smell"}
"Cinnamon oil from the lamps blend with the scent of the wood 
to create the sense of an exotic bazaar like that of Khorsabad."

extra {"$listen"}
"You can barely hear the murmur of voices and the ring
of steel upon steel from downstairs."

ALWAYS_LIGHT
movement SECT_INSIDE
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_BURY}

northeast to moot_urm2 descr "A Small apartment"
   key apt1_key@udgaard
   keyword {"door"}
   open {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED}
   difficulty 50;

east to moot_uha6 descr "A Circular Hallway";

north to moot_uha4 descr "A Circular Hallway";


end

moot_uha6
title "A Circular Hallway"
descr
"Lamps filled with scented oil hang from the beams above
brightening the hall. Windows look out over the street
below letting in some light through the thin cloth coverings.
There is a door to the north and the hall curves to the
west and to the east."

extra{"window"}
"The windows are really just holes cut in the wall with
sailcloth over them. In the summer, they are left open,
in the winter a board is nailed over them under the cloth
to keep the building warm."

extra {"$smell"}
"Cinnamon oils from the lamps hanging from the beams blend
with the scent of the wood in the walls."

extra {"$listen"}
"You can barely hear the murmur of voices from downstairs and
the comforting sounds of village daily living drift in through
the window."

ALWAYS_LIGHT
movement SECT_INSIDE
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_BURY}

north to moot_stor descr "A disused storage room"
   keyword {"door"}
   key stor_key@udgaard
   open {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED}
   difficulty 50;

east to moot_uha7 descr
"A Circular Hallway";

west to moot_uha5 descr
"A Circular Hallway";


end

moot_uha7
title "A Circular Hallway"
descr
"Windows looking out over the town below. A breeze blows through
a rent in the window covering. A door to the northwest seems
to be used a lot. The hall curves to the west and to the north."

extra{"window"}
"The windows are really just holes cut in the wall with
sailcloth over them. In the summer, they are left open,
in the winter a board is nailed over them with the cloth."

extra {"$smell"}
"Spicy scents are a subtle reminder of sweets cooked in a wood stove."

extra {"$listen"}
"You can barely hear the murmur of voices from downstairs."

ALWAYS_LIGHT
movement SECT_INSIDE
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_BURY}

northwest to moot_urm3 descr
"A small apartment"
keyword {"door"}
key apt2_key@udgaard
open {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED};

north to moot_uha8 descr
"The circular hallway";

west to moot_uha6 descr
"The circular hallway";

end

moot_uha8
title "A Circular Hallway"
descr
"The rough wooden walls are covered with balls of dust and dirt. The
hall could use a good cleaning from top to bottom. There is a door 
to the west and the hall curves to the north and to the south."

extra{"wall","ceiling"}
"The walls are rough, un sanded wood. They go up to
a ceiling that looks much the same, with exposed beams."

extra {"$smell"}
"Herbal oils from the lamps hanging from the beams blend
with the scent of the wood in the walls."

extra {"$listen"}
"You can barely hear the murmur of voices from downstairs."

ALWAYS_LIGHT
movement SECT_INSIDE
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_BURY}

north to moot_uha9 descr
"A circular hallway";

south to moot_uha7 descr
"A circular hallway";

west to moot_urm4 descr
"A Large Room"
keyword {"door"}
open {EX_OPEN_CLOSE, EX_CLOSED};

end

moot_uha9
title "A Circular Hallway"
descr
"A door to the southwest looks heavier than the others in this hall.
The wooden walls are slightly finished here. The hall curves to the west
where the staircase descends into the main room. The hall 
continues around the building to the east."

extra{"wall","ceiling"}
"The walls are rough un sanded wood. They go up to
a ceiling that looks much the same, with exposed beams."

extra {"$smell"}
"Cinnamon oil from the lamps hanging from the beams blend
with the scent of the wood in the walls to form a blend
like a crisp fall fire."

extra {"$listen"}
"You can barely hear the murmur of voices from downstairs."

ALWAYS_LIGHT
movement SECT_INSIDE
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_BURY}

south to moot_uha8 descr
"A Circular Hallway";

southwest to moot_prac descr "A Practice Room"
   keyword {"door"}
   key pra_key@udgaard
   open {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED}
   difficulty 50;

west to moot_uha1 descr
"A Staircase at the Junction";

end

moot_lib1
title "The Northern Library"
descr
"Bookcases line the outer walls of this circular room. They 
reach almost to the ceiling. In the room's center is a large metal cylinder
with seats around it. Lamps hang from the ceiling to provide light
for readers. The room continues to the southwest and to the
southeast, with a hall heading towards the stairs to the
north."

extra{"cylinder","chimney"}
"The metal cylinder rises through the floor and goes
through the ceiling. Heat radiates from it warming the room."

extra{"seats"}
"The seats are well cushioned high backed chairs set in small
groupings around the cylinder and each grouping has a lamp
over it."

extra {"$smell"}
"Cinnamon oils from the lamps hanging from the beams blend
with the scent of the wood in the walls."

extra {"$listen"}
"You can barely hear the murmur of voices from downstairs."


ALWAYS_LIGHT
movement SECT_INSIDE
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_BURY}

north to moot_uha2 descr
"A Hallway";

southeast to moot_lib2 descr
"Library";

southwest to moot_lib2 descr
"Library";
end

moot_lib2
title "The Northern Library"
descr
"Bookcases reach almost to the ceiling filled with
scrolls, books and manuscripts from all parts of
the world. A large metal cylinder with seats around
radiates heat and keeps the room comfortable on
even the coldest nights. Lamps hung from chains from
the ceiling provide light. The room continues to the northwest
and northeast."

extra{"cylinder","chimney"}
"The metal cylinder rises through the floor and goes
through the ceiling. Heat radiates from it warming the room."

extra{"seats"}
"The seats are well cushioned high backed chairs set in small
groupings around the cylinder. Each grouping has a lamp
over it."

extra {"books"}
"The books are crammed in these cases. One bookcase seems a bit
out of alignment."

extra {"bookcase"}
"One bookcase seems a bit out of alignment. It looks like
the books in it are fakes."

extra {"$smell"}
"Cinnamon oils from the lamps hanging from the beams blend
with the scent of the wood in the walls."

extra {"$listen"}
"You can barely hear the murmur of voices from downstairs."

ALWAYS_LIGHT
movement SECT_INSIDE
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_BURY}

northeast to moot_lib1 descr "Library";
northwest to moot_lib1 descr "Library";
south to moot_stor descr
   "A dusty storeroom."
   key sec_key@udgaard
   keyword {"bookcase", "door", "secret door"}
   open {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED, EX_HIDDEN}
   difficulty 50;
end

moot_dres
title "A Dressing Room"
descr
"Light blazes in comparison to the dim hall. White, gold, and red
flares settle down to become a large dressing room strewn with
costly clothing. Lamps and candles are placed throughout the room.
A bed is against the west wall, partially hidden by a cloth covered
screen"

extra{"screen"}
"The screen is wood covered with silk with a painting of women
barely dressed lounging about playing instruments. Obviously,
some man's idea of a good time."

extra {"bed"}
"A large bed with soft sheets and a warm silky coverlet. There
are over 150 notches in the bedpost."

extra{"clothing","clothes"}
"Yellow, white, red and brown are the predominant colors
among the silk, fine linen and soft wool garments carelessly
flung about."

extra{"$smell"}
"The scent of patchouli and vanilla permeates everything."

extra{"$listen"}
"Far off you can hear the mournful tolling of a bell."


ALWAYS_LIGHT
movement SECT_INSIDE
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_BURY}

northwest to moot_uha3 descr "A Circular Hallway"
   keyword {"door"}
   key dres_key@udgaard
   open {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED}
   difficulty 50;

end

moot_urm1
title "A Large Room"
descr
"A large room with some tables pushed against one wall
and some stools stacked atop each other. A statue faces
the wall and a picture is hastily hung upside down
on the east wall. There is a large amount of floor space like
someone pushed everything back to dance. The only exit is back
to the west"

extra {"statue"}
"The statue seems to be made of marble and is a man. He must
have been very bad to have even his statue punished by standing in
the corner!"

extra {"picture"}
"The picture is one of the docks in Torsbay. Ships are in
quay and there is a man with a parrot standing on the dock. "

extra {"stools"}
"Three and four legged stools are stacked precariously."

extra {"$smell"}
"There is a scent of ladies' perfume lingering in the air."

west to moot_uha4 descr
"A Circular Hallway"
keyword {"door"}
open {EX_OPEN_CLOSE, EX_CLOSED};

end

moot_urm2
title "A Small Apartment"
descr
"This one room apartment is obviously inhabited
by a slob. Clothing lies on the unmade bed. Remains
of a previous meal rest on the night stand. The only
apparent exit is southwest out the door you came in."

extra{"bed"}
"The sheets smell like they have not been washed in a year.
They are sort of brown too - YUCK! There is a chamberpot
in needs of emptying under the bed."

extra{"clothing"}
"What a slob! Clothes are thrown all over. They are all
brown and yellow and dirty and smell."

extra{"night stand", "remains"}
"Looks like week old ferret on a stick was left here, with
some stale bread."

extra{"$smell"}
"The room smells like unwashed viking."

ALWAYS_LIGHT
movement SECT_INSIDE
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_BURY}

southwest to moot_uha5 descr "A Circular Hallway"
   key apt1_key@udgaard
   keyword {"door"}
   open {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED}
   difficulty 50;
end

moot_stor
title "A Storeroom"
descr
"Dust covers everything here. The unfinished walls
are covered in balls of dust. The northern wall seems
to have a dark line of dust filling a crack between
panels. The door to the hallway is to the south."

extra {"crack","panels","dust"}
"The join between the panels looks a little strange.
One of the knotholes looks a little like keyhole."

extra {"bundle"}
"Upon closer inspection you see a pillow and blanket. It looks like
someone sleeps here sometimes."

ALWAYS_LIGHT
movement SECT_INSIDE
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_BURY}

south to moot_uha6 descr "A Circular Hallway"
   key stor_key@udgaard
   keyword {"door"}
   open {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED} difficulty 50;

north to moot_lib2 descr "The library"
   key sec_key@udgaard
   keyword {"panel","door","crack","secret door"}
   open {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED, EX_HIDDEN}
   difficulty 50;

end

moot_urm3
title "A Small Apartment"
descr
"This one room apartment is obviously inhabited
by a very sick person. Every object is painstakingly
aligned perfectly and clothing neatly folded or hung.
The bed is made so tightly you could bounce a coin off
the sheets. A book rests on the night stand. The only
apparent exit is southeast, out the door you came in."

extra{"bed"}
"The sheets smell like lavender. They are crisp and white.
A light green counterpane is folded carefully at the foot
of the bed. There is a spotless chamberpot under the bed."

extra{"clothing"}
"Clothes are perfectly aligned, mended and hung. They
smell of lavender. They are mainly white with the occasional
other color tunic."

extra{"night stand", "book"}
"No dust on the night stand. The candle on it has its wick
neatly trimmed. The book on the stand has the title 'Flowers
of the Forest' printed on it."

extra{"$smell"}
"The scent of lavender permeates everything."

ALWAYS_LIGHT
movement SECT_INSIDE
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_BURY}

southeast to moot_uha7 descr "A Circular Hallway"
   key apt2_key@udgaard
   keyword {"door"}
   open {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED}
   difficulty 50;

end

moot_urm4
title "A Large Room"
descr
"This huge room has no furniture or anything
of importance in it. It is quite empty. The only
door is east to the hallway."


ALWAYS_LIGHT
movement SECT_INSIDE
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_BURY}

east to moot_uha8 descr
"A Circular Hallway"
keyword {"door"}
open {EX_OPEN_CLOSE, EX_CLOSED};

end

moot_prac
title "A Practice Room"
descr
"The panels on the wall here look strange, but no noise
seeps in from the hall. Nor can you hear anything
that goes on here from outside this room. Musical
instruments hang on the wall and several music stands
with sheet music stand here and there."

extra {"panels"}
"The panels seem to be made of some sort of padding to
muffle sound."

extra{"instruments"}
"Citheras, mandolins, lutes, flutes, lap harp and even
a full harp hang on the wall. They seem to be only
of fair quality, for practice or teaching only."

extra{"music","sheet music"}
"Too many notes - well, unless you read music. You
see names scrawled on the top of some sheets, like
The Cuckoo's Nest, Wee Green Man and The Ferret song."

ALWAYS_LIGHT
movement SECT_INSIDE
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_BURY}

northeast to moot_uha9 descr "A Circular Hallway"
   key pra_key@udgaard
   keyword {"door"}
   open {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED}
   difficulty 50;
end


village_rd10

title "End of the Village Road"
descr
"The village road leads back to the east from here. To the north is a
wooden watchtower, and to the south is the back side of the Udgaard
temple."
extra {"wooden watchtower", "watchtower", "tower"}
"This watchtower helps to protect the town of Udgaard."
extra {"village road", "road"}
"The road is constructed of hard-packed dirt."
extra {"udgaard temple", "back side", "temple"}
"The Udgaard temple is the center of your existance. It is there that you
can find donated items, rest your soul, or resurrect from death."
movement SECT_CITY
gmap(370,310)
north to watch_tower3 descr "Wooden Watchtower.";
east to village_rd9 descr "Village Road.";
ALWAYS_LIGHT
end

watch_tower

title "Underneath the Wooden Watchtower"
descr
"The floor of a wooden watchtower spreads above your head. The Cypress
Forest grows to the east, or you can enter Udgaard to the west. Trees block
all passage to the north and south.  A ladder leads upwards into the
watchtower."
extra {"ladder"}
"It is a simple wooden ladder."
extra {"wooden watchtower", "watchtower", "tower"}
"This watchtower helps to protect the town of Udgaard."
extra {"village road", "road"}
"The road is constructed of hard-packed dirt."
extra {"udgaard"}
"Udgaard is far safer than the lands which surround it."
extra {"cypress forest", "cypress", "forest"}
"The Cypress Forest stands between Midgaard and Udgaard."
extra {"large trees", "trees", "tree"}
"These trees seem to be very old."
movement SECT_CITY
gmap(698,584)
west to village_rd5 descr "Bend in the Village Road.";
east to cypress/hill descr "Go into the Cypress Forest.";
up to up_tower1 descr "Up in the Watchtower.";
ALWAYS_LIGHT
end

up_tower1

title "Up in the Wooden Watchtower"
descr
"It is obvious why this watchtower was built. From the top of it, there is
a good view of all of Udgaard, and it is possible to scan the surrounding
lands for infidels. The tower can be exited by way of a ladder leading
down."
extra {"wooden watchtower", "watchtower", "tower"}
"This watchtower helps to protect the town of Udgaard."
extra {"village road", "road"}
"The road is constructed of hard-packed dirt."
extra {"udgaard"}
"Udgaard is far safer than the lands which surround it."
extra {"cypress forest", "cypress", "forest"}
"The Cypress Forest stands between Midgaard and Udgaard."
extra {"large trees", "trees", "tree"}
"These trees seem to be very old."
movement SECT_CITY
gmap(676,564)
down to watch_tower descr "Wooden Watchtower.";
ALWAYS_LIGHT
end

watch_tower2

title "Underneath the Wooden Watchtower"
descr
"The floor of a wooden watchtower looms over your head. The forest of
Haon-dor is to the west, and the Village Road of Udgaard leads east. Trees
block all passage to the north and south. A ladder leads upwards into the
watchtower."
extra {"ladder"}
"It is a simple wooden ladder."
extra {"wooden watchtower", "watchtower", "tower"}
"This watchtower helps to protect the town of Udgaard."
extra {"village road", "road"}
"The road is constructed of hard-packed dirt."
extra {"udgaard"}
"Udgaard is far safer than the lands which surround it."
extra {"cypress forest", "cypress", "forest"}
"The Cypress Forest stands between Midgaard and Udgaard."
extra {"large trees", "trees", "tree"}
"These trees seem to be very old."
movement SECT_CITY
gmap(152,584)
west to haon_dor/forest_edge descr "Go into the Forest of Haon-dor.";
east to village_rd1 descr "Village Road at Haon-dor.";
up to up_tower2 descr "Up in the Watch Tower.";
ALWAYS_LIGHT
end

up_tower2

title "Up in the Wooden Watchtower"
descr
"This watchtower has a sturdy wooden floor. From the top of it, there is
a good view of all of Udgaard, and it is possible to look over the
surrounding lands. The tower can be exited by way of a ladder leading down."
extra {"wooden watchtower", "watchtower", "tower"}
"This watchtower helps to protect the town of Udgaard."
extra {"sturdy wooden floor", "wooden floor", "floor"}
"The floor could support a great weight."
extra {"village road", "road"}
"The road is constructed of hard-packed dirt."
extra {"udgaard"}
"Udgaard is far safer than the lands which surround it."
extra {"cypress forest", "cypress", "forest"}
"The Cypress Forest stands between Midgaard and Udgaard."
extra {"large trees", "trees", "tree"}
"These trees seem to be very old."
movement SECT_CITY
gmap(130,564)
down to watch_tower2 descr "Wooden Watchtower.";
ALWAYS_LIGHT
end

watch_tower3

title "Underneath the Wooden Watchtower"
descr
"The floor of a wooden watchtower looms over your head. Some farm fields
are to the north, and the Village Road of Udgaard is south. To the east
and west are the fences of farm fields. A ladder leads upwards into the
watchtower."
extra {"farming fields", "fences", "field"}
"These fields help to supply Udgaard with food."
extra {"ladder"}
"It is a simple wooden ladder."
extra {"wooden watchtower", "watchtower", "tower"}
"This watchtower helps to protect the town of Udgaard."
extra {"village road", "road"}
"The road is constructed of hard-packed dirt."
extra {"udgaard"}
"Udgaard is far safer than the lands which surround it."
extra {"cypress forest", "cypress", "forest"}
"The Cypress Forest stands between Midgaard and Udgaard."
extra {"large trees", "trees", "tree"}
"These trees seem to be very old."
movement SECT_CITY
gmap(370,256)
north to hamlet/sm_path descr "A small path to a hamlet.";
south to village_rd10 descr "End of the Village Road.";
up to up_tower3 descr "Up in the Watch Tower.";
ALWAYS_LIGHT
end

up_tower3

title "Up in the Wooden Watchtower"
descr
"This watchtower has a sturdy wooden floor. From the top of it, there is
a good view of all of Udgaard, and a small farming hamlet is visible over
the fields to the north. The tower can be exited by way of a ladder
leading down."
extra {"farming hamlet", "hamlet"}
"This is a small town which farmers live in."
extra {"fields", "field"}
"Food is grown here."
extra {"wooden watchtower", "watchtower", "tower"}
"This watchtower helps to protect the town of Udgaard."
extra {"sturdy wooden floor", "wooden floor", "floor"}
"The floor could support a great weight."
extra {"village road", "road"}
"The road is constructed of hard-packed dirt."
extra {"udgaard"}
"Udgaard is far safer than the lands which surround it."
extra {"cypress forest", "cypress", "forest"}
"The Cypress Forest stands between Midgaard and Udgaard."
extra {"large trees", "trees", "tree"}
"These trees seem to be very old."
movement SECT_CITY
gmap(352,238)
down to watch_tower3 descr "Wooden Watchtower.";
ALWAYS_LIGHT
end

    ud_storage

title "Storage Office"
descr
"You have entered a room which is filled with all kinds of junk.  Piles
of weapons and armor, bottles, flasks, and scrolls litter the floor.
Small cupboards with doors line the walls, and boxes and crates are stacked
on large shelves.  You are amazed at the size of this room, it seems
to extend fifty feet to the north.  There is a small <a cmd='read #'>sign</a> on the wall."


extra {"junk"}
"There is anything that you can imagine piled about this store."
extra {"piles", "weapons", "armor", "bottles", "flasks", "scrolls"}
"These items have been reclaimed by the storage agency."
extra {"small cupboards", "cupboards", "boxes", "crates", "large shelves",
"shelves"}
"These are all used to hold the goods of the storage agencies clients."
extra {"room"}
"This room is absolutely monstrous."
extra {"sign"}
"<pre><br/>
The Sign Says:<br/>
<br/>
-rent [container]<br/>
-store &lt;ITEM&gt;<br/>
-unstore &lt;ITEM&gt;<br/>
-storage [list]<br/>
</pre>"

flags {UNIT_FL_NO_WEATHER}

movement SECT_INSIDE
gmap(532,498)
south to bank@udgaard;
ALWAYS_LIGHT
end

#ifdef EXTENDEDMUD
                                ud_auction

title "Auction Office"
descr
"This room is surmounted by a large wooden box.  Various items
line shelves and the floor, bearing colored tags.  The room is
relatively bare otherwise, being a place where trading, buying,
and selling is done.  The building spans overhead, and heavy
wooden rafters appear to do a good job of supporting the ceiling.
The dark alley is west of here."
extra {"building", "room"}
"This is the auction office of Udgaard."
extra {"wooden box", "box"}
"The auctioneer stands on this box to call bids."
extra {"shelves", "floor", "items"}
"The whole room is filled with items that are being or have been sold."
extra {"colored tags"}
"The colored tags have names and prices written on them.  One reads:
'Papi: Valhalla Mud, 10000000 Platinum, 2 Iron'."
extra {"heavy wooden rafters", "wooden rafters", "rafters", "ceiling"}
"They look to be very sturdy, keeping the large ceiling in place."
flags {UNIT_FL_NO_WEATHER}
movement SECT_INSIDE
west to dark_all3;
ALWAYS_LIGHT
end
#endif



                              command_chat
title "Commands's Chat Room"
descr
"You have entered the 'newbie zone'. If you have been brought to this
place then you must be seeking help. Sit still and your guide will
explain all you need to know about life in the world of Valhalla."
movement SECT_INSIDE
up to temple;
ALWAYS_LIGHT
end

                                newbie_chat
names {"newbie chat room"}
title "The Newbie Guide Chat Room"
descr
"You have entered the 'newbie zone'. If you have been brought to this
place then you must be seeking help. Sit still and your guide will
explain all you need to know about life in the world of Valhalla."
movement SECT_INSIDE
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_TELEPORT,
       UNIT_FL_NO_MOB, UNIT_FL_SACRED}
up to square;
ALWAYS_LIGHT
end




      square
names {"udgaard square","udgaard","square"}
title "Village Square"
descr
"You are at the small village square of Udgaard. The temple is located
just north of here. The Village road continues both east and west, while
the Guild road is due south."
gmap(70,70)
movement SECT_CITY
gmap(424,584)
east to village_rd3;
west to village_rd2;
south to market;
north to temple;
ALWAYS_LIGHT
end

      village_rd1

title "Village Road at Haon-Dor"
descr
"Just west of here is a watchtower which protects Udgaard from the
dangers of the forest.  Farther west from that is the forest of
Haon-Dor where many adventurers travel.  Very conveniently the Chicken's
Rest is next to you just north while the post office is south in case you
would like to send a last farewell letter."
movement SECT_CITY
gmap(274,584)
north to inn;
south to postoffice;
west to watch_tower2;
east to village_rd2;
ALWAYS_LIGHT
end

      village_rd2

title "Village Road"
descr
"The village square is east of here and the Village road continues
west. The food store is to the north and Harold's is to the south."
movement SECT_CITY
gmap(328,584)
north to food_store;
south to ironmonger;
east to square;
west to village_rd1;
ALWAYS_LIGHT
end

      village_rd3

title "Village Road"
descr
"The village square is just west of here. The finest building in Udgaard,
the bank, is north. Safeguarding the bank is the guard headquarters to the
south. The village road continues east."
gmap(534,583)
movement SECT_CITY
north to bank;
south to accuse_room;
west to square;
east to village_rd4;
ALWAYS_LIGHT
end

      market

title "The Udgaard Market"
descr
"You are at the Udgaard market just south of the village square. This
used to be a larger and busier market. Now only a few small merchants
are scattered around the market. The boat bridge is south of here."
movement SECT_CITY
gmap(424,679)
north to square;
south to bridge;
east to tobacco_shop;
northeast to field_shop;
northwest to heal_shop;
southeast to side_alley;
southwest to mageshop;
down open {EX_CLIMB, EX_FALL_THIS_WAY} difficulty 0 to sew_ent@udsewer;
extra {"$climb_down"} {1} "" // Only 1 damage

ALWAYS_LIGHT
end

#ifdef OLD_UDGAARD

      guild_rd1

title "Guild Road"
descr
"The road is constructed from white flagstones, each fashioned and laid
by hand. From there you can see the village square to the north while the
road continues to the south. The tranquility path is west of here and the
Swordsman way is to the east."
gmap(1024,0)
movement SECT_CITY
north to square;
south to guild_rd2;
west to healers_way1;
east to fighters_way1;
ALWAYS_LIGHT
end
                           guild_rd2

title "Guild Road"
descr
" The road is constructed from handmade and laid flagstones. Although the
flagstones are old they are still in very good repair. A dark alley leads
off to the east of here and elemental alley is to the west. You notice an
open man-hole leading down. The road continues to the north and a dump is
to the south."
movement SECT_CITY
north to guild_rd1;
west to magic_way1;
east to dark_all1;
south to dump;
down to sew_ent@udsewer;
ALWAYS_LIGHT
end
#endif

                                 dump

names {"dump"}
title "Village Dump"
descr
"Located just outside the walls and close to the boat bridge the village
dump is quite a dirty mess. Actually you are convinced, that if you drop
any items here, you won't be able to find them again. To the south a large
river calmly flows east towards the cypress forest but you need to head
over to the boat bridge if you want to jump in."
movement SECT_CITY
gmap(478,843)
west to bridge;
ALWAYS_LIGHT


end

                                 bridge
title "On the Boat Bridge"
descr
"The river gently flows east towards the cypress forest. The village of 
Udgaard is just north of here and to the east is the village dump."
movement SECT_CITY
gmap(424,843)
north to market;
east to dump;
south to river;
ALWAYS_LIGHT
end

                                 river
title "On the River"
descr
"You are on the river flowing past the village of Udgaard with a
pretty view of the village dump just north of here beyond the boat bridge."
movement SECT_WATER_SWIM
gmap(424,897)
north to bridge;
#ifdef EXTENDEDMUD
west to river6@toy descr "The river enters the forest to the west.";
"If you need to connect, I wouldn't suggest breaking the river link to Haon-Dor"
#endif

west to lightriver@haon_dor difficulty 10 descr "The river flows from the forest to the west." ;
east to cypress/river difficulty 0;

dilcopy watercurrent@basemove(DIR_EAST, 
   {"The river current gently takes you east.", "$1n gently flows away to the east.",
    "You gently flow further eastwards.", "$1n flows in from the west."}, 7);
end



                                 temple

title "Temple of Udgaard"
descr
"You are inside the small and humble village temple in Udgaard. A
simple stone altar, with strange stone carvings, is placed against the
north  wall. A small humble donation room is to the east.  The temple exit
is south to the Village Square."
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_TELEPORT,
       UNIT_FL_NO_MOB, UNIT_FL_SACRED}
movement SECT_INSIDE
gmap(424,420)
south to square;
east to udonate;
north to heal_room;
ALWAYS_LIGHT
extra {"stone altar", "altar"}
"The stone altar is very simple and engraved in it are a lots of strange
symbols. Perhaps the symbols are worth examining."

extra {"symbols", "stone carvings", "carvings"}
"Some of the symbols clearly represents various Gods while other appear
to be normal text. The symbols you do understand looks like this:<pre><br/>
<br/>
      Pray to odin if you are new and helpless.</pre>"
end

                                heal_room

title "Temple of Udgaard"
descr
"You are in the healing center of a small and humble village temple. The
walls are bare stone with intricate etching in them depicting many great
battles."

flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_TELEPORT,
UNIT_FL_NO_MOB, UNIT_FL_SACRED}
movement SECT_INSIDE
gmap(424,364)
south to temple;
ALWAYS_LIGHT
#ifdef EXTENDEDMUD
north to hall@newbie descr "The new player council room is to the north.";
#endif
end


                    udonate
names {"udgaard donations room", "udgaard donation room", "donations room"}
title "The Udgaard Donations Room"
descr
"   You are standing in a room beside the temple of Udgaard.
If you are lucky you might have the good graces to have
something nice drop into your lap, it has been known to happen."
flags {UNIT_FL_NO_MOB, UNIT_FL_INDOORS, UNIT_FL_NO_WEATHER,UNIT_FL_NO_TELEPORT}
movement SECT_INSIDE
gmap(465,420)
west to temple;
/* Dil to restrict getting all */
dilcopy all_block@udgaard ();
end

                          inn_2
title "Back Room"
descr
"The room smells of stale beer and old tobacco, with a number of round tables,
this is where the village residents gather to play cards and have a
cold one during the long nights."

flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_MOB,UNIT_FL_SACRED,UNIT_FL_NO_TELEPORT}
movement SECT_INSIDE
gmap(234,501)
extra {"round tables","tables","table"}
"Round card tables, stained with beer and cigar butts."
east to inn;
north to inn_3;
west to inn_5;
south to inn_4;
ALWAYS_LIGHT
end

                                inn_3
title "Back Room"
descr
"You're in the northen part of the back room. The room still smells of stale
beer and smoke."
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_MOB,UNIT_FL_SACRED,
UNIT_FL_NO_TELEPORT}
movement SECT_INSIDE
gmap(234,460)
south to inn_2;
ALWAYS_LIGHT
end

                                inn_4
title "Back Room"
descr
"You're in the southern part of the back room. The room still smells of stale
beer and smoke."
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_MOB,UNIT_FL_SACRED,
UNIT_FL_NO_TELEPORT}
movement SECT_INSIDE
gmap(234,541)
north to inn_2;
ALWAYS_LIGHT
end


                                inn_5
title "Back Room"
descr
"You're in the northen part of the back room. The room still smells of stale
beer and smoke."
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_MOB,UNIT_FL_SACRED,
UNIT_FL_NO_TELEPORT}
movement SECT_INSIDE
gmap(193,501)
east to inn_2;
ALWAYS_LIGHT
end


                                   inn

title "The Chicken's Rest"
descr
"The Chicken's Rest is a cozy bar often used by adventurers returning
from the dangerous forest of Haon-Dor just west of here. A small <a cmd='read #'>sign</a> has
been hung on the wall. A rickety staircase leads upstairs and a small
door leads west into a back room."
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_MOB, UNIT_FL_SACRED}
movement SECT_INSIDE
gmap(276,501)
south to village_rd1;
west to inn_2;
up to offices/hallway;
ALWAYS_LIGHT
extra {"rickety staircase", "staircase"}
"Well, it's rickety!"
extra {"sign", "small sign", "wall"}
"From whence cometh the name 'The Chicken's Rest' is forgotten in the
mists of time. But it has been said, that a blessing rests in this inn
which make wounds heal faster.<pre><br/>
<br/>
    Use `<a cmd='#'>list</a>'           to see available drinks.<br/>
        `request &lt;item&gt;' to ask the price of a drink.<br/>
        `buy &lt;drink&gt;'    to buy a drink.<br/>
        `value &lt;item&gt;'   to get a price for a drink you are selling.<br/>
        `sell &lt;drink&gt;'   to sell a drink.<br/>
<br/>
                         - Sam the Keeper</pre>"
flags {UNIT_FL_NO_TELEPORT}
end

                                 postoffice
title "The Post Office"
descr
"You are inside the small tidy post office of Udgaard. If you wish to send
a letter before departing on your next adventure this would be a good time
to do so. There is a <a cmd='read #'>sign</a> with instructions mounted on the wall. The
Records office is just west of here."
extra {"sign", "instructions", "wall"}
"Use:<pre><br/>
      `write letter' to begin writing a letter.<br/>
      `mail &lt;letter&gt; &lt;person&gt;' to send a letter to somebody.<br/>
      `request' to get your mail.<br/>
      `put &lt;letter&gt; in shredder' to erase the letter permanently.</pre>"
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_MOB}
movement SECT_INSIDE
gmap(274,637)
north to village_rd1;
west to records;
ALWAYS_LIGHT

end

                                 records
title "The Records Office"
descr
"This neatly kept office is where the Town Records are kept. All of the
citizens of Valhalla have a file here, and they can change the information
which the files contain. There are two strange cabinets, one on each side
of the room. On one is written the word 'Mailing Addresses', and the other
has the words 'Maiden Name' carefully engraved upon it. There is an
important SIGN on the far wall which you really should look at. The Post
Office is east of here."

extra {"files"}
"The files are secret to all but the person whose name appears on the file.
Look at the sign if you need information on how to access your file."

extra {"cabinets", "cabinet"}
"Each Cabinet is almost six feet in height and a good two feet wide. One
contains the files which record Mailing Addresses, and the other has the
Maiden Name lists."

extra {"desk"}
"The desk is quite bare, but looks proper and makes the owner feel very
important."

extra {"sign", "instructions", "wall"}
"<pre><div class='cpc'>Personal File Information</div><div class='cw'><br/>
-------------------------<br/>
      `</div><div class='cpw'>see file</div><div class='cw'>' to see your current file information.<br/>
<br/>
      `</div><div class='cpw'>maiden &lt;newname&gt;</div><div class='cw'>' to change your Mother's Maiden name to<br/>
       something new. This is used to verify your identity should<br/>
       you lose your password. You can use any word or name as<br/>
       long as you remember it. (e.g. maiden gates)<br/>
<br/>
      `</div><div class='cpw'>mail &lt;email address&gt;</div><div class='cw'>' to change your email address to<br/>
something<br/>
       new (e.g. mail joe@valhalla.com).<br/>
<br/>
</div><div class='cpc'>Player Email List (</div><div class='cr'>Not the mud mailing list - Just a list of<br/>
emails</div><div class='cw'>)<br/>
-----------------<br/>
      `</div><div class='cpw'>update</div><div class='cw'>' will update your entry on the email list (or create<br/>
       an entry if you don't already have an entry on the list).<br/>
<br/>
      `</div><div class='cpw'>public</div><div class='cw'>' to allow others to see your email address. This is<br/>
       by default set off so only you see your address. Typing public<br/>
       again will deny people from seeing your email address. Your current<br/>
       email address on this list may not be the same as that of your<br/>
       character unless you have used the </div><div class='cpw'>update</div><div class='cw'> command mentioned<br/>
       above.<br/>
<br/>
      `</div><div class='cpw'>show &lt;charactername&gt;</div><div class='cw'>' will show you the email address of<br/>
       player &lt;charactername&gt;, if they have entered one and it is publicly<br/>
       visible.<br/>
<br/>
Only you, the player, and higher level administrators (254+) can see your<br/>
maiden name setting, and unless you set your email to public, the same<br/>
restriction will reply to your email address.</div></pre>"

flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_MOB}
movement SECT_INSIDE
gmap(219,637)
east to postoffice;
ALWAYS_LIGHT

end /* records */

                                food_store

title "Rosanne's Food Store"
descr
"A scent of various foods fills the store. There is a <a cmd='read #'>sign</a> placed
on the wall. The village road is south of here."
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_MOB}
movement SECT_INSIDE
gmap(328,528)
south to village_rd2;
ALWAYS_LIGHT
extra {"sign", "wall"}
"The sign says:<pre><br/>
<br/>
    Use `<a cmd='#'>list</a>' to see what is in store.<br/>
        `buy &lt;item&gt;' to buy an item.<br/>
        `sell &lt;item&gt;' to sell an item.<br/>
        `request &lt;item&gt;' to ask the price of an item.<br/>
        `value &lt;item&gt;' to make the shopkeeper evaluate your item.</pre>"
end

                                 ironmonger

title "Harold's Assorted Goods"
descr
"Various items cover the shelves behind the counter. It is clear that
this shop has all the nifty little things you need on your adventures.
A <a cmd='read #'>sign</a> has been hung on the wall."
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_MOB}
movement SECT_INSIDE
gmap(328,636)
north to village_rd2;
ALWAYS_LIGHT
extra {"sign", "wall"}
"The sign says:<pre><br/>
<br/>
    Use `<a cmd='#'>list</a>' to see what is in store.<br/>
        `buy &lt;item&gt;' to buy an item.<br/>
        `sell &lt;item&gt;' to sell an item.<br/>
        `request &lt;item&gt;' to ask the price of an item.<br/>
        `value &lt;item&gt;' to make the shopkeeper evaluate your item.</pre>"
end

                                  bank

title "Mammon's Nest"
descr
"Without doubt this is the finest building in Udgaard, although not large,
it has been made from large granite rocks. A white marble <a cmd='read #'>sign</a> hangs on the
wall.  A small passage north leads into a back room and the street is to
the south."
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_MOB}
movement SECT_INSIDE
gmap(534,541)
north to ud_storage;
south to village_rd3;
ALWAYS_LIGHT
extra {"white marble sign", "marble sign", "sign", "wall"}
"It says :-<pre><br/>
                         The Bank of Udgaard<br/>
<br/>
                  We stash your cash and hold your<br/>
                    gold for a mere 5% interest.<br/>
<br/>
    Use `deposit &lt;amount&gt;' to deposit,<br/>
        `withdraw &lt;amount&gt;' to withdraw, and<br/>
        `exchange' &lt;amount&gt; to change into coins of more wealth.<br/>
        `balance' to get a statement of your account.</pre>"
end

                                  accuse_room

title "Guard's Office"
descr
"You are inside the guards office. Through the window in the northern
wall you see the Bank beyond the village road. There is a <a cmd='read #'>sign</a> hanging
on the wall."
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_MOB,UNIT_FL_NO_TELEPORT}
movement SECT_INSIDE
gmap(534,639)
north to village_rd3;
south to jail open {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED, EX_PICKPROOF}
      key jail_key
      descr "You see the heavy steel door." keyword {"steel door", "door"}
      difficulty 35;
ALWAYS_LIGHT
extra {"sign", "wall"}
"The sign says:<pre><br/>
<br/>
    In order to accuse another player of a crime, you must accuse him<br/>
    to the captain. Use the command:<br/>
<br/>
       accuse &lt;player&gt; murder   - for a murder accusation.<br/>
       accuse &lt;player&gt; stealing - for a stealing accusation.</pre>"
end


                            jail
names {"jail"}
title "The Jail"
descr
"You are in a dark and humid jail.  The dark stone walls are hard and cold
to the touch.  A heavy steel door, supposed to keep prisoners inside the
jail, is in the north stone wall."

extra {"wall","walls"}
"The walls are marked with lots of scratches.  Some of them spell sentences
like `INGRES STRIKES AGAIN'."

flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_TELEPORT}
movement SECT_INSIDE
gmap(534,691)

north to accuse_room descr "You see the heavy steel door."
   key jail_key keyword {"steel door", "door"}
   open {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED, EX_PICKPROOF} 
   difficulty 35;

ALWAYS_LIGHT
end

                                   armourer

title "Better Clothing"
descr
"This shop is actually a combined armory and smith. The smell of hot
iron fills the room. A <a cmd='read #'>sign</a> is hanging on the wall."
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_MOB}
movement SECT_INSIDE
gmap(588,529)
south to village_rd4;
ALWAYS_LIGHT
extra {"sign", "wall"}
"The sign says:<pre><br/>
<br/>
    Use `<a cmd='#'>list</a>' to see what is in store.<br/>
        `buy &lt;item&gt;' to buy an item.<br/>
        `sell &lt;item&gt;' to sell an item.<br/>
        `request &lt;item&gt;' to ask the price of an item.<br/>
        `value &lt;item&gt;' to make the shopkeeper evaluate your item.</pre>"
end


                                   weaponsmith

title "Sharper Swords"
descr
"This is a neat and tidy small weapon shop. You wonder why there is no
smithy in here but soon realize that Arny must be working with Slade from
across the street. A <a cmd='read #'>sign</a> is hanging on the wall."
flags {UNIT_FL_NO_WEATHER, UNIT_FL_INDOORS, UNIT_FL_NO_MOB}
movement SECT_INSIDE
gmap(588,637)
north to village_rd4;
ALWAYS_LIGHT
extra {"sign", "wall"}
"The sign says:<pre><br/>
<br/>
    Use `<a cmd='#'>list</a>' to see what is in store.<br/>
        `buy &lt;item&gt;' to buy an item.<br/>
        `sell &lt;item&gt;' to sell an item.<br/>
        `request &lt;item&gt;' to ask the price of an item.<br/>
        `value &lt;item&gt;' to make the shopkeeper evaluate your item.</pre>"
end

#ifdef EXTENDEDMUD
fighters_way1
title "Swordsman Way"
names {"swordsman way"}
descr
"The street here is paved with a reddish colored flagstone, each of them
laid with loving pride by some long-ago mason. A couple of smaller sized
trees stand proud, despite the knick's and cuts countless swords have made
in their trunks over the years. The road continues to the east and west."
movement SECT_CITY
ALWAYS_LIGHT
extra {"street","mason","flagstone","stone"}
"The flagstones are a reddish brown color, hand made and laid with loving
care."
west to guild_rd1;
east to fighters_way2;
end

  fighters_way2
title "Swordsman Way"
names {"swordsman way"}
descr
"The street here is paved with a reddish colored flagstone, each of them
laid with loving pride by some long-ago mason. The sounds of swords
clanging can be heard through out the area. The road continues to the
east and west from here. A small shop sells outdoors equipment north of
here."
extra {"shop"}
"The small shop offers a variety of equipment handy for anyone travelling
out in the wilderness."
extra {"street","mason","flagstone","stone"}
"The flagstones are a reddish brown color, handmade and laid with loving
care."
movement SECT_CITY
ALWAYS_LIGHT
east to fighters_way3;
west to fighters_way1;
north to field_shop;
end

fighters_way3
title "Swordsman Way"
names {"swordsman way"}
descr
"The street here is paved with a reddish colored flagstone, each of them
laid with loving pride by some long-ago mason."

west to fighters_way2;

extra {"street","mason","flagstone","stone"}
"The flagstones are a reddish brown color, hand made and laid with loving
care."
movement SECT_CITY
ALWAYS_LIGHT



/*EXTENDEDMUD To the south is an impressive edifice which appears to be the town hall.*/


south to town_hall;
end


                                town_hall

names {"town hall", "hall"}
title "Udgaard Town Hall"
descr
"The Udgaard Town Hall is a majestic yet subtle building. The craftsmanship
of the woodwork here was undertaken by skilled craftsman, and large
glass windows line the walls.  The building is filled with rows of
wooden benches, and a small stage has been raised at one end of the hall.
A set of stairs lead upwards to the Mayor's home."
extra {"udgaard town hall", "town hall", "hall"}
"The Town Hall of Udgaard is a place for meetings and the dissemination
of important information."
extra {"woodwork"}
"The woodwork is quite exquisite, having been carved by skilled artisans."
extra {"glass windows", "windows"}
"No expense was spared on this building, by the necessity of having a
well lit building that was sheltered from the elements."
extra {"wooden benches", "benches", "rows"}
"It is here that the commoners from the hamlet and the townspeople of
udgaard gather to discuss matters."
extra {"small stage", "stage"}
"The stage bears a large podium, and a number of seats bearing name
plates.  The nameplates read: Whistler, Palio, Saor, Eirinn, Drevar,
Jager...
and so on down the wizard list.  The podium has some letters scratched into
it, you think you might be able to read them."
extra {"scratches","letters","podium"}
"The letters read: 'Papi, Gnort, God, Quinn and Mead were here'."
extra {"stairs"}
"The stairs lead upwards to the Mayor's home."
flags {UNIT_FL_NO_WEATHER, UNIT_FL_NO_TELEPORT,UNIT_FL_NO_BURY, UNIT_FL_SACRED}
movement SECT_INSIDE
north to fighters_way3;
up to mayor_house;
ALWAYS_LIGHT
end
                      mayor_house

title "The Mayor's Home"
descr
"The Mayor's home is a small but quaint room above the Town Hall.
There is a fireplace against one wall, and in addition to the Mayor's
bed are four beds for his guards.  A large desk sits against one wall,
with what looks like an overstuffed chair standing before it. There is a
bookshelf against one wall, and a nice rug covers the floor. A staircase
leads down."
extra {"mayor's home", "home", "room"}
"The Mayor's home looks like a nice place, whether for conducting business
or
just stopping in for a chat."
extra {"fireplace"}
"The fireplace glows with a warm flame."
extra {"mayor's bed", "beds", "bed"}
"The beds look to be quite comfortable."
extra {"large desk", "desk"}
"The desk is constructed of mahogany, or some similar fine wood.  Its top
is covered with papers."
extra {"overstuffed chair", "chair"}
"The chair looks to be wonderfully comfortable.  A truly great
place to sit."
extra {"bookshelf"}
"You can make out some of the titles in the bookshelf:  Screetons Book of
Knowledge, Guide to Familiars, A small book about horses, The Maleus
Malefacarum, The history of Sanctuary, Aristol's Book, The book of Creation,
The Book of Remembrance, the Book of Demonic Knowledge, Thorbardins
Events, Practical Demonology, Bases and Acids in Modern Alchemy, and
the list goes on."
extra {"nice rug", "rug"}
"The rug is just a nice throw rug."
extra {"staircase"}
"The stairs lead down to the Town Hall."
flags {UNIT_FL_NO_WEATHER}
movement SECT_INSIDE
down to town_hall;
ALWAYS_LIGHTeast to entrance@fightersguild;

end



healers_way1
title "Tranquility Path"
names {"tranquility Path"}
descr
"You are traveling down a quiet dirt path, birds can be heard singing
here during any season and large shade trees provide some natural cover
from the elements. All the noises of the nearby village have been
filtered out and a sense of peace washes over you. The road
continues to the east and west from here."
extra {"path","dirt path","dirt"}
"The path is made from well packed dirt."
extra {"trees","tree"}
"The trees add a welcome tranquillity to the area."
west to healers_way2;
east to guild_rd1;
movement SECT_CITY
ALWAYS_LIGHT
end

  healers_way2
title "Tranquility Path"
names {"tranquility Path"}
descr
"You are traveling down a quiet dirt path, birds can be heard singing
here during any season and large shadowy trees provide some natural cover
from the elements. All the noises of the nearby village have been
filtered out and a sense of peace washes over you. The path is lined with
a soft green grass that looks inviting to sit and rest on in any
season. The path continues to the east and west from here, while to the
north a small shop offers charms and talismans for adventurers."
extra {"shop"}
"The small shop sells all sorts of charms, herbs and holy items, mostly
for people of the faith, but everyone is welcome."
extra {"path","dirt path","dirt"}
"The path is made from well packed dirt."
extra {"trees","tree"}
"The trees add a welcome tranquility to the area."
north to heal_shop
open {EX_OPEN_CLOSE} keyword {"door"};

west to healers_way3;
east to healers_way1;
movement SECT_CITY
ALWAYS_LIGHT
end


  healers_way3
title "Tranquility Path"
names {"tranquility Path"}
descr
"You are traveling down a quiet dirt path, birds can be heard singing
here during any season and large shade trees provide some natural cover
from the elements. All the noises of the nearby village have been
filtered out and a sense of peace washes over you."

extra {"path","dirt path","dirt"}
"The path is made from well packed dirt."
extra {"trees","tree"}
"The trees add a welcome tranquillity to the areas."
east to healers_way2; movement SECT_CITY
movement SECT_CITY
ALWAYS_LIGHT
end

dark_all1
title "A Dark Alley"
names {"alley"}
descr
"You are walking down a dark dreary alley. It is difficult to see much of
anything down here. Even in the middle of the day a gloom seems to hang
over the place as if mother nature knew that those that frequent this
place should be hidden from the sight of the honest people of the
surrounding
village. You hear the faint whisper of movement in the darkness but are
unable to locate it origin. "
extra {"gloom","shadows"}
"It is dark and difficult to see. It seems as if one of the shadows
moved...just a little."
west to guild_rd2;
east to dark_all2;
movement SECT_CITY
ALWAYS_LIGHT
end


  dark_all2
title "A dark alley"
names {"alley"}
descr
"You are walking down a dark dreary alley. It is difficult to see much of
anything down here. Even in the middle of the day a gloom seems to hang
over the place as if mother nature knows that those that frequent this
place should be hidden from the sight of the honest people of the
surrounding
village. Looking around there seems to be some slight movement off in the
shadows, you get the feeling you had better hang on to your purse. A
dark side alley leads off to the south."
extra {"side alley","sidealley"}
"A dark and narrow side-alley, you think you can spot someone standing in
there..."
extra {"gloom","shadows"}
"It is dark and difficult to see. It seems as if one of the shadows
moved...just a little."
west to dark_all1;
east to dark_all3;
south to side_alley;
movement SECT_CITY
ALWAYS_LIGHT
end


dark_all3
title "A Dark Alley"
names {"alley"}
descr

"You are walking down a dark dreary alley. It is difficult to see much of
anything down here. Even in the middle of the day a gloom seems to hang
over the place as if mother nature knows that those that frequent this
place should be hidden from the sight of the honest people of the
surrounding  village."
/*while to the east appears to be an auction house*/
extra {"gloom","shadows"}
"It is dark and difficult to see. It seems as if one of the shadows
moved... just a little."
extra {"trees"}
"The trees of the forest add to the gloom of the area."
west to dark_all2;
/* EXTENDED MUD east to ud_auction;*/
movement SECT_CITY
ALWAYS_LIGHT
end

magic_way1
title "Elemental Path"
names {"elemental path"}
descr
"You are walking down a quiet cobblestone path. Small flowers grow along the
edges giving the area a peaceful look. Small shade trees provide
the scholars that frequent this area a place to rest and read, as well as
providing the perfect place for the young conjurers to practice their
fledgling spells, as is evident by the scorch marks on many of the trunks.
You can follow the path to the east or west."
extra {"cobblestone","path","stone"}
"The path is made from plain white handcrafted cobblestones."
extra {"trees"}
"The trees are covered in burn marks, some conjurer has been practising
here."
east to guild_rd2;
west to magic_way2;
movement SECT_CITY
ALWAYS_LIGHT
end


 magic_way2
title "Elemental Path"
names {"elemental path"}
descr
"You are walking down a quiet cobblestone path. Small flowers grow along the
edges giving the area a peaceful look. Small shade trees provide
the scholars that frequent this area a place to rest and read. At spots
along the path you notice burn marks on the cobblestones and can only
assume some young conjurer was practicing their fireball spells at sometime
in the past. Upon closer inspection you notice that many of the trees are
damaged by young conjurers as they worked to hone the skills of their
chosen field.<br/>
A <a cmd='read #'>sign</a> saying 'Mr Winky's Tailoring &amp; Crafting' hangs over a door to a
shop to the south."
extra {"sign","door","shop"}
"The sign over the door says 'Mr Winky's Tailoring &amp; Crafting' and
a quick look inside tells you that it does not lie."
extra {"cobblestone","path","stone"}
"The path is made from plain white handcrafted cobblestones."
extra {"trees"}
"The trees are covered in burn marks, some conjurer has been practising
here."
east to magic_way1;
west to magic_way3;
south to mageshop;
movement SECT_CITY
ALWAYS_LIGHT
end

  magic_way3
title "Elemental Path"
names {"elemental path"}
descr
"You are walking down a quiet cobblestone path. Small flowers grow along the
edges giving the area a peaceful look. Small shade trees provide
the scholars that frequent this area a place to rest and read.  The path
leads off to the east back toward the village, while to the north a small
door leads into a tobacco shop."
east to magic_way2;
north to tobacco_shop open {EX_OPEN_CLOSE} keyword {"door"};
extra {"tobacco shop","shop","door"}
"The small tobacco shop is frequently visited by the local wizards who
enjoy a good smoke after a hard day of spell-tossing."
extra {"cobblestone","path","stone"}
"The path is made from plain white handcrafted cobblestones."
extra {"trees"}
"The trees are covered in burn marks, some conjurer has been practising
here."
movement SECT_CITY
ALWAYS_LIGHT
end
#endif // EXTENDEDMUD

/* --------------------- GUILD SHOPS ----------------------- */

/* ----------------- MAGESHOP ------------------------------ */
  mageshop
names {"tailor booth","booth"}
title "At a small tailor booth"
descr
"This small market stand seems filled with random merchandise. Clothes seem the main
feature here, but a few weapons and other random trinkets complete the collection of
the absolute must for the well-equipped beginner student of magic. A <a cmd='read #'>sign</a>
hanging over the booth tries to explain a few things."
extra {"sign over the booth", "booth sign", "sign"}
"<pre>The sign says:<br/>
<br/>
 '<a cmd='#'>list</a>'  - lists the merchandise.<br/>
 'buy &lt;item&gt;' - lets you acquire an item.<br/>
 'sell &lt;item&gt;' - lets you sell an item.<br/>
<br/>
  Warning: As this shop specializes in mage items, some of the items<br/>
  may be worthless to non-students.<br/>
<br/>
</pre>"
movement SECT_CITY
gmap(382,720)
northeast to market;
ALWAYS_LIGHT
end

/* ----------------- THIEVES BACKALLEY --------------------- */
  side_alley
names {"scruffy booth","booth"}
title "A scruffy booth at the Udgaard Market"
descr
"You're at the southeast corner of the Udgaard Market and it is clearly
the scruffy looking part of the marketplace. An old booth with what looks
like mostly junk items is here and you're wondering how anyone could possibly
make a living from this. Some smashed old barrels with vegetables stand next
to the booth."

northwest to market;
movement SECT_CITY
gmap(466,720)

extra {"old barrels","barrels","barrel","vegetables"}
"One of the barrels is smashed, rotting heads of cabbage lying in the
smelly mud. The other one is half-filled with stinky rain-water."
end

/* ----------------------------- HEAL SHOP ------------------ */

  heal_shop
names {"The Herbalist and Talismongers", "supplies"}
title "The Herbalist &amp; Talismonger stand"
descr
"The air in northwest corner of the Udgaard Market smells faintly of herbs,
incense and other various healer ingredients.  You hear a  weak tinkle of
small bells hanging from the small market stand in front of you. The stand is
filled with trinkets of all sorts and a <a cmd='read #'>sign</a> catches your attention."
movement SECT_CITY
gmap(382,637)
southeast to market;
ALWAYS_LIGHT

/*extra {"bells over the door","bells","bell"}
"Tiny brass bells hang over the door, tinkling musically."
extra {"coloured windows","glass","windows","light"}
"The many-coloured glass makes you think of cathedral windows. Perhaps
owner of this shop got his glass cheap from the church. Or perhaps he was
out with a rock himself, collecting whatever fell down."*/

extra {"trinkets","herbs","incense","ingredients"}
"A lot of talismans, herbs, vials, holy charms and whatever the
well-supplied superstitious needs to get him through the day."
extra {"sign"}
"<pre><br/>
 ________________________________________________________<br/>
[                                                        ]<br/>
[   <div class='cpc'>'list'</div><div class='cw'>         - to view items currently in stock    ]<br/>
[   </div><div class='cpc'>'buy &lt;item&gt;'</div><div class='cw'>   - to buy an item from the talismonger ]<br/>
[   </div><div class='cpc'>'sell &lt;item&gt;'</div><div class='cw'>  - to sell an item from your inventory ]<br/>
[                                                        ]<br/>
[   </div><div class='cpc'>'ask talismonger &lt;item&gt;'</div><div class='cw'> will give you a description ]<br/>
[   of the item in question; only items sold in this     ]<br/>
[   store can be examined in this way.                   ]<br/>
[________________________________________________________]<br/>
<br/>
<br/></div></pre>"
end

/* --------------------- OUTDOORS SHOP ----------------- */

                field_shop
names {"field equipment booth","booth"}
title "Field Equipment Booth"
descr
"This small market booth is filled with all sorts of equipment, useful
in the outdoors. Perhaps you can browse the many items here and find
something you might like. A small <a cmd='read #'>sign</a> hangs over the booth."

movement SECT_CITY
gmap(465,639)
ALWAYS_LIGHT
southwest to market;

extra {"small sign","sign"}
"<pre><br/>
 ________________________________________________________<br/>
[                                                        ]<br/>
[   <div class='cpc'>'list'</div><div class='cw'>         - to view items currently in stock    ]<br/>
[   </div><div class='cpc'>'buy &lt;item&gt;'</div><div class='cw'>   - to buy an item from the shopkeeper  ]<br/>
[   </div><div class='cpc'>'sell &lt;item&gt;'</div><div class='cw'>  - to sell an item from your inventory ]<br/>
[                                                        ]<br/>
[   </div><div class='cpc'>'ask shopkeeper &lt;item&gt;'</div><div class='cw'> will give you a description  ]<br/>
[   of the item in question; only items sold in this     ]<br/>
[   store can be examined in this way.                   ]<br/>
[________________________________________________________]<br/>
<br/>
<br/></div></pre>"
end

/* -------------------- TOBACCO SHOP ------------------- */

  tobacco_shop
names {"tobacco shop","shop"}
title "At 'Ye Olde Tobacco Shoppe'"
descr
"This booth is very small. Even so, the aroma of tobacco permeates the air.
The table is filled with jars and boxes of tobacco, cigars, pipes and
other articles for the well-supplied smoker. A small <a cmd='read #'>sign</a> stands 
amongst the wares."

movement SECT_CITY
gmap(466,679)
west to market;
ALWAYS_LIGHT

extra {"shelves","jars","boxes","tobacco","cigars","pipes","articles"}
"Those shelves keep all your heart would desire if you are a smoker or
plan to get off to a good start."
extra {"small sign","sign"}
"<pre><br/>
 ________________________________________________________<br/>
[                                                        ]<br/>
[   <div class='cpc'>'list'</div><div class='cw'>         - to view items currently in stock    ]<br/>
[   </div><div class='cpc'>'buy &lt;item&gt;'</div><div class='cw'>   - to buy an item from the seller      ]<br/>
[   </div><div class='cpc'>'sell &lt;item&gt;'</div><div class='cw'>  - to sell an item from your inventory ]<br/>
[                                                        ]<br/>
[   </div><div class='cpc'>'ask seller &lt;item&gt;'</div><div class='cw'> will give you a description      ]<br/>
[   of the item in question; only items sold in this     ]<br/>
[   store can be examined in this way.                   ]<br/>
[________________________________________________________]<br/>
</div></pre>"
end

%objects

kurt
names {"Kurt"}
title "Kurt the Master of Records"
descr "Kurt the Master of Records is sitting behind his desk here."

extra {}
"He looks like an ordinary clerk, but there's a twinkle in his eye that
says he's not what he appears to be. In fact he looks like he's not really
alive at all. You get the impression he wants you to look that the sign
on the wall here."

CONTAINER_DEF(1)

dilcopy info_changer@udgaard();
weight 5

end

                             mail_list_obj

names {"email object", "object", "mail_list_obj"}
title "the Email List"
descr "The email list object is here. Please do not touch. Please leave wizi."
manipulate {MANIPULATE_TAKE}
minv 253
/* dilcopy email_list@udgaard();*/
weight 1
end /* mail_list_obj */

honeybun
names {"honey bun", "bun", "pastry"}
title "a honey bunn"
descr "A huge honey bunn pastry has been placed here."
manipulate {MANIPULATE_TAKE}
FOOD_DEF(5, 0)
weight 1
cost 5   IRON_PIECE
end
                             axe0

names {"hand axe","axe"}
title "an axe"
descr "A short axe with a large head is here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WIELD}
/* Not pure Iron / Craftman-ship = -5% */
WEAPON_DEF(WPN_HAND_AXE, -5, 0)
weight 6
cost  4   SILVER_PIECE
end

/*axe for head bouncer*/
moot_axe
names {"axe"}
title "an axe"
descr "A large axe lies on the floor."
manipulate {MANIPULATE_TAKE, MANIPULATE_WIELD}
WEAPON_DEF(WPN_BATTLE_AXE, 0, 0)
MATERIAL_METAL("oak shaft with iron ")
weight 12
cost 20 IRON_PIECE
rent 10 IRON_PIECE
extra {}
"A huge headed axe that has not been cleaned well.
Bits hang off the back of it. Shrunken heads dangle like tassels from the haft.
It takes two hands to handle this weapon."
extra {"heads"}
"Hmm perhaps it is not a good idea to annoy this one. You
think you may recognize a head or two. Isn't that one that
dude Whittler or something like that?"
extra {"$repair"}
" "
end

moot_quil
names {"quill","dagger"}
title "a pointy quill"
descr "A quill with a very sharp point lies here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WIELD}
WEAPON_DEF(WPN_DAGGER, 0,0)
weight 1
extra {}
"Quill looks like it might hurt a bit."
extra{"$repair"}
" "
end

/*axe for rathvith*/
moot_axe2
names {"axe"}
title "an axe"
descr "A short hafted axe lies on the floor."
manipulate {MANIPULATE_TAKE, MANIPULATE_WIELD}
WEAPON_DEF(WPN_BATTLE_AXE, 0, 0)
MATERIAL_METAL("oak shaft with iron ")
weight 12
cost 20 IRON_PIECE
rent 10 IRON_PIECE
extra {}
"A huge headed axe that is well polished and very sharp."
extra {"$repair"}
" "
end

/*sword for bouncers*/
moot_swor
names {"longsword","sword"}
title "a heavy longsword"
descr "A sharp well used sword waits here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WIELD}
WEAPON_DEF(WPN_LONG_SWORD, 0,0)
MATERIAL_METAL("iron")
cost 12 IRON_PIECE
rent 6 IRON_PIECE
weight 5
extra {}
"This longsword has been sharpened perfectly and is well oiled and used."
end

/* Spatula or turner used by food shopkeeper*/
moot_epsp
names {"spatula"}
title "a spatula"
descr "a spatula for burger flipping hangs here"
manipulate {MANIPULATE_TAKE, MANIPULATE_WIELD}
WEAPON_DEF(WPN_CLUB, 0, 0)
MATERIAL_METAL("cheap metal")
weight 1
cost 2 IRON_PIECE
rent 1 IRON_PIECE
weight 5
extra {}
"It's a long flat metal thing with a handle.
It's perfect for flipping burgers and sandwiches."

end


   ud_cont
names {"storage container", "udcontainer"}
title "a storage container"
descr "A storage container should not be on the ground."
type ITEM_OTHER
weight 0
CONTAINER_DEF(2000)

dilbegin new_storage();

code
{

sendtext ("Storage has been changed. You must seek an admin to take "+
    "your stored items from old storage.", self);
heartbeat:= PULSE_VIOLENCE*SECS_PER_MUD_YEAR;
while (TRUE) pause;

}

dilend

end

                               paladin_book

names {"Paladins Handbook", "Paladin's handbook", "handbook", "book"}
title "the Paladin's Handbook"
descr "A small Paladin's Handbook has carelessly been left here."
manipulate {MANIPULATE_TAKE}
type ITEM_NOTE
weight 1

dilcopy eager_read@udgaard();

extra {}
"<pre>                <div class='cpy'>The Paladin's Handbook to Valhalla</div><div class='cw'><br/>
<br/>
<br/>
                 Chapter 1 ... Introduction<br/>
                 Chapter 2 ... Combat<br/>
                 Chapter 3 ... How to get around<br/>
                 Chapter 4 ... The Automated Tour<br/>
                 Chapter 5 ... Hint &amp; Tips<br/>
                 Chapter 6 ... Help Topics<br/>
<br/>
Here is an example of how to read chapter one:<br/>
<br/>
   &gt; read chapter 1<br/>
</div></pre>"

extra {"chapter 1", "introduction", "chapter one"}

"<pre>                        INTRODUCTION<br/>
<br/>
This handbook describes how to get started playing Valhalla as a<br/>
Midgaard Paladin. Read it carefully and you can get started in only<br/>
a few minutes.<br/><br/><br/>
<br/>
You have just received a lot of equipment and a dictionary which<br/>
has been prepared especially for you. To see the equipment, type:<br/>
<br/>
   &gt; inventory (or the shorthand version: i)<br/>
   &gt; equipment (or the shorthand version: eq)<br/>
<br/>
To see what aliases have been defined in your dictionary, write:<br/>
<br/>
   &gt; alias (or the shorthand version: al)<br/>
<br/>
Now read chapter 2.</pre>"

extra {"chapter 2", "chapter two"}
"<pre>                           COMBAT<br/>
<br/>
You must always be sure that your opponent is not out of your<br/>
league, you can do this by using the consider command, example:<br/>
<br/>
  &gt; consider rabbit<br/>
<br/>
This will approximately tell you how dangerous your opponent is.<br/>
Right now you can try your strength against rabbits, skunks and badgers,<br/>
and perhaps even risk the more dangerous fox, deer and boar.<br/><br/><br/>
<br/>
Aliases have been defined in your dictionary, they are a shorthand method<br/>
for writing long commands, so when you spot one of the above opponents,<br/>
you can quickly attack it, example:<br/>
<br/>
  &gt; kr  (to execute the kill rabbit alias)<br/>
<br/>
Now read chapter 3 about finding your opponents.</pre>"


extra {"chapter 3", "chapter three"}
"<pre>                         HOW TO GET AROUND<br/>
<br/>
You are just about ready, all you need is to find your way around this<br/>
place. Your life begins in the small village of Udgaard, located between<br/>
the ancient forest of Haon Dor and the younger Cypress Forest.<br/>
While in Udgaard, you can get a map at any time by typing:<br/>
<br/>
   &gt; help<br/>
<br/>
The map shows you how to get to the Haon-Dor Forest as well as the<br/>
Cypress Forest. From the village square simply go east three times to<br/>
get to the Cypress forest, or west three times to get to the Haon Dor<br/>
forest. Both locations are ideal for beginners such as yourself.<br/><br/><br/>
<br/>
Once in either forest, find a rabbit, a skunk, a badger or a fox<br/>
and use the shorthand aliases (kr to kill a rabbit, kf to kill a fox,<br/>
kb to kill a badger, etc.)<br/><br/><br/>
<br/>
Now read chapter four.</pre>"

extra {"chapter 4", "chapter four"}
"<pre>                          THE AUTOMATED TOUR<br/>
<br/>
If you have made it this far, you are well on your way! In Valhalla<br/>
there is a teacher which will explain you the basics of the game. He<br/>
can be quite boring, but if you feel more comfortable getting the<br/>
tour, write:<br/>
<br/>
   &gt; say help me newbie guide<br/>
<br/>
when standing in the Temple of Udgaard. This will start an automated tour<br/>
of the mud commands and the town. Now read chapter 5.</pre>"


extra {"chapter 5", "chapter five"}

"<pre>                           HINTS &amp; TIPS<br/>
<br/>
Try the following commands:<br/>
<br/>
  &gt; score<br/>
  &gt; status<br/>
  &gt; status weapons<br/>
  &gt; status spells<br/>
  &gt; status skills<br/>
<br/>
There is no need for you to visit your guild until you have earned<br/>
a level. All your skills and abilities are set from the beginning.<br/>
You can earn experience faster by being in a group with other players.<br/><br/><br/>
<br/>
Note that when you are in wimpy mode you only gain HALF xp but you<br/>
significantly reduce the risk of dying. See 'help wimpy' for further<br/>
details.<br/><br/><br/>
<br/>
If you lose your equipment, you can always pray to the statue of Odin<br/>
in the Temple of Udgaard. Odin will grant you new equipment for that which<br/>
is lost or missing, write this:<br/>
<br/>
  &gt; pray odin<br/>
</pre>"

extra {"chapter 6", "chapter six"}
"<pre>                            HELP TOPICS<br/>
<br/>
The following are good help topics for beginners:<br/>
<br/>
   &gt; help me<br/>
   &gt; help status<br/>
   &gt; help score<br/>
   &gt; help wear<br/>
   &gt; help wimpy<br/>
   &gt; help alias<br/>
   &gt; help abilities<br/>
   &gt; help weapon<br/>
   &gt; help armour<br/>
   &gt; help practice<br/>
   &gt; help info<br/>
   &gt; help index</pre>"
end

                               knight_book

names {"Dark Knights Handbook", "knight's handbook", "handbook", "book"}
title "the Dark Knight's Handbook"
descr "A small Dark Knight's Handbook has carelessly been left here."
manipulate {MANIPULATE_TAKE}
type ITEM_NOTE
weight 1

dilcopy eager_read@udgaard();

extra {}
"<pre>                <div class='cpy'>The Dark Knight's Handbook to Valhalla</div><div class='cw'><br/>
<br/>
<br/>
                 Chapter 1 ... Introduction<br/>
                 Chapter 2 ... Combat<br/>
                 Chapter 3 ... How to get around<br/>
                 Chapter 4 ... The Automated Tour<br/>
                 Chapter 5 ... Hint &amp; Tips<br/>
                 Chapter 6 ... Help Topics<br/>
<br/>
Here is an example of how to read chapter one:<br/>
<br/>
   &gt; read chapter 1<br/>
</div></pre>"

extra {"chapter 1", "introduction", "chapter one"}

"<pre>                        INTRODUCTION<br/>
<br/>
This handbook describes how to get started playing Valhalla as a<br/>
Midgaard Dark Knight. Read it carefully and you can get started in only<br/>
a few minutes.<br/><br/><br/>
<br/>
You have just received a lot of equipment and a dictionary which<br/>
has been prepared especially for you. To see the equipment, type:<br/>
<br/>
   &gt; inventory (or the shorthand version: i)<br/>
   &gt; equipment (or the shorthand version: eq)<br/>
<br/>
To see what aliases have been defined in your dictionary, write:<br/>
<br/>
   &gt; alias (or the shorthand version: al)<br/>
<br/>
Now read chapter 2.</pre>"

extra {"chapter 2", "chapter two"}
"<pre>                           COMBAT<br/>
<br/>
You must always be sure that your opponent is not out of your<br/>
league, you can do this by using the consider command, example:<br/>
<br/>
  &gt; consider rabbit<br/>
<br/>
This will approximately tell you how dangerous your opponent is.<br/>
Right now you can try your strength against rabbits, skunks and badgers,<br/>
and perhaps even risk the more dangerous fox, deer and boar.<br/><br/><br/>
<br/>
Aliases have been defined in your dictionary, they are a shorthand method<br/>
for writing long commands, so when you spot one of the above opponents,<br/>
you can quickly attack it, example:<br/>
<br/>
  &gt; kr  (to execute the kill rabbit alias)<br/>
<br/>
Now read chapter 3 about finding your opponents.</pre>"


extra {"chapter 3", "chapter three"}
"<pre>                         HOW TO GET AROUND<br/>
<br/>
You are just about ready, all you need is to find your way around this<br/>
place. Your life begins in the small village of Udgaard, located between<br/>
the ancient forest of Haon Dor and the younger Cypress Forest.<br/>
While in Udgaard, you can get a map at any time by typing:<br/>
<br/>
   &gt; help<br/>
<br/>
The map shows you how to get to the Haon-Dor Forest as well as the<br/>
Cypress Forest. From the village square simply go east three times to<br/>
get to the Cypress forest, or west three times to get to the Haon Dor<br/>
forest. Both locations are ideal for beginners such as yourself.<br/><br/><br/>
<br/>
Once in either forest, find a rabbit, a skunk, a badger or a fox<br/>
and use the shorthand aliases (kr to kill a rabbit, kf to kill a fox,<br/>
kb to kill a badger, etc.)<br/><br/><br/>
<br/>
Now read chapter four.</pre>"

extra {"chapter 4", "chapter four"}
"<pre>                          THE AUTOMATED TOUR<br/>
<br/>
If you have made it this far, you are well on your way! In Valhalla<br/>
there is a teacher which will explain you the basics of the game. He<br/>
can be quite boring, but if you feel more comfortable getting the<br/>
tour, write:<br/>
<br/>
   &gt; say help me newbie guide<br/>
<br/>
when standing in the Temple of Udgaard. This will start an automated tour<br/>
of the mud commands and the town. Now read chapter 5.</pre>"


extra {"chapter 5", "chapter five"}

"<pre>                           HINTS &amp; TIPS<br/>
<br/>
Try the following commands:<br/>
<br/>
  &gt; score<br/>
  &gt; status<br/>
  &gt; status weapons<br/>
  &gt; status spells<br/>
  &gt; status skills<br/>
<br/>
There is no need for you to visit your guild until you have earned<br/>
a level. All your skills and abilities are set from the beginning.<br/>
You can earn experience faster by being in a group with other players.<br/><br/><br/>
<br/>
Note that when you are in wimpy mode you only gain HALF xp but you<br/>
significantly reduce the risk of dying. See 'help wimpy' for further<br/>
details.<br/><br/><br/>
<br/>
If you lose your equipment, you can always pray to the statue of Odin<br/>
in the Temple of Udgaard. Odin will grant you new equipment for that which<br/>
is lost or missing, write this:<br/>
<br/>
  &gt; pray odin<br/>
</pre>"

extra {"chapter 6", "chapter six"}
"<pre>                            HELP TOPICS<br/>
<br/>
The following are good help topics for beginners:<br/>
<br/>
   &gt; help me<br/>
   &gt; help status<br/>
   &gt; help score<br/>
   &gt; help wear<br/>
   &gt; help wimpy<br/>
   &gt; help alias<br/>
   &gt; help abilities<br/>
   &gt; help weapon<br/>
   &gt; help armour<br/>
   &gt; help practice<br/>
   &gt; help info<br/>
   &gt; help index</pre>"
end




                               fighter_book

names {"Fighters Handbook", "fighter's handbook", "handbook", "book"}
title "the Fighter's Handbook"
descr "A small Fighter's Handbook has carelessly been left here."
manipulate {MANIPULATE_TAKE}
type ITEM_NOTE
weight 1

dilcopy eager_read@udgaard();

extra {}
"<pre>                <div class='cpy'>The Fighter's Handbook to Valhalla</div><div class='cw'><br/>
<br/>
<br/>
                 Chapter 1 ... Introduction<br/>
                 Chapter 2 ... Combat<br/>
                 Chapter 3 ... How to get around<br/>
                 Chapter 4 ... The Automated Tour<br/>
                 Chapter 5 ... Hint &amp; Tips<br/>
                 Chapter 6 ... Help Topics<br/>
<br/>
Here is an example of how to read chapter one:<br/>
<br/>
   &gt; read chapter 1<br/>
</div></pre>"

extra {"chapter 1", "introduction", "chapter one"}

"<pre>                        INTRODUCTION<br/>
<br/>
This handbook describes how to get started playing Valhalla as an<br/>
Udgaard Fighter. Read it carefully and you can get started in only<br/>
a few minutes.<br/><br/><br/>
<br/>
You have just received a lot of equipment and a dictionary which<br/>
has been prepared especially for you. To see the equipment, type:<br/>
<br/>
   &gt; inventory (or the shorthand version: i)<br/>
   &gt; equipment (or the shorthand version: eq)<br/>
<br/>
To see what aliases have been defined in your dictionary, write:<br/>
<br/>
   &gt; alias (or the shorthand version: al)<br/>
<br/>
Now read chapter 2.</pre>"

extra {"chapter 2", "chapter two"}
"<pre>                           COMBAT<br/>
<br/>
You must always be sure that your opponent is not out of your<br/>
league, you can do this by using the consider command, example:<br/>
<br/>
  &gt; consider rabbit<br/>
<br/>
This will approximately tell you how dangerous your opponent is.<br/>
Right now you can try your strength against rabbits, skunks and badgers,<br/>
and perhaps even risk the more dangerous fox, deer and boar.<br/><br/><br/>
<br/>
Aliases have been defined in your dictionary, they are a shorthand method<br/>
for writing long commands, so when you spot one of the above opponents,<br/>
you can quickly attack it, example:<br/>
<br/>
  &gt; kr  (to execute the kill rabbit alias)<br/>
<br/>
Now read chapter 3 about finding your opponents.</pre>"


extra {"chapter 3", "chapter three"}
"<pre>                         HOW TO GET AROUND<br/>
<br/>
You are just about ready, all you need is to find your way around this<br/>
place. Your life begins in the small village of Udgaard, located between<br/>
the ancient forest of Haon Dor and the younger Cypress Forest.<br/>
While in Udgaard, you can get a map at any time by typing:<br/>
<br/>
   &gt; help<br/>
<br/>
The map shows you how to get to the Haon-Dor Forest as well as the<br/>
Cypress Forest. From the village square simply go east three times to<br/>
get to the Cypress forest, or west three times to get to the Haon Dor<br/>
forest. Both locations are ideal for beginners such as yourself.<br/><br/><br/>
<br/>
Once in either forest, find a rabbit, a skunk, a badger or a fox<br/>
and use the shorthand aliases (kr to kill a rabbit, kf to kill a fox,<br/>
kb to kill a badger, etc.)<br/><br/><br/>
<br/>
Now read chapter four.</pre>"

extra {"chapter 4", "chapter four"}
"<pre>                          THE AUTOMATED TOUR<br/>
<br/>
If you have made it this far, you are well on your way! In Valhalla<br/>
there is a teacher which will explain you the basics of the game. He<br/>
can be quite boring, but if you feel more comfortable getting the<br/>
tour, write:<br/>
<br/>
   &gt; say help me newbie guide<br/>
<br/>
when standing in the Temple of Udgaard. This will start an automated tour<br/>
of the mud commands and the town. Now read chapter 5.</pre>"



extra {"chapter 5", "chapter five"}

"<pre>                           HINTS &amp; TIPS<br/>
<br/>
Try the following commands:<br/>
<br/>
  &gt; score<br/>
  &gt; status<br/>
  &gt; status weapons<br/>
  &gt; status spells<br/>
  &gt; status skills<br/>
<br/>
There is no need for you to visit your guild until you have earned<br/>
a level. All your skills and abilities are set from the beginning.<br/>
You can earn experience faster by being in a group with other players.<br/><br/><br/>
<br/>
Note that when you are in wimpy mode you only gain HALF xp but you<br/>
significantly reduce the risk of dying. See 'help wimpy' for further<br/>
details.<br/><br/><br/>
<br/>
If you lose your equipment, you can always pray to the statue of Odin<br/>
in the Temple of Udgaard. Odin will grant you new equipment for that which<br/>
is lost or missing, write this:<br/>
<br/>
  &gt; pray odin<br/>
</pre>"

extra {"chapter 6", "chapter six"}
"<pre>                            HELP TOPICS<br/>
<br/>
The following are good help topics for beginners:<br/>
<br/>
   &gt; help me<br/>
   &gt; help status<br/>
   &gt; help score<br/>
   &gt; help wear<br/>
   &gt; help wimpy<br/>
   &gt; help alias<br/>
   &gt; help abilities<br/>
   &gt; help weapon<br/>
   &gt; help armour<br/>
   &gt; help practice<br/>
   &gt; help info<br/>
   &gt; help index</pre>"
end

                               ranger_book

names {"Rangers Handbook", "ranger's handbook", "handbook", "book"}
title "the Ranger's Handbook"
descr "A small Ranger's Handbook has carelessly been left here."
manipulate {MANIPULATE_TAKE}
type ITEM_NOTE
weight 1

dilcopy eager_read@udgaard();

extra {}
"<pre>                <div class='cpy'>The Ranger's Handbook to Valhalla</div><div class='cw'><br/>
<br/>
<br/>
                 Chapter 1 ... Introduction<br/>
                 Chapter 2 ... Combat<br/>
                 Chapter 3 ... How to get around<br/>
                 Chapter 4 ... The Automated Tour<br/>
                 Chapter 5 ... Hint &amp; Tips<br/>
                 Chapter 6 ... Help Topics<br/>
<br/>
Here is an example of how to read chapter one:<br/>
<br/>
   &gt; read chapter 1<br/>
</div></pre>"

extra {"chapter 1", "introduction", "chapter one"}

"<pre>                        INTRODUCTION<br/>
<br/>
This handbook describes how to get started playing Valhalla as an<br/>
Nymgaard Ranger. Read it carefully and you can get started in only<br/>
a few minutes.<br/><br/><br/>
<br/>
You have just received a lot of equipment and a dictionary which<br/>
has been prepared especially for you. To see the equipment, type:<br/>
<br/>
   &gt; inventory (or the shorthand version: i)<br/>
   &gt; equipment (or the shorthand version: eq)<br/>
<br/>
To see what aliases have been defined in your dictionary, write:<br/>
<br/>
   &gt; alias (or the shorthand version: al)<br/>
<br/>
Now read chapter 2.</pre>"

extra {"chapter 2", "chapter two"}
"<pre>                           COMBAT<br/>
<br/>
You must always be sure that your opponent is not out of your<br/>
league, you can do this by using the consider command, example:<br/>
<br/>
  &gt; consider rabbit<br/>
<br/>
This will approximately tell you how dangerous your opponent is.<br/>
Right now you can try your strength against rabbits, skunks and badgers,<br/>
and perhaps even risk the more dangerous fox, deer and boar.<br/><br/><br/>
<br/>
Aliases have been defined in your dictionary, they are a shorthand method<br/>
for writing long commands, so when you spot one of the above opponents,<br/>
you can quickly attack it, example:<br/>
<br/>
  &gt; kr  (to execute the kill rabbit alias)<br/>
<br/>
Now read chapter 3 about finding your opponents.</pre>"


extra {"chapter 3", "chapter three"}
"<pre>                         HOW TO GET AROUND<br/>
<br/>
You are just about ready, all you need is to find your way around this<br/>
place. Your life begins in the small village of Udgaard, located between<br/>
the ancient forest of Haon Dor and the younger Cypress Forest.<br/>
While in Udgaard, you can get a map at any time by typing:<br/>
<br/>
   &gt; help<br/>
<br/>
The map shows you how to get to the Haon-Dor Forest as well as the<br/>
Cypress Forest. From the village square simply go east three times to<br/>
get to the Cypress forest, or west three times to get to the Haon Dor<br/>
forest. Both locations are ideal for beginners such as yourself.<br/><br/><br/>
<br/>
Once in either forest, find a rabbit, a skunk, a badger or a fox<br/>
and use the shorthand aliases (kr to kill a rabbit, kf to kill a fox,<br/>
kb to kill a badger, etc.)<br/><br/><br/>
<br/>
Now read chapter four.</pre>"

extra {"chapter 4", "chapter four"}
"<pre>                          THE AUTOMATED TOUR<br/>
<br/>
If you have made it this far, you are well on your way! In Valhalla<br/>
there is a teacher which will explain you the basics of the game. He<br/>
can be quite boring, but if you feel more comfortable getting the<br/>
tour, write:<br/>
<br/>
   &gt; say help me newbie guide<br/>
<br/>
when standing in the Temple of Udgaard. This will start an automated tour<br/>
of the mud commands and the town. Now read chapter 5.</pre>"



extra {"chapter 5", "chapter five"}

"<pre>                           HINTS &amp; TIPS<br/>
<br/>
Try the following commands:<br/>
<br/>
  &gt; score<br/>
  &gt; status<br/>
  &gt; status weapons<br/>
  &gt; status spells<br/>
  &gt; status skills<br/>
<br/>
There is no need for you to visit your guild until you have earned<br/>
a level. All your skills and abilities are set from the beginning.<br/>
You can earn experience faster by being in a group with other players.<br/><br/><br/>
<br/>
Note that when you are in wimpy mode you only gain HALF xp but you<br/>
significantly reduce the risk of dying. See 'help wimpy' for further<br/>
details.<br/><br/><br/>
<br/>
If you lose your equipment, you can always pray to the statue of Odin<br/>
in the Temple of Udgaard. Odin will grant you new equipment for that which<br/>
is lost or missing, write this:<br/>
<br/>
  &gt; pray odin<br/>
</pre>"

extra {"chapter 6", "chapter six"}
"<pre>                            HELP TOPICS<br/>
<br/>
The following are good help topics for beginners:<br/>
<br/>
   &gt; help me<br/>
   &gt; help status<br/>
   &gt; help score<br/>
   &gt; help wear<br/>
   &gt; help wimpy<br/>
   &gt; help alias<br/>
   &gt; help abilities<br/>
   &gt; help weapon<br/>
   &gt; help armour<br/>
   &gt; help practice<br/>
   &gt; help info<br/>
   &gt; help index</pre>"
end


                               thief_book

names {"Thieves Handbook", "thief's handbook", "handbook", "book"}
title "the Thief's Handbook"
descr "A small Thief's Handbook has carelessly been left here."
manipulate {MANIPULATE_TAKE}
type ITEM_NOTE
weight 1

dilcopy eager_read@udgaard();

extra {}
"<pre>                <div class='cpy'>The Thief's Handbook to Valhalla</div><div class='cw'><br/>
<br/>
<br/>
                 Chapter 1 ... Introduction<br/>
                 Chapter 2 ... Combat<br/>
                 Chapter 3 ... How to get around<br/>
                 Chapter 4 ... The Automated Tour<br/>
                 Chapter 5 ... Hint &amp; Tips<br/>
                 Chapter 6 ... Help Topics<br/>
<br/>
Here is an example of how to read chapter one:<br/>
<br/>
   &gt; read chapter 1<br/>
</div></pre>"

extra {"chapter 1", "introduction", "chapter one"}

"<pre>                        INTRODUCTION<br/>
<br/>
This handbook describes how to get started playing Valhalla as an<br/>
Udgaard Thief. Read it carefully and you can get started in only<br/>
a few minutes.<br/><br/><br/>
<br/>
You have just received a lot of equipment and a dictionary which<br/>
has been prepared especially for you. To see the equipment, type:<br/>
<br/>
   &gt; inventory (or the shorthand version: i)<br/>
   &gt; equipment (or the shorthand version: eq)<br/>
<br/>
To see what aliases have been defined in your dictionary, write:<br/>
<br/>
   &gt; alias (or the shorthand version: al)<br/>
<br/>
Now read chapter 2.</pre>"

extra {"chapter 2", "chapter two"}
"<pre>                           COMBAT<br/>
<br/>
You must always be sure that your opponent is not out of your<br/>
league, you can do this by using the consider command, example:<br/>
<br/>
  &gt; consider rabbit<br/>
<br/>
This will approximately tell you how dangerous your opponent is.<br/>
Right now you can try your strength against rabbits, skunks and badgers,<br/>
and perhaps even risk the more dangerous fox, deer and boar.<br/><br/><br/>
<br/>
Aliases have been defined in your dictionary, they are a shorthand method<br/>
for writing long commands, so when you spot one of the above opponents,<br/>
you can quickly attack it, example:<br/>
<br/>
  &gt; kr  (to execute the kill rabbit alias)<br/>
<br/>
Now read chapter 3 about finding your opponents.</pre>"


extra {"chapter 3", "chapter three"}
"<pre>                         HOW TO GET AROUND<br/>
<br/>
You are just about ready, all you need is to find your way around this<br/>
place. Your life begins in the small village of Udgaard, located between<br/>
the ancient forest of Haon Dor and the younger Cypress Forest.<br/>
While in Udgaard, you can get a map at any time by typing:<br/>
<br/>
   &gt; help<br/>
<br/>
The map shows you how to get to the Haon-Dor Forest as well as the<br/>
Cypress Forest. From the village square simply go east three times to<br/>
get to the Cypress forest, or west three times to get to the Haon Dor<br/>
forest. Both locations are ideal for beginners such as yourself.<br/><br/><br/>
<br/>
Once in either forest, find a rabbit, a skunk, a badger or a fox<br/>
and use the shorthand aliases (kr to kill a rabbit, kf to kill a fox,<br/>
kb to kill a badger, etc.)<br/><br/><br/>
<br/>
Now read chapter four.</pre>"

extra {"chapter 4", "chapter four"}
"<pre>                          THE AUTOMATED TOUR<br/>
<br/>
If you have made it this far, you are well on your way! In Valhalla<br/>
there is a teacher which will explain you the basics of the game. He<br/>
can be quite boring, but if you feel more comfortable getting the<br/>
tour, write:<br/>
<br/>
   &gt; say help me newbie guide<br/>
<br/>
when standing in the Temple of Udgaard. This will start an automated tour<br/>
of the mud commands and the town. Now read chapter 5.</pre>"


extra {"chapter 5", "chapter five"}

"<pre>                           HINTS &amp; TIPS<br/>
<br/>
Try the following commands:<br/>
<br/>
  &gt; score<br/>
  &gt; status<br/>
  &gt; status weapons<br/>
  &gt; status spells<br/>
  &gt; status skills<br/>
<br/>
There is no need for you to visit your guild until you have earned<br/>
a level. All your skills and abilities are set from the beginning.<br/>
You can earn experience faster by being in a group with other players.<br/><br/><br/>
<br/>
Note that when you are in wimpy mode you only gain HALF xp but you<br/>
significantly reduce the risk of dying. See 'help wimpy' for further<br/>
details.<br/><br/><br/>
<br/>
If you lose your equipment, you can always pray to the statue of Odin<br/>
in the Temple of Udgaard. Odin will grant you new equipment for that which<br/>
is lost or missing, write this:<br/>
<br/>
  &gt; pray odin<br/>
</pre>"

extra {"chapter 6", "chapter six"}
"<pre>                            HELP TOPICS<br/>
<br/>
The following are good help topics for beginners:<br/>
<br/>
   &gt; help me<br/>
   &gt; help status<br/>
   &gt; help score<br/>
   &gt; help wear<br/>
   &gt; help wimpy<br/>
   &gt; help alias<br/>
   &gt; help abilities<br/>
   &gt; help weapon<br/>
   &gt; help armour<br/>
   &gt; help practice<br/>
   &gt; help info<br/>
   &gt; help index</pre>"
end

                               assassin_book

names {"Assassins Handbook", "assassin's handbook", "handbook", "book"}
title "the Assassin's Handbook"
descr "A small Assassin's Handbook has carelessly been left here."
manipulate {MANIPULATE_TAKE}
type ITEM_NOTE
weight 1

dilcopy eager_read@udgaard();

extra {}
"<pre>                <div class='cpy'>The Assassin's Handbook to Valhalla</div><div class='cw'><br/>
<br/>
<br/>
                 Chapter 1 ... Introduction<br/>
                 Chapter 2 ... Combat<br/>
                 Chapter 3 ... How to get around<br/>
                 Chapter 4 ... The Automated Tour<br/>
                 Chapter 5 ... Hint &amp; Tips<br/>
                 Chapter 6 ... Help Topics<br/>
<br/>
Here is an example of how to read chapter one:<br/>
<br/>
   &gt; read chapter 1<br/>
</div></pre>"

extra {"chapter 1", "introduction", "chapter one"}

"<pre>                        INTRODUCTION<br/>
<br/>
This handbook describes how to get started playing Valhalla as an<br/>
Khorsabad Assassin. Read it carefully and you can get started in only<br/>
a few minutes.<br/><br/><br/>
<br/>
You have just received a lot of equipment and a dictionary which<br/>
has been prepared especially for you. To see the equipment, type:<br/>
<br/>
   &gt; inventory (or the shorthand version: i)<br/>
   &gt; equipment (or the shorthand version: eq)<br/>
<br/>
To see what aliases have been defined in your dictionary, write:<br/>
<br/>
   &gt; alias (or the shorthand version: al)<br/>
<br/>
Now read chapter 2.</pre>"

extra {"chapter 2", "chapter two"}
"<pre>                           COMBAT<br/>
<br/>
You must always be sure that your opponent is not out of your<br/>
league, you can do this by using the consider command, example:<br/>
<br/>
  &gt; consider rabbit<br/>
<br/>
This will approximately tell you how dangerous your opponent is.<br/>
Right now you can try your strength against rabbits, skunks and badgers,<br/>
and perhaps even risk the more dangerous fox, deer and boar.<br/><br/><br/>
<br/>
Aliases have been defined in your dictionary, they are a shorthand method<br/>
for writing long commands, so when you spot one of the above opponents,<br/>
you can quickly attack it, example:<br/>
<br/>
  &gt; kr  (to execute the kill rabbit alias)<br/>
<br/>
Now read chapter 3 about finding your opponents.</pre>"


extra {"chapter 3", "chapter three"}
"<pre>                         HOW TO GET AROUND<br/>
<br/>
You are just about ready, all you need is to find your way around this<br/>
place. Your life begins in the small village of Udgaard, located between<br/>
the ancient forest of Haon Dor and the younger Cypress Forest.<br/>
While in Udgaard, you can get a map at any time by typing:<br/>
<br/>
   &gt; help<br/>
<br/>
The map shows you how to get to the Haon-Dor Forest as well as the<br/>
Cypress Forest. From the village square simply go east three times to<br/>
get to the Cypress forest, or west three times to get to the Haon Dor<br/>
forest. Both locations are ideal for beginners such as yourself.<br/><br/><br/>
<br/>
Once in either forest, find a rabbit, a skunk, a badger or a fox<br/>
and use the shorthand aliases (kr to kill a rabbit, kf to kill a fox,<br/>
kb to kill a badger, etc.)<br/><br/><br/>
<br/>
Now read chapter four.</pre>"

extra {"chapter 4", "chapter four"}
"<pre>                          THE AUTOMATED TOUR<br/>
<br/>
If you have made it this far, you are well on your way! In Valhalla<br/>
there is a teacher which will explain you the basics of the game. He<br/>
can be quite boring, but if you feel more comfortable getting the<br/>
tour, write:<br/>
<br/>
   &gt; say help me newbie guide<br/>
<br/>
when standing in the Temple of Udgaard. This will start an automated tour<br/>
of the mud commands and the town. Now read chapter 5.</pre>"


extra {"chapter 5", "chapter five"}

"<pre>                           HINTS &amp; TIPS<br/>
<br/>
Try the following commands:<br/>
<br/>
  &gt; score<br/>
  &gt; status<br/>
  &gt; status weapons<br/>
  &gt; status spells<br/>
  &gt; status skills<br/>
<br/>
There is no need for you to visit your guild until you have earned<br/>
a level. All your skills and abilities are set from the beginning.<br/>
You can earn experience faster by being in a group with other players.<br/><br/><br/>
<br/>
Note that when you are in wimpy mode you only gain HALF xp but you<br/>
significantly reduce the risk of dying. See 'help wimpy' for further<br/>
details.<br/><br/><br/>
<br/>
If you lose your equipment, you can always pray to the statue of Odin<br/>
in the Temple of Udgaard. Odin will grant you new equipment for that which<br/>
is lost or missing, write this:<br/>
<br/>
  &gt; pray odin<br/>
</pre>"

extra {"chapter 6", "chapter six"}
"<pre>                            HELP TOPICS<br/>
<br/>
The following are good help topics for beginners:<br/>
<br/>
   &gt; help me<br/>
   &gt; help status<br/>
   &gt; help score<br/>
   &gt; help wear<br/>
   &gt; help wimpy<br/>
   &gt; help alias<br/>
   &gt; help abilities<br/>
   &gt; help weapon<br/>
   &gt; help armour<br/>
   &gt; help practice<br/>
   &gt; help info<br/>
   &gt; help index</pre>"
end

                               healer_book

names {"Healers Handbook", "healer's handbook", "handbook", "book"}
title "the Healer's Handbook"
descr "A small Healer's Handbook has carelessly been left here."
manipulate {MANIPULATE_TAKE}
type ITEM_NOTE
weight 1

dilcopy eager_read@udgaard();

extra {}
"<pre>                <div class='cpy'>The Healer's Handbook to Valhalla</div><div class='cw'><br/>
<br/>
<br/>
                 Chapter 1 ... Introduction<br/>
                 Chapter 2 ... Combat<br/>
                 Chapter 3 ... How to get around<br/>
                 Chapter 4 ... The Automated Tour<br/>
                 Chapter 5 ... Hint &amp; Tips<br/>
                 Chapter 6 ... Help Topics<br/>
<br/>
Here is an example of how to read chapter one:<br/>
<br/>
   &gt; read chapter 1<br/>
</div></pre>"

extra {"chapter 1", "introduction", "chapter one"}

"<pre>                        INTRODUCTION<br/>
<br/>
This handbook describes how to get started playing Valhalla as an<br/>
Udgaard Healer. Read it carefully and you can get started in only<br/>
a few minutes.<br/><br/><br/>
<br/>
You have just received a lot of equipment and a dictionary which<br/>
has been prepared especially for you. To see the equipment, type:<br/>
<br/>
   &gt; inventory (or the shorthand version: i)<br/>
   &gt; equipment (or the shorthand version: eq)<br/>
<br/>
To see what aliases have been defined in your dictionary, write:<br/>
<br/>
   &gt; alias (or the shorthand version: al)<br/>
<br/>
Now read chapter 2.</pre>"

extra {"chapter 2", "chapter two"}
"<pre>                           COMBAT<br/>
<br/>
You must always be sure that your opponent is not out of your<br/>
league, you can do this by using the consider command, example:<br/>
<br/>
  &gt; consider rabbit<br/>
<br/>
This will approximately tell you how dangerous your opponent is.<br/>
Right now you can try your strength against rabbits, skunks and badgers,<br/>
and perhaps even risk the more dangerous fox, deer and boar.<br/><br/><br/>
<br/>
Aliases have been defined in your dictionary, they are a shorthand method<br/>
for writing long commands, so when you spot one of the above opponents,<br/>
you can quickly attack it, example:<br/>
<br/>
  &gt; kr  (to execute the kill rabbit alias)<br/>
<br/>
Now read chapter 3 about finding your opponents.</pre>"


extra {"chapter 3", "chapter three"}
"<pre>                         HOW TO GET AROUND<br/>
<br/>
You are just about ready, all you need is to find your way around this<br/>
place. Your life begins in the small village of Udgaard, located between<br/>
the ancient forest of Haon Dor and the younger Cypress Forest.<br/>
While in Udgaard, you can get a map at any time by typing:<br/>
<br/>
   &gt; help<br/>
<br/>
The map shows you how to get to the Haon-Dor Forest as well as the<br/>
Cypress Forest. From the village square simply go east three times to<br/>
get to the Cypress forest, or west three times to get to the Haon Dor<br/>
forest. Both locations are ideal for beginners such as yourself.<br/><br/><br/>
<br/>
Once in either forest, find a rabbit, a skunk, a badger or a fox<br/>
and use the shorthand aliases (kr to kill a rabbit, kf to kill a fox,<br/>
kb to kill a badger, etc.)<br/><br/><br/>
<br/>
Now read chapter four.</pre>"

extra {"chapter 4", "chapter four"}
"<pre>                          THE AUTOMATED TOUR<br/>
<br/>
If you have made it this far, you are well on your way! In Valhalla<br/>
there is a teacher which will explain you the basics of the game. He<br/>
can be quite boring, but if you feel more comfortable getting the<br/>
tour, write:<br/>
<br/>
   &gt; say help me newbie guide<br/>
<br/>
when standing in the Temple of Udgaard. This will start an automated tour<br/>
of the mud commands and the town. Now read chapter 5.</pre>"



extra {"chapter 5", "chapter five"}

"<pre>                           HINTS &amp; TIPS<br/>
<br/>
Try the following commands:<br/>
<br/>
  &gt; score<br/>
  &gt; status<br/>
  &gt; status weapons<br/>
  &gt; status spells<br/>
  &gt; status skills<br/>
<br/>
There is no need for you to visit your guild until you have earned<br/>
a level. All your skills and abilities are set from the beginning.<br/>
You can earn experience faster by being in a group with other players.<br/><br/><br/>
<br/>
Note that when you are in wimpy mode you only gain HALF xp but you<br/>
significantly reduce the risk of dying. See 'help wimpy' for further<br/>
details.<br/><br/><br/>
<br/>
If you lose your equipment, you can always pray to the statue of Odin<br/>
in the Temple of Udgaard. Odin will grant you new equipment for that which<br/>
is lost or missing, write this:<br/>
<br/>
  &gt; pray odin<br/>
</pre>"

extra {"chapter 6", "chapter six"}
"<pre>                            HELP TOPICS<br/>
<br/>
The following are good help topics for beginners:<br/>
<br/>
   &gt; help me<br/>
   &gt; help status<br/>
   &gt; help score<br/>
   &gt; help wear<br/>
   &gt; help wimpy<br/>
   &gt; help alias<br/>
   &gt; help abilities<br/>
   &gt; help weapon<br/>
   &gt; help armour<br/>
   &gt; help practice<br/>
   &gt; help info<br/>
   &gt; help index</pre>"
end

                               necro_book

names {"Necromancers Handbook", "necromancer's handbook", "handbook", "book"}
title "the Necromancer's Handbook"
descr "A small Necromancer's Handbook has carelessly been left here."
manipulate {MANIPULATE_TAKE}
type ITEM_NOTE
weight 1

dilcopy eager_read@udgaard();

extra {}
"<pre>                <div class='cpy'>The Healer's Handbook to Valhalla</div><div class='cw'><br/>
<br/>
<br/>
                 Chapter 1 ... Introduction<br/>
                 Chapter 2 ... Combat<br/>
                 Chapter 3 ... How to get around<br/>
                 Chapter 4 ... The Automated Tour<br/>
                 Chapter 5 ... Hint &amp; Tips<br/>
                 Chapter 6 ... Help Topics<br/>
<br/>
Here is an example of how to read chapter one:<br/>
<br/>
   &gt; read chapter 1<br/>
</div></pre>"

extra {"chapter 1", "introduction", "chapter one"}

"<pre>                        INTRODUCTION<br/>
<br/>
This handbook describes how to get started playing Valhalla as an<br/>
Necromancer. Read it carefully and you can get started in only<br/>
a few minutes.<br/><br/><br/>
<br/>
You have just received a lot of equipment and a dictionary which<br/>
has been prepared especially for you. To see the equipment, type:<br/>
<br/>
   &gt; inventory (or the shorthand version: i)<br/>
   &gt; equipment (or the shorthand version: eq)<br/>
<br/>
To see what aliases have been defined in your dictionary, write:<br/>
<br/>
   &gt; alias (or the shorthand version: al)<br/>
<br/>
Now read chapter 2.</pre>"

extra {"chapter 2", "chapter two"}
"<pre>                           COMBAT<br/>
<br/>
You must always be sure that your opponent is not out of your<br/>
league, you can do this by using the consider command, example:<br/>
<br/>
  &gt; consider rabbit<br/>
<br/>
This will approximately tell you how dangerous your opponent is.<br/>
Right now you can try your strength against rabbits, skunks and badgers,<br/>
and perhaps even risk the more dangerous fox, deer and boar.<br/><br/><br/>
<br/>
Aliases have been defined in your dictionary, they are a shorthand method<br/>
for writing long commands, so when you spot one of the above opponents,<br/>
you can quickly attack it, example:<br/>
<br/>
  &gt; kr  (to execute the kill rabbit alias)<br/>
<br/>
Now read chapter 3 about finding your opponents.</pre>"


extra {"chapter 3", "chapter three"}
"<pre>                         HOW TO GET AROUND<br/>
<br/>
You are just about ready, all you need is to find your way around this<br/>
place. Your life begins in the small village of Udgaard, located between<br/>
the ancient forest of Haon Dor and the younger Cypress Forest.<br/>
While in Udgaard, you can get a map at any time by typing:<br/>
<br/>
   &gt; help<br/>
<br/>
The map shows you how to get to the Haon-Dor Forest as well as the<br/>
Cypress Forest. From the village square simply go east three times to<br/>
get to the Cypress forest, or west three times to get to the Haon Dor<br/>
forest. Both locations are ideal for beginners such as yourself.<br/><br/><br/>
<br/>
Once in either forest, find a rabbit, a skunk, a badger or a fox<br/>
and use the shorthand aliases (kr to kill a rabbit, kf to kill a fox,<br/>
kb to kill a badger, etc.)<br/><br/><br/>
<br/>
Now read chapter four.</pre>"

extra {"chapter 4", "chapter four"}
"<pre>                          THE AUTOMATED TOUR<br/>
<br/>
If you have made it this far, you are well on your way! In Valhalla<br/>
there is a teacher which will explain you the basics of the game. He<br/>
can be quite boring, but if you feel more comfortable getting the<br/>
tour, write:<br/>
<br/>
   &gt; say help me newbie guide<br/>
<br/>
when standing in the Temple of Udgaard. This will start an automated tour<br/>
of the mud commands and the town. Now read chapter 5.</pre>"



extra {"chapter 5", "chapter five"}

"<pre>                           HINTS &amp; TIPS<br/>
<br/>
Try the following commands:<br/>
<br/>
  &gt; score<br/>
  &gt; status<br/>
  &gt; status weapons<br/>
  &gt; status spells<br/>
  &gt; status skills<br/>
<br/>
There is no need for you to visit your guild until you have earned<br/>
a level. All your skills and abilities are set from the beginning.<br/>
You can earn experience faster by being in a group with other players.<br/><br/><br/>
<br/>
Note that when you are in wimpy mode you only gain HALF xp but you<br/>
significantly reduce the risk of dying. See 'help wimpy' for further<br/>
details.<br/><br/><br/>
<br/>
If you lose your equipment, you can always pray to the statue of Odin<br/>
in the Temple of Udgaard. Odin will grant you new equipment for that which<br/>
is lost or missing, write this:<br/>
<br/>
  &gt; pray odin<br/>
</pre>"

extra {"chapter 6", "chapter six"}
"<pre>                            HELP TOPICS<br/>
<br/>
The following are good help topics for beginners:<br/>
<br/>
   &gt; help me<br/>
   &gt; help status<br/>
   &gt; help score<br/>
   &gt; help wear<br/>
   &gt; help wimpy<br/>
   &gt; help alias<br/>
   &gt; help abilities<br/>
   &gt; help weapon<br/>
   &gt; help armour<br/>
   &gt; help practice<br/>
   &gt; help info<br/>
   &gt; help index</pre>"
end

                               conjurer_book

names {"Conjurers Handbook", "conjurer's handbook", "handbook", "book"}
title "the Conjurer's Handbook"
descr "A small Conjurer's Handbook has carelessly been left here."
manipulate {MANIPULATE_TAKE}
type ITEM_NOTE
weight 1

dilcopy eager_read@udgaard();

extra {}
"<pre>                <div class='cpy'>The Conjurer's Handbook to Valhalla</div><div class='cw'><br/>
<br/>
<br/>
                 Chapter 1 ... Introduction<br/>
                 Chapter 2 ... Combat<br/>
                 Chapter 3 ... How to get around<br/>
                 Chapter 4 ... The Automated Tour<br/>
                 Chapter 5 ... Hint &amp; Tips<br/>
                 Chapter 6 ... Help Topics<br/>
<br/>
Here is an example of how to read chapter one:<br/>
<br/>
   &gt; read chapter 1<br/>
</div></pre>"

extra {"chapter 1", "introduction", "chapter one"}

"<pre>                        INTRODUCTION<br/>
<br/>
This handbook describes how to get started playing Valhalla as an<br/>
Udgaard Conjurer. Read it carefully and you can get started in only<br/>
a few minutes.<br/><br/><br/>
<br/>
You have just received a lot of equipment and a dictionary which<br/>
has been prepared especially for you. To see the equipment, type:<br/>
<br/>
   &gt; inventory (or the shorthand version: i)<br/>
   &gt; equipment (or the shorthand version: eq)<br/>
<br/>
To see what aliases have been defined in your dictionary, write:<br/>
<br/>
   &gt; alias (or the shorthand version: al)<br/>
<br/>
Now read chapter 2.</pre>"

extra {"chapter 2", "chapter two"}
"<pre>                           COMBAT<br/>
<br/>
You must always be sure that your opponent is not out of your<br/>
league, you can do this by using the consider command, example:<br/>
<br/>
  &gt; consider rabbit<br/>
<br/>
This will approximately tell you how dangerous your opponent is.<br/>
Right now you can try your strength against rabbits, skunks and badgers,<br/>
and perhaps even risk the more dangerous fox, deer and boar.<br/><br/><br/>
<br/>
Aliases have been defined in your dictionary, they are a shorthand method<br/>
for writing long commands, so when you spot one of the above opponents,<br/>
you can quickly attack it, example:<br/>
<br/>
  &gt; kr  (to execute the kill rabbit alias)<br/>
<br/>
Now read chapter 3 about finding your opponents.</pre>"


extra {"chapter 3", "chapter three"}
"<pre>                         HOW TO GET AROUND<br/>
<br/>
You are just about ready, all you need is to find your way around this<br/>
place. Your life begins in the small village of Udgaard, located between<br/>
the ancient forest of Haon Dor and the younger Cypress Forest.<br/>
While in Udgaard, you can get a map at any time by typing:<br/>
<br/>
   &gt; help<br/>
<br/>
The map shows you how to get to the Haon-Dor Forest as well as the<br/>
Cypress Forest. From the village square simply go east three times to<br/>
get to the Cypress forest, or west three times to get to the Haon Dor<br/>
forest. Both locations are ideal for beginners such as yourself.<br/><br/><br/>
<br/>
Once in either forest, find a rabbit, a skunk, a badger or a fox<br/>
and use the shorthand aliases (kr to kill a rabbit, kf to kill a fox,<br/>
kb to kill a badger, etc.)<br/><br/><br/>
<br/>
Now read chapter four.</pre>"

extra {"chapter 4", "chapter four"}
"<pre>                          THE AUTOMATED TOUR<br/>
<br/>
If you have made it this far, you are well on your way! In Valhalla<br/>
there is a teacher which will explain you the basics of the game. He<br/>
can be quite boring, but if you feel more comfortable getting the<br/>
tour, write:<br/>
<br/>
   &gt; say help me newbie guide<br/>
<br/>
when standing in the Temple of Udgaard. This will start an automated tour<br/>
of the mud commands and the town. Now read chapter 5.</pre>"



extra {"chapter 5", "chapter five"}

"<pre>                           HINTS &amp; TIPS<br/>
<br/>
Try the following commands:<br/>
<br/>
  &gt; score<br/>
  &gt; status<br/>
  &gt; status weapons<br/>
  &gt; status spells<br/>
  &gt; status skills<br/>
<br/>
There is no need for you to visit your guild until you have earned<br/>
a level. All your skills and abilities are set from the beginning.<br/>
You can earn experience faster by being in a group with other players.<br/><br/><br/>
<br/>
Note that when you are in wimpy mode you only gain HALF xp but you<br/>
significantly reduce the risk of dying. See 'help wimpy' for further<br/>
details.<br/><br/><br/>
<br/>
If you lose your equipment, you can always pray to the statue of Odin<br/>
in the Temple of Udgaard. Odin will grant you new equipment for that which<br/>
is lost or missing, write this:<br/>
<br/>
  &gt; pray odin<br/>
</pre>"

extra {"chapter 6", "chapter six"}
"<pre>                            HELP TOPICS<br/>
<br/>
The following are good help topics for beginners:<br/>
<br/>
   &gt; help me<br/>
   &gt; help status<br/>
   &gt; help score<br/>
   &gt; help wear<br/>
   &gt; help wimpy<br/>
   &gt; help alias<br/>
   &gt; help abilities<br/>
   &gt; help weapon<br/>
   &gt; help armour<br/>
   &gt; help practice<br/>
   &gt; help info<br/>
   &gt; help index</pre>"
end


                            wedding_ring

names {"mithril ring", "wedding ring", "ring"}
title "a wedding ring of pure mithril"
descr "A wedding ring of pure mithril has carelessly been dropped here."
type ITEM_TREASURE
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_FINGER, MANIPULATE_HOLD}
weight 0
bright 1
extra {}
"<pre>
                                 ####<br/>
                                ######<br/>
                               ########<br/>
                  #############################<br/>
              ################  ######  ############<br/>
            ###########                        #########<br/>
          ########                                  ######<br/>
         ######                                         ####<br/>
         ###                                             ####<br/>
         ###                                             ####<br/>
         ###                                            #####<br/>
          ####                                       #######<br/>
            ######                              ##########<br/>
              #########                  ###############<br/>
                  ############          #############<br/>
                       #########################<br/>
                              ###########<br/>
</pre><br/>
This wedding ring is of supreme craftsmanship. It is made from pure
mithril and a small diamond is set in the middle of the ring. You notice
an inscription on the inner side of the ring."
extra {"inscription"}
"`Forever yours'"
end
/* --------------------- Items for the mayor and crew -------------- */

mayor_plate
names {"phoenix plate", "plate"}
title "the Phoenix Plate"
descr "A glistening plate has been left here."
extra {}
"This exquisite plate was crafted especially for the mayor, and bears
the phoenix emblem of Udgaard.  It shines in light and dark, and appears
to be able to withstand a great many blows."
ARMOUR_PLATE(0,0)
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_BODY}
weight 15
dilcopy level_restrict@function(40,0,25,"");
cost 1 GOLD_PIECE
end

                                war_plate
names {"tungsten plate", "plate"}
title "a tungsten plate"
descr "A tungsten plate has been left here."
extra {}
"This tungsten plate shines quite brightly, and you must almost
avert your eyes to keep from being blinded.  It appears to be
very strong, yet at the same time pliable."
ARMOUR_PLATE(0,0)
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_BODY}
weight 12
dilcopy level_restrict@function(40,0,25,"");
cost 1 GOLD_PIECE
end

                                mayor_legs
names {"glistening leggings","leggings"}
title "a pair of glistening leggings"
descr "A pair of glistening leggings have been left here."
extra {}
"These exquisite leggings were crafted especially for the mayor, and
they bear the phoenix emblem of Udgaard.  The shine through both light
and darkness, serving to protect well their master."
ARMOUR_PLATE(0,0)
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_LEGS}
weight 10
dilcopy level_restrict@function(40,0,25,"");
cost 1 GOLD_PIECE
end

                               war_legs
names {"tungsten leggings","leggings"}
title "a pair of tungsten leggings"
descr "A pair of tungsten leggings have been left here."
extra {}
"These tungsten leggings shine quite brightly, and you must almost
avert your eyes to keep from being blinded.  They appear to be
very strong, yet at the same time pliable."
ARMOUR_PLATE(0,0)
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_LEGS}
weight 7
dilcopy level_restrict@function(40,0,25,"");
cost 1 GOLD_PIECE
end

                                mayor_arms
names {"glistening sleeves","sleeves"}
title "a pair of glistening sleeves"
descr "A pair of glistening sleeves have been left here."
extra {}
"These exquisite sleeves were crafted especially for the mayor, and
they bear the phoenix emblem of Udgaard.  The shine through both light
and darkness, serving to protect well their master."
ARMOUR_PLATE(0,0)
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_ARMS}
weight 10
dilcopy level_restrict@function(40,0,25,"");
cost 1 GOLD_PIECE
end
                               war_sle
names {"tungsten sleeves","sleeves"}
title "a pair of tungsten sleeves"
descr "A pair of tungsten sleeves have been left here."
extra {}
"These tungsten sleeves shine quite brightly, and you must almost
avert your eyes to keep from being blinded.  They appear to be
very strong, yet at the same time pliable."
ARMOUR_PLATE(0,0)
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_ARMS}
weight 7
dilcopy level_restrict@function(40,0,25,"");
cost 1 GOLD_PIECE
end


                                mayor_hands
names {"spiked gauntlets","gauntlets"}
title "a pair of spiked gauntlets"
descr "A pair of spiked gauntlets have been left here."
extra {}
"These dangerous gauntlets were crafted especially for the mayor, and
they bear the phoenix emblem of Udgaard.  These vicious looking gauntlets
bear curving spikes, used to punch holes in ones enemy.  You notice some
bloodstains on them."
ARMOUR_PLATE(0,0)
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_HANDS}
weight 5
dilcopy level_restrict@function(40,0,25,"");
cost 1 GOLD_PIECE
end

                                mayor_head
names {"horned helm", "garuk", "helm"}
title "the Horned Helm Garuck"
descr "A large horned helm has been left here."
extra {}
"The horned helm Garuk was passed down through generations of dwarves
in a line as yet ending with Thargarad.  The horns come from an
unknown creature, and the rise a full foot from the helm.  The scrollwork
on this helm is intricately and fabulously etched, making you
wonder at its antiquity."
ARMOUR_PLATE(0,0)
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_HEAD}
weight 10
dilcopy level_restrict@function(40,0,25,"");
cost 1 GOLD_PIECE
end
                               war_helm
names {"tungsten helmet","helmet"}
title "a tungsten helmet"
descr "A tungsten helmet has been left here."
extra {}
"This tungsten helmet shines quite brightly, and you must almost
avert your eyes to keep from being blinded.  It appears to be
very strong, yet at the same time pliable."
ARMOUR_PLATE(0,0)
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_HEAD}
weight 7
dilcopy level_restrict@function(40,0,25,"");
cost 1 GOLD_PIECE
end

                                mayor_boots
names {"amber boots","boots"}
title "a pair of amber boots"
descr "A pair of amber boots have been left here."
extra {}
"The amber boots were crafted by the Danalek specifically for Thargarad.
They shine with a deep golden color, almost like that of pure honey.
They look to be quite rare."

ARMOUR_PLATE(0,0)
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_FEET}
weight 5
dilcopy level_restrict@function(40,0,25,"");
cost 1 GOLD_PIECE
end

                               war_boots
names {"tungsten boots","boots"}
title "a pair of tungsten boots"
descr "A pair of tungsten boots have been left here."
extra {}
"These tungsten boots shine quite brightly, and you must almost
avert your eyes to keep from being blinded.  They appear to be
very strong, yet at the same time pliable."
ARMOUR_PLATE(0,0)
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_FEET}
weight 3
dilcopy level_restrict@function(40,0,25,"");
cost 1 GOLD_PIECE
end

                                mayor_cloak

names {"phoenix mantle", "mantle"}
title "Mantle of the Phoenix"
descr "A mantle bearing the mark of a large phoenix is here."
extra {}
"This mantle bears the mark of one who is in the service of the mayor
of Udgaard.  Embroidered on the back the is seal of Udgaard,
a large phoenix set in front of a glowing sun.  The material of this
mantle is exquisite and it will offer good protection."
ARMOUR_PLATE(0,0)
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_ABOUT}
weight 8
cost 1 GOLD_PIECE
end
                                healer_tunic

names {"silk tunic", "tunic"}
title "a silk tunic"
descr "A silk tunic lies in a heap on the ground."
extra {}
"While this silken tunic is quite thin, it appears to be imbued with
a magical power that makes it quite strong.  It will offer good protection
while being very soft to the wearer.  Truly a piece of craftsmanship
which can be only of elvish origin."
ARMOUR_PLATE(0,0)
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_BODY}
weight 2
cost 1 GOLD_PIECE
end

                                healer_pants

names {"silk pants", "pants"}
title "a pair of silk pants"
descr "A pair of silk pants lie in a heap on the ground."
extra {}
"While these silken pants are quite thin, they appears to be imbued with
a magical power that makes them quite strong.  They will offer good
protection
while being very soft to the wearer.  They are truly a piece of
craftsmanship
which can be only of elvish origin."
ARMOUR_PLATE(0,0)
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_LEGS}
weight 3
cost 1 GOLD_PIECE
end

                                healer_arms

names {"leather armguards", "armguards"}
title "a pair leather armguards"
descr "A pair of leather armguards sit on the ground."
extra {}
"These armguards, while only composed of leather look to offer
good protection.  They are clearly elvish in nature, and are studded
small mithril knobs."
ARMOUR_HRD_LEATHER(0,0)
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_ARMS}
weight 3
cost 1 GOLD_PIECE
end

mage_robe
names {"robe of ixtlan", "ixtlan", "robe"}
title "the Robe of Ixtlan"
descr "A crimson robe lies here in a rumpled heap."
extra {}
"The Robe of Ixtlan has been passed though many generations of gnomish
mages.  It appears to be an item of insurmountable power, but you
doubt that your feeble mind can unlock its secrets.  The robe is crimson
and quite a beautiful thing to behold."
ARMOUR_PLATE(0,0)
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_ARMS}
weight 10
dilcopy level_restrict@function(40,0,25,"");
cost 1 GOLD_PIECE
end


                                mage_ring

names {"lapis-lazuli ring", "ring"}
title "a lapis-lazuli ring"
descr "a lapis-lazuli ring is almost hidden in the dirt on the ground."
extra {}
"The stone in this ring is set in a band of the purest platinum.
The gem itself is a deep blue, with inclusions of pyrite winding through
it.  It looks to be quite valuable, though you doubt you could unlock
its magical secrets."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_FINGER}
weight 1
cost 1 PLATINUM_PIECE
end


                sagit

names {"sagittarius", "staff"}
title "Sagittarius"
descr "A staff lies on the ground."
extra {}
"This simple staff was crafted from a piece of fallen star by the
fabled Mystics of Midgaard.  Its shaft is quite long, and it
looks to be quite sturdy.  The staff seems to hum slightly."

WEAPON_DEF(WPN_QUARTERSTAFF, 8, 8)
manipulate {MANIPULATE_TAKE, MANIPULATE_WIELD}
weight 10
dilcopy level_restrict@function(40,0,25,"");
dilcopy abi_restrict@function (ABIL_STR,30,0,25,"");
cost 128 IRON_PIECE
rent 64 IRON_PIECE
end

war_polaris
names {"polaris", "war hammer", "hammer"}
title "Polaris"
descr "A war hammer sits on the ground."
extra {}
"This hammer was forged from a piece of a fallen star by the fabled
Mystics of Midgaard.  There is a strong sense of peace which emanates
from it, a feeling which you can not quite place."
extra {"$identify"}
"Polaris will improve your healing skill, while
adding to your brain and divinity.
It will weaken your constitution slightly."
extra {"$improved identify"}
"<pre><br/>
Heal:            +10%<br/>
Divine:          +2<br/>
Brain:           +1<br/>
Constitution:    -1</pre>"
WEAPON_DEF(WPN_WAR_HAMMER, 8, 8)
SPELL_TRANSFER(SPL_CURE_WOUNDS_1, +10)
DIV_TRANSFER(+2)
BRA_TRANSFER(+1)
CON_TRANSFER(-1)
manipulate {MANIPULATE_TAKE, MANIPULATE_WIELD}
weight 14
dilcopy level_restrict@function(40,0,25,"");
dilcopy weap_restrict@function(WPN_WAR_HAMMER,80,0,25,"");
dilcopy abi_restrict@function (ABIL_DIV,40,0,25,"");
rent 214 IRON_PIECE
cost 428 IRON_PIECE
end

mayor_axe1
names {"orion", "battle axe", "axe"}
title "the Battleaxe Orion"
descr "The Battleaxe Orion rests on the ground."
extra {}
"Forged from a fallen star by the fabled Mystics of Midgaard,
Orion is truly a fabulous piece of work.  Its double bits gleam
cruelly, and the shaft is deeply inlaid with pure mithril.
Various glowing gems stud the shaft, a true weapon of devastating
power."
extra {"$identify"}
"This massive battle axe will improve your battle axe skill, while
adding to your strength and dexterity.  It will weaken your magical
and cognizant abilities slightly."
extra {"$improved identify"}
"<pre><br/>
Battle axe: +10%<br/>
Strength: +1    Dexterity: +2<br/>
Brain:    -1    Magic:     -1</pre>"
WEAPON_DEF(WPN_BATTLE_AXE, 9, 9)
WEAPON_TRANSFER(WPN_BATTLE_AXE, +10)
STR_TRANSFER(+1)
DEX_TRANSFER(+2)
BRA_TRANSFER(-1)
MAG_TRANSFER(-1)
manipulate {MANIPULATE_TAKE, MANIPULATE_WIELD}
weight 21
dilcopy level_restrict@function(40,0,25,"");
dilcopy weap_restrict@function(WPN_BATTLE_AXE,70,0,25,"");
dilcopy abi_restrict@function (ABIL_STR,70,0,25,"");
rent 214 IRON_PIECE
cost 428 IRON_PIECE
end

castor
names {"castor", "blade", "short sword", "sword"}
title "Castor"
descr "A short sword lies on the ground shining softly."
extra {}
"This short sword is Castor, one of the celestial twins. It was forged
by the ancient Mystics of Midgaard from a fallen star."
extra {"$identify"}
"Castor like its twin will improve your short sword skill, while
adding to your dexterity.  It will weaken your constitution slightly."
extra {"$improved identify"}
"<pre><br/>
Short Sword:     +5%<br/>
Dexterity:       +2<br/>
Constitution:    -1</pre>"

WEAPON_DEF(WPN_SHORT_SWORD, 4, 4)
WEAPON_TRANSFER(WPN_SHORT_SWORD, +5)
DEX_TRANSFER(+2)
CON_TRANSFER(-1)
manipulate {MANIPULATE_TAKE, MANIPULATE_WIELD}
weight 4
dilcopy level_restrict@function(40,0,25,"");
dilcopy weap_restrict@function(WPN_SHORT_SWORD,40,0,25,"");
dilcopy abi_restrict@function (ABIL_DEX,50,0,25,"");
rent 102 IRON_PIECE
cost 204 IRON_PIECE
end

pollux
names {"pollux", "blade", "short sword", "sword"}
title "Pollux"
descr "A short sword lies on the ground shining softly."
extra {}
"This short sword is Pollux, one of the celestial twins. It was forged
by the ancient Mystics of Midgaard from a fallen star."
extra {"$identify"}
"Pollux like its twin will improve your short sword skill, while
adding to your dexterity.  It will weaken your constitution slightly."
extra {"$improved identify"}
"<pre><br/>
Short Sword:     +5%<br/>
Dexterity:       +2<br/>
Constitution:    -1</pre>"
manipulate {MANIPULATE_TAKE, MANIPULATE_WIELD}

WEAPON_DEF(WPN_SHORT_SWORD, 4, 4)
WEAPON_TRANSFER(WPN_SHORT_SWORD, +5)
DEX_TRANSFER(+2)
CON_TRANSFER(-1)
weight 4
dilcopy level_restrict@function(40,0,25,"");
dilcopy weap_restrict@function(WPN_SHORT_SWORD,40,0,25,"");
dilcopy abi_restrict@function (ABIL_DEX,50,0,25,"");
rent 102 IRON_PIECE
cost 204 IRON_PIECE
end

sirius
names {"sirius", "starblade", "blade", "great sword", "sword"}
title "Sirius"
descr "A blazing bright great sword lies here, scorching the ground."
extra {}
"Sirius the Starblade is a weapon of unrivalled beauty. It is rumored that
it is made of metal forged from a fallen star by the fabled Mystics of
Midgaard."
extra {"$identify"}
"The great sword Sirius will improve your disarm skill, while
adding to your dexterity and strength.
It will weaken your magic ability."
extra {"$improved identify"}
"<pre><br/>
Disarm:          +10%<br/>
Strength:        +2<br/>
Dexterity:       +1<br/>
Magic:           -2</pre>"
weight 22
STR_TRANSFER(+2)
DEX_TRANSFER(+1)
MAG_TRANSFER(-2)
manipulate {MANIPULATE_TAKE, MANIPULATE_WIELD}
WEAPON_DEF(WPN_GREAT_SWORD, 8, 8)
SKILL_TRANSFER(SKI_DISARM, +5)
dilcopy level_restrict@function(40,0,25,"");
dilcopy weap_restrict@function(WPN_GREAT_SWORD,50,0,25,"");
dilcopy abi_restrict@function(ABIL_STR,50,0,25,"");
rent 214 IRON_PIECE
cost 428 IRON_PIECE
end

coif_is
names {"coif of inner sight", "inner sight", "sight", "coif"}
title "coif of inner sight"
descr "A coif is lying here, glowing faintly."
extra {}
"This coif is magical. It allows the wearer to see invisible."
ARMOUR_CHAIN(0, 0)
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_HEAD}
weight 10
dilcopy level_restrict@function(30,0,25,"");
rent 25 IRON_PIECE
cost 50 IRON_PIECE
end

chshirt
names {"chain shirt", "chain", "shirt"}
title "a chain shirt"
descr "A chain shirt is lying here."
extra {}
"This is a typical chain shirt. It has no overtly significant features,
other than the good upkeep."
ARMOUR_CHAIN(0, 0)
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_BODY}
weight 15
dilcopy level_restrict@function(30,0,25,"");
cost 5 SILVER_PIECE
end

dgloves
names {"gloves", "pair"}
title "a pair of gloves"
descr "A pair of gloves lie here."
extra {}
"A pair of gloves, used by thieves to stop sweaty hands and the resultant
fingerprints. They're made of soft black leather."
ARMOUR_LEATHER(0, 0)
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_HANDS}
weight 1
dilcopy level_restrict@function(20,0,25,"");
cost 5 SILVER_PIECE
end

crown
names {"pleiades", "crown", "diadem"}
title "Pleiades"
descr "A crown with seven brilliant gems lies here sparkling."
extra {}
"This crown is inlaid with seven bright gemstones:<pre><br/>
<br/>
<div class='cpw'>Diamond</div><div class='cw'> for Purity.<br/>
</div><div class='cpb'>Sapphire</div><div class='cw'> for Bravery.<br/>
</div><div class='cm'>Amethyst</div><div class='cw'> for Honour.<br/>
</div><div class='cg'>Emerald</div><div class='cw'> for Strength.<br/>
</div><div class='cpr'>Ruby</div><div class='cw'> for Valour.<br/>
</div><div class='cpy'>Amber</div><div class='cw'> for Perseverance.<br/>
</div><div class='cpn'>Obsidian</div><div class='cw'> for Character.<br/>
<br/>
They are set within a diadem of the purest platinum. The wearer must be<br/>
a special healer.</div></pre>"
extra {"$identify"}
"This crown will allow the wearer to be more proficient in harm and heal,
as well as giving ultimate powers of sight."
extra {"$improved identify"}
"This crown will give +5 to harm and heal spell skills as well as allowing
the wearer to detect magic, poison, alignment, curse and undead."
CHAR_FLAG_TRANSFER(CHAR_DETECT_MAGIC)
CHAR_FLAG_TRANSFER(CHAR_DETECT_POISON)
CHAR_FLAG_TRANSFER(CHAR_DETECT_ALIGN)
CHAR_FLAG_TRANSFER(CHAR_DETECT_CURSE)
CHAR_FLAG_TRANSFER(CHAR_DETECT_UNDEAD)
SPELL_TRANSFER(SPL_CAUSE_WOUNDS_1, +2)
SPELL_TRANSFER(SPL_CURE_WOUNDS_1, +2)
SPELL_TRANSFER(SPL_CURE_WOUNDS_1, +2)
SPELL_TRANSFER(SPL_CURE_WOUNDS_1, +2)
SPELL_TRANSFER(SPL_CURE_WOUNDS_1, +2)
weight 6
ARMOUR_PLATE(3, 3)
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_HEAD}
cost 2000 IRON_PIECE
rent 262 IRON_PIECE
end



/* end mayors entourage eq */

                                shirt
names {"shirt"}
title "a shirt"
descr "A shirt has been left here."
extra {}
"On the shirt it has been written: 'Any resemblance with real persons
is purely coincidental'."
ARMOUR_CLOTHES(-20,0)
end

/* Standard items given away to beginners for free. */

                                wd_sleeves

names {"wool sleeves","sleeves"}
title "a pair of wool sleeves"
descr "A pair of wool sleeves are lying on the ground."
extra {}
"The sleeves are made from thick wool and will offer slight protection
to your arms."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_ARMS}
ARMOUR_CLOTHES(0, 0)
weight 1
end
                                wd_plate

names {"wool vest", "vest"}
title "a wool vest"
descr "A wool vest is lying on the ground."
extra {}
"The vest is made of thick wool and will offer slight protection."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_BODY}
ARMOUR_CLOTHES(0, 0)
weight 2
end

                                wd_pants

names {"wool pants", "pants"}
title "a pair of wool pants"
descr "A pair of wool pants are lying on the ground."
extra {}
"The pants are made from thick wool and will offer slight protection."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_LEGS}
ARMOUR_CLOTHES(0, 0)
weight 2
end

                           sword_1

names {"long sword", "sword"}
title "a long sword"
descr "A long sword has carelessly been left here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WIELD}
/* Iron - Non Pure, Craftman ship -5 */
WEAPON_DEF(WPN_LONG_SWORD, -5, 0)
romflags {OBJ_NO_DUAL}
weight 20
cost 12 SILVER_PIECE
end


                                 tuborg

names {"green tuborg", "tuborg", "beer bottle", "bottle", "beer"}
title "a bottle of Green Tuborg"
descr "A beer bottle of Green Tuborg has carelessly been left here."
extra {}
"Your mouth begins to water as you look at the cool and refreshing
bottle of Green Tuborg. You feel an urge to drink it as soon as
possible and at the same time you are convinced that it will bring
you new energy."
manipulate {MANIPULATE_TAKE}
LIQ_DEF("brown", 1,1,1,5,2,3,0)
cost 1 COPPER_PIECE

dilcopy tuborg@function("NORMAL");
end


                           reward_board

names {"bulletin board", "board"}
title "the board"
descr "A large board with wanted persons is mounted on a wall here."
type ITEM_OTHER
special SFUN_REWARD_BOARD
end

                           bull_board

names {"bulletin board", "board"}
title "a bulletin board"
descr "A large bulletin board is mounted on a wall here."
type ITEM_OTHER
dilcopy board@boards("citizen","","rem_res@boards","",100);
end

                               odin_statue

/* Statue which contains the things to players (pray function) */
names {"statue of odin", "odin", "statue"}
title "the statue"
descr "A <a cmd='pray #'>statue of Odin</a> is standing behind the altar."
extra {}
"It depicts Odin sitting on his throne, two large wolves by his feet and two
ravens sitting on the back of the throne.  He has long grey hair and beard,
and looks grave and thoughtful."
type ITEM_OTHER
weight 8000

dilbegin worship_st();
var
pc:unitptr;
code
{
   heartbeat:=PULSE_SEC*5;

   :start:
   wait (SFB_DONE, command("worship") and
                   (activator.type==UNIT_ST_PC) and (self==target));
   pc := activator;
   secure(pc, start);

   if (not(dilfind ("channel@function",pc)))
     dilcopy ("channel@function",pc);

   if ((dilfind ("still_newbie@udgaard",pc)) or (pc.level >5))
   {
      unsecure(pc);
      goto start;
   }
   else
     dilcopy ("still_newbie@udgaard",pc);

   goto start;
}
dilend


dilbegin odinstatue();
external
   statue_load(pc : unitptr, s : string, i : integer);

var
   pc         : unitptr;
   expd       : extraptr;

code
{
   :start:
   wait(SFB_CMD, command("pray"));

   if (activator.type != UNIT_ST_PC)
     goto start;

   if (findunit(activator, argument, FIND_UNIT_SURRO, null) != self)
     goto start;

   block;

   act("$1n kneels before $3n and prays to Odin.",
       A_HIDEINV, activator, null, self, TO_ROOM);

   act("You kneel before $3n and pray to Odin.",
       A_ALWAYS, activator, null, self, TO_CHAR);

   if (activator.level > 20)
   {
      act("You feel at ease with yourself after having prayed to Odin.",
          A_ALWAYS, activator, null, null, TO_CHAR);
      goto start;
   }

   pc := activator;
   secure(pc, start);

   act("The eyes of $3n glows in a bright yellow light.",
       A_ALWAYS, pc, null, self, TO_ALL);

   act("A voice echoes inside your head 'The Gods like you, receive"+
       " this gift'",A_ALWAYS, pc, null, self, TO_CHAR);

   statue_load(pc, "tuborg@udgaard",        1);
   statue_load(pc, "midgaard/torch",        1);
   statue_load(pc, "midgaard/bread",        1);
   statue_load(pc, "swood_shield@midgaard", 1);
   statue_load(pc, "guild_medallion@guild_paths", 1);
   //statue_load(pc, "basis/dictionary",      0);

   expd := "Newbie Quest Complete" in pc.quests;
   if (expd)
   {
      statue_load(pc, "newbie/silring",  1);
   }

   /* expd := "$path" in pc.quests;
   if (expd == null)
   {
      act("You are not on a guild path. Please see an " +
          "administrator as soon as possible.",
          A_ALWAYS, pc, null, null, TO_CHAR);
      goto start;
   }*/

   if (pc.profession == PROFESSION_CONJURER)
   {
      statue_load(pc, "udgaard/conjurer_book",  1);
      statue_load(pc, "udgaard/newbie_robes",   1);
      statue_load(pc, "udgaard/newbie_bracers", 1);
      statue_load(pc, "udgaard/newbie_boots",   1);
      statue_load(pc, "udgaard/conjure_item",   1);
      statue_load(pc, "midgaard/dag0",          1);
   }
   else if (pc.profession == PROFESSION_PRIEST)
   {
      statue_load(pc, "udgaard/healer_book",  1);
      statue_load(pc, "udgaard/newbie_chain", 1);
      statue_load(pc, "udgaard/newbie_boots", 1);
      statue_load(pc, "udgaard/newbie_pants", 1);
      statue_load(pc, "udgaard/healer_item",  1);
      statue_load(pc, "midgaard/mace",        1);
   }
   else if (pc.profession == PROFESSION_FIGHTER)
   {
      statue_load(pc, "udgaard/fighter_book",    1);
      statue_load(pc, "udgaard/newbie_plate",    1);
      statue_load(pc, "udgaard/newbie_psleeves", 1);
      statue_load(pc, "udgaard/newbie_boots",    1);
      statue_load(pc, "udgaard/plegg",           1);
      statue_load(pc, "udgaard/fighter_item",    1);
      statue_load(pc, "udgaard/axe0",            1);
   }
   else if (pc.profession == PROFESSION_THIEF)
   {
      statue_load(pc, "udgaard/thief_book",    1);
      statue_load(pc, "udgaard/newbie_jacket", 1);
      statue_load(pc, "udgaard/newbie_lpants", 1);
      statue_load(pc, "udgaard/newbie_boots",  1);
      statue_load(pc, "udgaard/newbie_cloak",  1);
      statue_load(pc, "udgaard/thief_item",    1);
      statue_load(pc, "midgaard/sword0",       1);
   }
   else if (pc.profession == PROFESSION_ASSASSIN)
   {
      statue_load(pc, "udgaard/assassin_book", 1);
      statue_load(pc, "udgaard/newbie_jacket", 1);
      statue_load(pc, "udgaard/newbie_lpants", 1);
      statue_load(pc, "udgaard/newbie_boots",  1);
      statue_load(pc, "udgaard/newbie_cloak",  1);
      statue_load(pc, "udgaard/assassin_item", 1);
      statue_load(pc, "udgaard/thief_dagger",  1);
   }
   else if (pc.profession == PROFESSION_RANGER)
   {
      statue_load(pc, "udgaard/ranger_book",   1);
      statue_load(pc, "udgaard/newbie_plate",  1);
      statue_load(pc, "udgaard/newbie_lpants", 1);
      statue_load(pc, "udgaard/newbie_boots",  1);
      statue_load(pc, "udgaard/newbie_cloak",  1);
      statue_load(pc, "udgaard/ranger_item",   1);
      statue_load(pc, "ranger/ranger_bow",     1);
      statue_load(pc, "udgaard/rapier",        1);
   }
   else if (pc.profession == PROFESSION_SORCERER)
   {
      statue_load(pc, "udgaard/sorcerer_book",  1);
      statue_load(pc, "udgaard/newbie_robes",   1);
      statue_load(pc, "udgaard/newbie_bracers", 1);
      statue_load(pc, "udgaard/newbie_boots",   1);
      statue_load(pc, "udgaard/sorcerer_item",  1);
      statue_load(pc, "sorc_pendant@sorcerer",  1);
      statue_load(pc, "midgaard/dag0",          1);
   }
   else if (pc.profession == PROFESSION_PALADIN)
   {
      statue_load(pc, "udgaard/paladin_book",     1);
      statue_load(pc, "udgaard/newbie_plate",     1);
      statue_load(pc, "udgaard/newbie_psleeves",  1);
      statue_load(pc, "udgaard/newbie_boots",     1);
      statue_load(pc, "udgaard/plegg",            1);
      statue_load(pc, "udgaard/paladin_item",     1);
      statue_load(pc, "paladin_guild/fl1_tongue", 1);
      statue_load(pc, "midgaard/sword0",          1);
   }
   else if (pc.profession == PROFESSION_NECROMANCER)
   {
      statue_load(pc, "udgaard/necro_book",     1);
      statue_load(pc, "udgaard/newbie_robes",   1);
      statue_load(pc, "udgaard/newbie_boots",   1);
      statue_load(pc, "udgaard/newbie_pants",   1);
      statue_load(pc, "udgaard/necro_item",     1);
      statue_load(pc, "midgaard/silver_dagger", 1);
      statue_load(pc, "necro_guild/necro_hand", 1);
   }
   else if (pc.profession == PROFESSION_DRUID)
   {
      statue_load(pc, "udgaard/druid_book",     1);
      statue_load(pc, "udgaard/druid_robes",    1);
      statue_load(pc, "udgaard/newbie_boots",   1);
      statue_load(pc, "udgaard/druid_cloak",    1);
      statue_load(pc, "udgaard/druid_item",     1);
      statue_load(pc, "udgaard/short_staff",    1);
   }
   else if (pc.profession == PROFESSION_KNIGHT)
   {
      statue_load(pc, "udgaard/knight_book",      1);
      statue_load(pc, "udgaard/knight_pants",     1);
      statue_load(pc, "udgaard/knight_boots",     1);
      statue_load(pc, "udgaard/trench_coat",      1);
      statue_load(pc, "udgaard/knight_sleeves",   1);
      statue_load(pc, "udgaard/rapier",           1);
      statue_load(pc, "udgaard/jerkin",           1);
      statue_load(pc, "knight/berret",            1);
   }
   else 
   {
      sendtext("It's so odd, please report to admin your profession is "+itoa(pc.profession), pc);
   }
   unsecure(pc);
   goto start;
}
dilend
end
/*newer newbie equipment*/


/*newer newbie equipment*/

        rapier
names {"rapier","sword"}
title "a rapier"
descr "A slender rapier lies here."
extra {}
"A slender, thin blade, very light and very good at piercing if not much
else."
manipulate {MANIPULATE_TAKE, MANIPULATE_WIELD}
WEAPON_DEF(WPN_RAPIER,0,0)
weight 1
cost 12 IRON_PIECE
WEAPON_SLAYER(RACE_RABBIT)
end

        hand_axe
names {"hand axe","axe"}
title "a hand axe"
descr "A hand axe lies here."
extra {}
"A broad-bladed hand axe."
manipulate {MANIPULATE_TAKE, MANIPULATE_WIELD}
WEAPON_DEF(WPN_HAND_AXE,0,0)
weight 6
cost 5 IRON_PIECE
end

        cudgel
names {"cudgel","club"}
title "a cudgel"
descr "A wooden cudgel lies here."
extra {}
"A short, wooden cudgel. A perfect ambush weapon for knockouts."
manipulate {MANIPULATE_TAKE, MANIPULATE_WIELD}
WEAPON_DEF(WPN_CLUB,0,0)
weight 3
cost 3 IRON_PIECE
end

        fistiron
names {"fist-iron","iron","fist"}
title "a fist-iron"
descr "A fist-iron lies here, gleaming."
extra {}
"A fist-iron to add power to your punches."
manipulate {MANIPULATE_TAKE, MANIPULATE_WIELD}
WEAPON_DEF(WPN_FIST,0,0)
weight 1
cost 6 IRON_PIECE
end

        short_staff
names {"short staff","staff"}
title "a short staff"
descr "A short staff lies here."
extra {}
"A short staff of light wood."
manipulate {MANIPULATE_TAKE, MANIPULATE_WIELD}
WEAPON_DEF(WPN_QUARTERSTAFF, 0,0)
weight 4
cost 3 IRON_PIECE
end

        hand_mace
names {"hand mace","mace"}
title "a hand mace"
descr "A small hand mace lies here."
extra {}
"Perfect weapon for all your self-defence needs."
manipulate {MANIPULATE_TAKE, MANIPULATE_WIELD}
WEAPON_DEF(WPN_MACE, 0,0)
weight 5
cost 1 COPPER_PIECE
end

 thief_dagger
names {"pirate's choice dagger","choice dagger","dagger"}
title "the pirate's choice dagger"
descr "A small glowing dagger lies here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WIELD}
WEAPON_DEF(WPN_DAGGER, 0,0)
weight 1
extra {}
"The dagger is the choice for new thieves."
WEAPON_SLAYER(RACE_RABBIT)
end
                               mage_staff

names {"Caval's choice staff","choice staff","staff"}
title "Caval's choice staff"
descr "A staff lies here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WIELD}
WEAPON_DEF(WPN_QUARTERSTAFF, 0,0)
weight 3
extra {}
"The staff is made from a fine oak wood."
WEAPON_SLAYER(RACE_RABBIT)
end


                                healer_mace

names {"Isabella's  choice mace", "choice mace", "mace"}
title "Isabella's choice mace"
descr "A finely crafted mace lies here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WIELD}
WEAPON_DEF(WPN_MACE, 0,0)
weight 4
extra {}
"This mace is Isabella choice for all new healers."
WEAPON_SLAYER(RACE_RABBIT)
end




                                fighter_sword

names {"Lancelot's beginner sword","beginner sword","longsword","fighter
sword","sword"}
title "a Lancelot's beginner sword"
descr "A shining, sharp longsword lies here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WIELD}
WEAPON_DEF(WPN_LONG_SWORD, 0,0)
romflags {OBJ_NO_DUAL}
weight 5
extra {}
"This longsword is Sir Lancelot's choice for young fighters."
WEAPON_SLAYER(RACE_RABBIT)
end

  fighter_plate
names {"leather plate","fighters plate","breastplate","plate"}
title "a sturdy leather plate"
descr "A sturdy leather plate has been left here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_BODY}
ARMOUR_LEATHER(0,0)
weight 3
dilcopy guild_restrict@function ({GUILD_UDG_FIGHTER},0,0,"");
extra {}
"This breastplate is made from sturdy leather."
end



                                fighter_bands
names {"fighter arm bands","arm bands","bands"}
title "a pair of sturdy leather arm bands"
descr "A small pair of sturdy leather arm bands lies here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_ARMS}
ARMOUR_LEATHER(0,0)
weight 1
dilcopy guild_restrict@function ({GUILD_UDG_FIGHTER},0,0,"");
extra {}
"The arm bands stretch around one's upper arm."
end

                                fighter_leg

names {"leather leggings","fighters leggings", "leggings"}
title "a pair of sturdy leather leggings"
descr "A pair of sturdy leather leggings is lying here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_LEGS}
ARMOUR_LEATHER(0,0)
weight 5
dilcopy guild_restrict@function ({GUILD_UDG_FIGHTER},0,0,"");
extra {}
"The leather leggings are simply two strong flaps of leather, hanging
down on each side of the user's legs, protecting them in battle."
end

                                go_boots
names {"leather rawhide","rawhide","boots","pieces","hide"}
title "some pieces of rawhide"
descr "Some piece of rawhide lie here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_FEET}
ARMOUR_LEATHER(0,0)
weight 1
extra {}
"The leather ties around your ankle with a leather thong and protects
your feet as you walk. The animal fur is still inside to provide added
comfort."
end
                                fighter_helmet

names {"leather coif","fighters helmet", "helmet","coif"}
title "a sturdy leather coif"
descr "A sturdy leather coif is lying here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_HEAD}
ARMOUR_LEATHER(0,0)
weight 5
dilcopy guild_restrict@function ({GUILD_UDG_FIGHTER},0,0,"");
extra {}
"The coif is made from sturdy leather and will provide some protection
to your head during battle."
end

               wood_buckler

names {"wooden buckler", "wood","buckler"}
title "a wooden buckler"
descr "A wooden buckler lies here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_SHIELD}
ARMOUR_HRD_LEATHER(0, 0)
SHIELD_DEF(SHIELD_SMALL,1,3)
weight 5
extra {}
"The buckler is made from wood."
end


                                healers_vest
names {"healer vestments","vestments","red cloth","cloth"}
title "healer vestments"
descr "A piece of regal red cloth lies here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_BODY}
ARMOUR_CLOTHES(0,0)
weight 1
dilcopy guild_restrict@function ({GUILD_UDG_CLERIC},0,0,"");
extra {}
"The vestments are made of a rich, red cloth."
end


                                healer_leggings

names {"healer leggings", "leggings"}
title "a pair of blue cloth leggings"
descr "A pair of blue cloth leggings have been left here"
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_LEGS}
ARMOUR_LEATHER(0,0)
weight 5
extra {}
"The leggings are simply two flaps of strong cloth that hang down on
each side of your legs to protect them in battle."
dilcopy guild_restrict@function ({GUILD_UDG_CLERIC},0,0,"");
end

                                healer_cloak

names {"cloak"}
title "a brown cloak"
descr "A brown cloak lies heaped on the ground here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_ABOUT}
ARMOUR_LEATHER(0,0)
weight 1
extra {}
"The cloak is made from leather and still has the fur inside to provide
added warmth."
dilcopy guild_restrict@function ({GUILD_UDG_CLERIC},0,0,"");

end

                                thief_gloves
names {"gloves"}
title "a pair of finger less gloves"
descr "A pair of gloves lies here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_HANDS}
ARMOUR_CLOTHES(0,0)
weight 1
extra {}
"These gloves are fashioned for ease of movement."
dilcopy guild_restrict@function ({GUILD_UDG_THIEF},0,0,"");
end

              thief_leggings
names {"thief leggings", "leggings","pants"}
title "a pair of black cloth leggings"
descr "A pair of black cloth leggings have been left here"
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_LEGS}
ARMOUR_CLOTHES(0,0)
weight 5
extra {}
"These are tight fitting pants of a dark color. They are very useful to
move quietly in dark areas."
dilcopy guild_restrict@function ({GUILD_UDG_THIEF},0,0,"");
end



                               thief_shirt
names {"black shirt","thief shirt", "shirt"}
title "a black shirt"
descr "A black shirt lies here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_BODY}
ARMOUR_CLOTHES(0,0)
weight 1
extra {}
"The shirt would be useful to help hide in dark places."
dilcopy guild_restrict@function ({GUILD_UDG_THIEF},0,0,"");

end


                                thief_pouch

names {"thief pouch","dark pouch","pouch"}
title "a dark pouch"
descr "A small pouch lies here."
manipulate {MANIPULATE_TAKE,MANIPULATE_WEAR_CHEST,MANIPULATE_ENTER}
CONTAINER_DEF (90)
weight 1
extra {}
"The pouch is useful to stash...acquired treasures in."
dilcopy guild_restrict@function ({GUILD_UDG_THIEF},0,0,"");
end


                               mage_robes

names {"conjurer robe","blue robe", "robe"}
title "a black robe"
descr "A black robe lies in the dirt here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_BODY}
ARMOUR_LEATHER(0,0)
weight 1
extra {}
"The robe is made from the finest kidskin and has been dyed a spectacular
black with blue stars."
dilcopy guild_restrict@function ({GUILD_UDG_MAGE},0,0,"");
end

                               druid_robes

names {"druid robe","green robe", "robe"}
title "a green robe"
descr "A green silk robe lies in the dirt here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_BODY}
ARMOUR_LEATHER(0,0)
weight 1
extra {}
"This robe is made from fine threads of emerald-green silk."
dilcopy guild_restrict@function ({GUILD_NYM_DRUID},0,0,"");
end

                                druid_cloak

names {"cloak"}
title "a dark green cloak"
descr "A dark green cloak lies heaped on the ground here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_ABOUT}
ARMOUR_LEATHER(0,0)
weight 1
extra {}
"The cloak is made of durable wool, and has been dyed to a deep forest
green."
dilcopy guild_restrict@function ({GUILD_NYM_DRUID},0,0,"");
end
/* knight stuff for newbies */
knight_boots
names {"suede boots","boots"}
title "a pair of suede leather boots"
descr "A pair of suede leather boots lies here."
extra {}
"They are made from thick leather and have a heavy inner
cushion."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_FEET}
ARMOUR_LEATHER(0, 0)
weight 5
cost 14   COPPER_PIECE
end

knight_pants
names {"leather pants", "pants"}
title "a pair of leather pants"
descr "A pair of leather pants is lying on the ground."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_LEGS}
ARMOUR_LEATHER(0, 0) /* 10 default str, Leather Quality, Average Craft */
weight 5
cost 8   COPPER_PIECE
extra "$wear_s"
"You slip into the $2N and feel rather smart."
extra "$wear_o"
"$1n slips into the $2N."

extra "$rem_s"
"You get out of the $2N and feel a little naked."
extra "$rem_o"
"$1n gets out of $1s $2N."
end

knight_sleeves
names {"studded leather sleeves","sleeves"}
title "a pair of studded leather sleeves"
descr "A pair of studded leather sleeves is lying on the ground."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_ARMS}
ARMOUR_LEATHER(0, 0)
weight 4
cost 8   COPPER_PIECE
end

knight_jerkin
names {"studded leather jerkin","jerkin"}
title "a studded leather jerkin"
descr "A studded leather jerkin is lying on the ground."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_BODY}
ARMOUR_LEATHER(0, 0)
weight 5
cost 12   COPPER_PIECE
end


trench_coat
names {"black trench coat","coat","trench coat"}
title "a black trench coat"
descr "A black trench coat lies here in a heap."
extra {}
"The trench coat is thick and made of fine leather."
manipulate {MANIPULATE_TAKE,MANIPULATE_WEAR_BODY}
ARMOUR_LEATHER(0,0)
weight 7
cost 5 SILVER_PIECE
dilcopy guild_restrict@function ({GUILD_KNIGHT},0,25,"");
end

berret
names {"black beret","beret","hat"}
title "a black beret"
descr "A black beret bearing the insignia of the Dark Knights lies here."
extra {}
"The black beret is made of sturdy hide, those that see you wearing this
will know you hail from the Dark Knights of Midgaard."
manipulate {MANIPULATE_TAKE,MANIPULATE_WEAR_HEAD}
ARMOUR_HRD_LEATHER(0,0)
weight 4
cost 4 GOLD_PIECE
rent 20 IRON_PIECE
dilcopy guild_restrict@function ({GUILD_KNIGHT},0,25,"");
end
/* end knight stuff */


                             mage_helmet

names {"pointy hat","hat"}
title "a pointy black hat"
descr "A pointy black hat lies here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_HEAD}
ARMOUR_LEATHER(0,0)
weight 5
extra {}
"The black hat rises up to a point and is decorated with moons and stars."
dilcopy guild_restrict@function ({GUILD_UDG_MAGE},0,0,"");
end


              mage_leggings
names {"mage leggings", "leggings"}
title "a pair of dark blue cloth leggings"
descr "A pair of dark blue cloth leggings have been left here"
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_LEGS}
ARMOUR_CLOTHES(0,0)
weight 5
extra {}
"These are dark blue leggings."
dilcopy guild_restrict@function ({GUILD_UDG_MAGE},0,0,"");
end


                                mage_cloak

names {"cloak"}
title "a dark blue cloak"
descr "A dark blue cloak lies heaped on the ground here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_ABOUT}
ARMOUR_LEATHER(0,0)
weight 1
extra {}
"The cloak is made of fine kid leather and dyed blue."
dilcopy guild_restrict@function ({GUILD_UDG_MAGE},0,0,"");

end

/* MOOT HALL MOB CLOTHES */
/*Rathvith's clothes*/
moot_coif
names {"coif","helmet"}
title "a chain coif"
descr "A coif is lying here in a chain puddle."
extra {}
"A typical chain coif. It's heavy, long in back, and
is made of steel links. Well it is dwarven made, maybe a little better than
typical."
extra {"$identify"}
"Just a metal scarf."
extra {"$improved identify"}
"Could be a metal veil if you wore it backwards."
extra {"$repair"}
" "
MATERIAL_METAL("Links of steel")
ARMOUR_CHAIN(0, 0)
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_HEAD}
weight 10
rent 20 IRON_PIECE
cost 40 IRON_PIECE
end

moot_slee
names {"sleeves"}
title "studded leather sleeves"
descr "A pair of bright pink sleeves catch your eye."
extra {}
"A pair of studded leather sleeves. For some reason they are
bright pink."
extra {"$identify"}
"These pink sleeves have made by Candi tooled on them"
extra {"$improved identify"}
"Seems they were made by his daughter. They are nothing special
except tehy have sentimental value."
extra {"$repair"}
" "
MATERIAL_LEATHER("pink leather")
ARMOUR_LEATHER(0, 0)
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_ARMS}
weight 10
rent 10 IRON_PIECE
cost 20 IRON_PIECE
end

moot_shir
names {"chain shirt", "tunic", "shirt"}
title "a chain shirt"
descr "A chain shirt is lying here."
extra {}
"This is a typical chain shirt. It looks a little like a tight,
short tunic made of links."
extra {"$identify"}
"A metal shirt made by Rathvith"
extra {"$improved identify"}
"Why waste mana?"
extra {"$repair"}
" "
MATERIAL_METAL("Links of steel")
ARMOUR_CHAIN(0, 0)
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_BODY}
weight 15
rent 25 IRON_PIECE
cost 50 IRON_PIECE
end

moot_legg
names {"leggings"}
title "a pair of suede leggings"
descr "A pair of brown suede leggings has been left here."
extra {}
"A pair of earthy brown soft leather leggings. They feel
very comfortable. There are some worn spots
at the knees."
extra {"$identify"}
"A pair of boring leggings."
extra {"$improved identify"}
"Perhaps they would be more interesting if
you cut holes in them?"
extra {"$repair"}
" "
MATERIAL_LEATHER("A hard leather")
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_LEGS}
ARMOUR_LEATHER(0,0)
cost 10 IRON_PIECE
rent 5 IRON_PIECE
weight 2
end

moot_abac

names {"abacus"}
title "an abacus"
descr "An abacus lies here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_SHIELD}
ARMOUR_HRD_LEATHER(0, 0)
SHIELD_DEF(SHIELD_SMALL,1,3)
weight 5
extra {}
"The abacus has many different colored beads in rows."
end


moot_tuni
names {"tunic"}
title "a tunic"
descr "A clean tunic is folded."
extra {}
"This boring brown tunic."
extra {"$identify"}
"Nothing special to see here."
extra {"$improved identify"}
"Move along, Johnny."
extra {"$repair"}
" "
MATERIAL_CLOTH("brown linen")
ARMOUR_CLOTHES(0, 0)
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_BODY}
weight 15
rent 25 IRON_PIECE
cost 50 IRON_PIECE
end


moot_boot
names {"boots"}
title "a pair of boots"
descr "A pair of boots have been placed here."
extra {}
"A pair of high leather boots lined with some sort
of fur."
extra {"$identify"}
"Leather boots with rabbit fur lining them. Nothing
special."
extra {"$improved identify"}
"Yep, dead cow and dead bunnies."
extra {"$repair"}
" "
MATERIAL_LEATHER("Leather and fur")
ARMOUR_LEATHER(-5, 0)
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_FEET}
weight 15
rent 5 IRON_PIECE
cost 10 IRON_PIECE
end



/* General Bouncer stuff */

moot_grpl
names {"breast plate","plate"}
title "a grey breast plate"
descr "A servicable breast plate in good repair."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_BODY}
ARMOUR_LEATHER(5, 0)
cost 40 IRON_PIECE
rent 20 IRON_PIECE
extra {}
"This is a studded leather breastplate that offers decent protection for the
chest. It looks to be pretty well-made."
extra {"$identify"}
"Just a breastplate. These guys don't make enough for anything special."
extra {"$improved identify"}
"Why waste mana?"
extra {"$repair"}
" "
MATERIAL_LEATHER("grey leather with metal studs")
weight 25
end

/* Leggings for bouncers - Nothing special */
moot_grle
names {"leggings"}
title "grey leggings"
descr "A pair of grey leather leggings has been left here."
extra {}
"A pair of grey leather leggings with studs in them."
MATERIAL_LEATHER("A charcoal grey metal")
extra {"$indentify"}
"Just leggings. These guys don't make enough for anything special."
extra {"$improved identify"}
"Why waste mana?"
extra {"$repair"}
" "
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_LEGS}
ARMOUR_LEATHER(5,0)
cost 10 IRON_PIECE
rent 5 IRON_PIECE
weight 5
end

moot_grbo
names {"boots"}
title "a pair of boots"
descr "A pair of leather boots has been left here"
extra {}
"A pair of leather boots."
MATERIAL_LEATHER("A hard tanned cowhide")
extra {"$identify"}
"Just boots. These guys don't make enough for anything special."
extra {"$improved identify"}
"Why waste mana?"
extra {"$repair"}
" "
/*manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_LEGS}  */
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_FEET} 
ARMOUR_LEATHER(5,0)
cost 10 IRON_PIECE
rent 5 IRON_PIECE
weight 5
end


/*EL V ISPRESLY'S CLOTHES */
/* work tunic - nothing special */
moot_eptu
names {"tunic"}
title "a tunic"
descr "A dirty tunic lies in a crumpled heap."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_BODY}
ARMOUR_CLOTHES(-10, 0)
cost 4 IRON_PIECE
rent 2 IRON_PIECE
extra{}
"A dirty tunic that may have once been white, but now is
a dingy grey. It has grease and red sauce stains all over it."
extra {"$identify"}
"Just the red sauce smells like tomatoes."
extra {"$improved identify"}
"The grease smells rancid, otherwise there is nothing remarkable."
extra {"$repair"}
" "
MATERIAL_CLOTH("A dirty white cloth")
weight 1
end


moot_eple
names {"leggings"}
title "a pair of leggings"
descr "A pair of dirty leggings lie here."
extra {}
"A pair of dirty leggings that are a strange
grey blue. They are made of soft leather, but are so
coated in grease that they feel stiff."
extra {"$identify"}
"Leggings with rivets at the pockets on the hips and back."
extra {"$improved identify"}
"They also have those newfangled french seams stitched in
orange thread and a tag that says LEEVEYE'S."
extra {"$repair"}
" "
MATERIAL_LEATHER("A blue suede")
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_LEGS}
ARMOUR_LEATHER(0,0)
cost 10 IRON_PIECE
rent 5 IRON_PIECE
weight 2
end

moot_epbo
names {"boots"}
title "blue suede boots"
descr "a pair of boots rest here"
extra{}
"A pair of low soft blue suede boots. They rise to just
above the ankle. They make anyone who wears them want to dance,
as their partner keeps off their shoes."

extra{"$identify"}
"Nice boots!"

extra{"$improved identify"}
"The soles have Made In Weasland stamped on them."
extra {"$repair"}
" "
extra {"$smell"}
"Perhaps some airing out is in order."

MATERIAL_LEATHER("blue suede")
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_FEET}
ARMOUR_LEATHER(-1, 0)
cost  4 IRON_PIECE
rent  2 IRON_PIECE
weight 2
end

moot_epca
names {"cap","hat"}
title "a yellowed old cap"
descr "a filthy cap has been tossed here"
extra{}
"A once white wool cap, it is now yellow with
stains and grease. There is a decoration of a dead
ferret on the band."
extra {"$repair"}
" "
MATERIAL_CLOTH("dirty white wool")
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_HEAD}
ARMOUR_CLOTHES(-5,0)
cost 5 IRON_PIECE
rent 3 IRON_PIECE
weight 1
end



/*BESRI'S CLOTHES */
moot_betu
names {"tunic","under tunic"}
title "a yellow tunic"
descr "A yellow tunic lies in a crumpled heap."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_BODY}
ARMOUR_CLOTHES(-1, 0)
cost 4 IRON_PIECE
rent 2 IRON_PIECE
extra {}
"A wool yellow undertunic with a black braid trim sewn around the neck,
hem and sleeves. There are bronze wrist clasps at the bottom of the
sleeves to keep them closed. The tunic reaches about to the knees."

extra {"clasp"}
"The bronze clasps are small circles."
extra {"$repair"}
" "
MATERIAL_CLOTH("soft woven yellow wool")
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_BODY}
ARMOUR_CLOTHES(-1, 0)
cost 5 IRON_PIECE
rent 3 IRON_PIECE
weight 1
end

moot_beco
names {"coat","overcoat","tunic","over tunic"}
title "a brown coat"
descr "A brown coat is thrown here."
extra{}
"A black overtunic made of wool. It
has short sleeves and bronze clasps to hold it closed
but allow the undertunic to be seen ."
extra {"$repair"}
" "
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_ABOUT}
ARMOUR_CLOTHES(-1, 0)
cost 6 IRON_PIECE
rent 3 IRON_PIECE
MATERIAL_CLOTH("A heavy brown wool")
weight 4
end

moot_bele
names {"leggings"}
title "brown leggings"
descr "A pair of leather leggings lie here."
extra {}
"A pair of brown leather leggings. These look a bit
stretched at the seams, but otherwise almost new."
extra {"$repair"}
" "
MATERIAL_LEATHER("brown leather")
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_LEGS}
ARMOUR_LEATHER(0,0)
cost 5 IRON_PIECE
rent 3 IRON_PIECE
weight 1
end

moot_beca
names {"cap","hat"}
title "a cap"
descr "a cap has been dropped here"
extra {}
"A brown woolen cap, It has been carefully kept
clean."
extra {"$repair"}
" "
MATERIAL_CLOTH("brown wool")
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_HEAD}
ARMOUR_CLOTHES(0,0)
cost 5 IRON_PIECE
rent 3 IRON_PIECE
weight 1
end

moot_bebo
names {"boots"}
title "a pair of brown boots"
descr "a pair of boots lie in the way"
extra{}
"A pair of low brown leather boots. They rise to just
above the ankle. They have been carefully cleaned, but there is an
occasional gouge in the leather from scraping mud off the boot."
extra {"$repair"}
" "
MATERIAL_LEATHER("brown leather")
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_FEET}
ARMOUR_LEATHER(-1, 0)
cost  4 IRON_PIECE
rent  2 IRON_PIECE
weight 2
end


/* Gloves for bookie */
moot_jigl
names {"gloves"}
title "gloves with worn fingertips"
descr "A pair of raggedy old gloves with no fingertips lie here."
extra {}
"It's a pair of old worn leather gloves. The fingertips have been worn
through so that your fingers are uncovered to about half-way
down."
extra {"$repair"}
" "
MATERIAL_LEATHER("A soft leather")
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_HANDS}
ARMOUR_LEATHER(0, 0)
cost 1 COPPER_PIECE
rent 1 IRON_PIECE
weight 1
end

/*JAN'S CLOTHES */

/* Skald clothing based on finds of Jarl's clothing
in Evebo */
moot_sktun
names {"tunic","undertunic"}
title "a red tunic"
descr "A red tunic lies in a crumpled heap."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_BODY}
ARMOUR_CLOTHES(-1, 0)
cost 4 IRON_PIECE
rent 2 IRON_PIECE
extra {}
"A beautiful wool red undertunic with a woven wool trim with a spiral
decoration in red, golden yellow and brown  sewn around the neck,
hem and sleeves. Gold wrist clasps adorn the bottom of the sleeves
The tunic reaches about to the knees."

extra {"trim"}
"The trim is tablet woven in an intricate spiraling pattern
in white, golden yellow and brown."

extra {"clasp"}
"The gold clasps repeat the pattern in the trim. It is likely a weaver
saw the clasps and created the trim to match them."

extra {"$repair"}
" "

MATERIAL_CLOTH("soft woven red wool")
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_BODY}
ARMOUR_CLOTHES(-1, 0)
cost 10 IRON_PIECE
rent 5 IRON_PIECE
weight 3
end

/* skald's overtunic  */
moot_skoc
names {"coat","overcoat","tunic","overtunic"}
title "a white coat"
descr "A white coat is draped here."
extra{}
"A white overtunic made of well woven linen. It
has short sleeves, woven wool trim and gold clasps
adorn the coat."

extra {"trim"}
"The trim is tablet woven in an intricate spiraling pattern
in red, golden yellow and brown. It is along the
neck, the openings in the front, the bottom of the sleeves and
along the lower hem of the coat."

extra {"clasp"}
"The gold clasps repeat the pattern in the trim. It is likely a weaver
saw the clasps and created the trim to match them. They go down
the front of the overcoat, but allow enough of a gap that
the undertunic will show through."

extra {"$repair"}
" "

manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_ABOUT}
ARMOUR_CLOTHES(-1, 0)
cost 12 IRON_PIECE
rent 6 IRON_PIECE
MATERIAL_CLOTH("A heavy white linen ")
weight 3
end

moot_skle
names {"leggings"}
title "brown leggings"
descr "A pair of soft leather leggings lie here."
extra {}
"A pair of brown soft leather leggings with a
woolen trim decorating the lower hem and the waist.
They feel very comfortable."

extra {"trim"}
"The trim is tablet woven in an intricate spiraling pattern
in white, golden yellow and red."

extra {"$repair"}
" "

MATERIAL_LEATHER("A soft brown suede")
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_LEGS}
ARMOUR_LEATHER(0,0)
cost 10 IRON_PIECE
rent 5 IRON_PIECE
weight 2
end

moot_skcap
names {"cap","hat"}
title "a plumed cap"
descr "a cap has been tossed here"
extra {}
"A brown soft leather cap with a woolen trim decorating the band
and a golden yellow plume."

extra {"trim"}
"The trim is tablet woven in an intricate spiraling pattern
in white, golden yellow, and red."

extra {"plume","feather"}
"The feather is large and yellow. A bit showy really."

extra {"$repair"}
" "

MATERIAL_LEATHER("A soft brown suede")
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_HEAD}
ARMOUR_LEATHER(0,0)
cost 10 IRON_PIECE
rent 5 IRON_PIECE
weight 2
end

moot_skbo
names {"boots"}
title "brown boots"
descr "a pair of boots rest here"

extra{}
"A pair of low soft brown leather boots. They rise to just
above the ankle. The boots are decorated with glass beads
and trim."

extra {"trim"}
"The trim is tablet woven in an intricate spiraling pattern
in white, golden yellow, and red."

extra {"beads"}
"Small glass beads and seed pearls repeat the intricate spiraling
pattern in white, golden yellow, and red."

extra {"$repair"}
" "
MATERIAL_LEATHER("brown suede")
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_FEET}
ARMOUR_LEATHER(-1, 0)
cost  4 IRON_PIECE
rent  2 IRON_PIECE
weight 2
end

/* Dellinger's clothing based on finds of Jarl's clothing
in Evebo */
moot_detu
names {"tunic","undertunic"}
title "a white tunic"
descr "A white tunic is neatly folded."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_BODY}
ARMOUR_CLOTHES(-1, 0)
cost 4 IRON_PIECE
rent 2 IRON_PIECE
extra {}
"A beautiful wool white undertunic with a woven wool trim in yellow
yellow sewn around the neck, hem and sleeves. Gold wrist clasps adorn the
bottom of the sleeves. The tunic reaches about to the knees."

extra {"trim"}
"The trim is tablet woven in a floral and leaf pattern
in golden yellow."

extra {"clasp"}
"The gold clasps look like leaves."

extra {"$repair"}
" "

MATERIAL_CLOTH("soft woven white wool")
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_BODY}
ARMOUR_CLOTHES(-1, 0)
cost 10 IRON_PIECE
rent 5 IRON_PIECE
weight 3
end

/* Dellinger's's overtunic  */
moot_deco
names {"coat","overcoat","tunic","overtunic"}
title "a yellow coat"
descr "A yellow coat is elegantly arranged here."
extra{}
"A yellow overtunic made of well woven linen with short sleeves
to allow the undertunic to show. It has woven wool trim and
gold clasps to keep the coat closed."

extra {"trim"}
"The trim is tablet woven in an repeating leave and flower pattern
in white wool. It runs along the neck,
the openings in the front, the bottom of the sleeves and
along the lower hem of the coat."

extra {"clasp"}
"The gold clasps are a flower with two leaves on either side.
They go down the front of the overtunic, but allow enough of a gap that
the undertunic will show through."
extra {"$repair"}
" "
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_ABOUT}
ARMOUR_CLOTHES(-1, 0)
cost 12 IRON_PIECE
rent 6 IRON_PIECE
MATERIAL_CLOTH("A heavy white linen ")
weight 3
end

moot_dele
names {"leggings"}
title "white leggings"
descr "A pair of soft leather leggings lie here."
extra {}
"A pair of spotless white soft leather leggings with a
woolen trim decorating the lower hem and the waist.
They feel very comfortable."

extra {"trim"}
"The trim is tablet woven leaf and flower pattern in
golden yellow wool"

extra {"$repair"}
" "
MATERIAL_LEATHER("A soft white suede")
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_LEGS}
ARMOUR_LEATHER(0,0)
cost 10 IRON_PIECE
rent 5 IRON_PIECE
weight 2
end

moot_deca
names {"cap","hat"}
title "a white leather cap"
descr "a cap has carefully hung here"
extra {}
"A white soft leather cap with a woolen trim decorating the band."

extra {"trim"}
"The trim is tablet woven in a repeating flower and leaf pattern
in golden yellow wool."

extra {"$repair"}
" "
MATERIAL_LEATHER("A soft white suede")
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_HEAD}
ARMOUR_LEATHER(0,0)
cost 10 IRON_PIECE
rent 5 IRON_PIECE
weight 2
end

moot_debe
names {"belt"}
title "a white belt"
descr "a leather belt"

extra{}
"A soft white leather belt with golden leaves and flowers
embroidered on it."
extra {"$repair"}
" "
MATERIAL_LEATHER("white suede")
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_FEET}
ARMOUR_LEATHER(-1, 0)
cost  4 IRON_PIECE
rent  2 IRON_PIECE
weight 2
end


moot_debo
names {"boots"}
title "white boots"
descr "a pair of boots rest here"

extra{}
"A pair of low soft white leather boots. They rise to just
above the ankle. The boots are decorated with woolen trim."

extra {"trim"}
"The trim is tablet woven in a repeating leaf and floral pattern
golden yellow wool."
extra {"$repair"}
" "
MATERIAL_LEATHER("white suede")
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_FEET}
ARMOUR_LEATHER(-1, 0)
cost  4 IRON_PIECE
rent  2 IRON_PIECE
weight 2
end

/* MISC ITEMS */

book_safe
title "a book"
names {"book","green book"}
descr "a musty book."
extra {}
"A small book bound in green leather. The title 'The Edda'
is printed on the cover. Maybe you should open it and see
what is to be gained."
MATERIAL_WOOD("paper")
CONTAINER_DEF(20)
open {EX_OPEN_CLOSE, EX_CLOSED,EX_INSIDE_OPEN}
manipulate {MANIPULATE_TAKE, MANIPULATE_HOLD,MANIPULATE_ENTER}
cost 8 IRON_PIECE
rent 4 IRON_PIECE
end

moot_bbook
names {"book"}
title "a book"
descr "A small leather covered book."
extra {}
"A small book bound in blue leather. The title 'Basic Survival in
and Around Udgaard' is printed on the cover. Perhaps if you READ chapter1
you may learn something."

extra {"chapter1"}

"<pre>                   Chapter 1 - Survival Rules<br/>
<br/><br/>
      1. When in doubt, flee.<br/>
         Just flee, maybe it will work.<br/>
      2. Consider every opponent.<br/>
         Use your consider skill to determine whether you should<br/>
         attack or not.<br/>
      3. Stay away from Nikolai the Ancient.<br/>
         If you don't know why count yourself lucky.<br/>
      4. Do not attack the mayor, his guards, the Phoenix,<br/>
         or Hanson.<br/>
         The cityguards are a bunch of finks. They will rat you<br/>
         out to Adolph then kill you.<br/>
      5. If you become wanted by the Cityguard, make them kill you<br/>
         and do NOT get arrested in Midgaard.<br/>
      6. There is safety in numbers. <br/>
         Form a group with other people that are withing 5 levels of you.<br/>
         See Help Groups on how to do this.<br/>
<br/>
NOW READ CHAPTER2<br/>
</pre>"

extra {"chapter2"}

"<pre>                   Chapter 2 - Places to Go <br/>
<br/><br/>
      1.To get to Midgaard from the obelisk, <br/>
         go e,e,e,e,e,s,e,s,e,e,n,e,n,e,e <br/>
      2. See Mary in the woods, she may have something for you to do.<br/>
         From the obelisk go w,w,w,w,w,w,s,s,e,n.<br/>
      3. Thieves make good targets for those of the 3rd level of learning in most guilds.<br/>
         From the obelisk go s,s,e But do not try Ratling or the guild guards.<br/>
      4. In Midgaard, there is a big tree in Market Square <br/>
         From the obelisk go all east,s,e,s,e,e,n,e,n,e,e,e,e,e,e,e,e,e. <br/>
      6. The leather worker can teach you to resize leather, other<br/>
         craftsmen in Midgaard teach metal and clothing skills. TO get to the <br/>
         leatherworker from MARKET SQUARE in MIDGAARD go <br/>
         go e,e,e,n. Typing info will show you what she teaches.<br/>
      6.To get to Nymgaard from the obelisk,FIRST get a canoe or a Kayak,<br/>
         go all south to the boat bridge, drop canoe, enter canoe, s, wait and <br/>
%slet the current carry you east then sail s, s,s,s,s,w, exit canoe.<br/>
READ CHAPTER3<br/>
</pre>"

extra {"chapter3"}

"<pre>                   Chapter 3 - GUILDS <br/>
<br/><br/>
Look medallion and follow instructions this will work until level <br/>
15, then you will have to walk. If you want to start out <br/>
learning the route here are the basic ones.<br/>
      1.To get to Fighters from the obelisk, <br/>
         go s,e,e,e,e,e.<br/>
      2.To get to Healers from the obelisk, <br/>
         go s,w,w,w,w,w.<br/>
      3. To get to Thieves from the obelisk,<br/>
         go s,s,e,e,e,s,d,n.<br/>
      4. To get to Conjurers from the obelisk,<br/>
         go s,s,w,w,w,s,e. <br/>
      5. To get to Sorcerers from the obelisk,<br/>
         go all east,s,e,s,e,e,n,e,n,e,e,e,e,e,s,s,s,s,s,open door,s,s,s,w. <br/>
      6. To get to Dark Knights from the obelisk,<br/>
         go e,e,e,e,e,s,e,s,e,e,n,e,n,e,e,e,e,e,s,s,s,s,open manhole,d,d,n,n,n,n,e. <br/>
      7. To get to Paladins from the Market Square in Midgaard,<br/>
         go n,w,n,w,w.<br/>
      8.To get to Necromancer from the Market Square in Midgaard,<br/>
         go e,e,e,e,e,e,e,e,e,e,e,e,e,e,n,nod.<br/>
      8.To get to ranger from the Western pier in Nymgaard,<br/>
         go w,s,s,w,w,w,w,w,s,w,s,s,s,w <br/>
      8.To get to druid from the Western pier in Nymgaard,<br/>
         go w,s,s,e,e,e,e,n,n,n,e,e,e,e,e,e,e,s,e,s,e, all north. <br/>
See Our Other Great Titles!<br/>
</pre>"
weight 1
manipulate {MANIPULATE_TAKE, MANIPULATE_HOLD}
type ITEM_NOTE
cost 1 IRON_PIECE
rent 1 IRON_PIECE
end

moot_rbook
names {"book"}
title "a book"
descr "A small leather covered book."
extra {}
"A small book bound in red leather. The title 'Comparative Studies in slime
in the Udgaard and Midgaard Sewers' is printed on the cover. Perhaps if you <a cmd='#'>READ page</a>
you may learn something."

extra {"page"}

"<pre>                   Chapter 1 - Basics<br/>
<br/><br/>
The sewers of the major cities on this<br/>
continent have developed a life of their own.<br/>
Several theories have been promoted as to the cause<br/>
including a mad alchemist, vampiric contamination,<br/>
armies being built by skavens and other unscientific hypothesis.<br/>
<br/>
Obviously the sewers of these cities have spawned life due<br/>
to the intelligent design of the gods of Valhalla. This can be<br/>
seen through the variety of the slime found in the sewers and<br/>
even within the stone husk of the dragon Ancalador.<br/>
<br/>
      1. Grey-Green Variety. (Udgaard Sewers)<br/>
      2. Green Variety (Stone Dragon Cave, Midgaard Sewers)<br/>
      3. Black Variety (Midgaard Sewers)<br/>
      4. Red Variety (Midgaard Sewers)<br/>
      5. Purple Variety (Midgaard Sewers)<br/>
<br/>
You yawn and close the book.</pre>"
weight 1
manipulate {MANIPULATE_TAKE, MANIPULATE_HOLD}
type ITEM_NOTE
cost 1 IRON_PIECE
rent 1 IRON_PIECE
end

moot_gbook
names {"book"}
title "a book"
descr "A small leather covered book."
extra {}
"A small book bound in green leather. The title 'The Edda'
is printed on the cover. Perhaps if you READ page 1
you may learn something."

extra {"page 1","page one"}
"<pre>                   Poetic Edda<br/>
<br/><br/>
Speak now, Eldir,<br/>
for not one step<br/>
Farther shalt thou fare;<br/>
What ale-talk here<br/>
do they have within,<br/>
The sons of the glorious gods?<br/>
<br/><br/>
Eldir spake:<br/>
Of their weapons they talk,<br/>
and their might in war,<br/>
The sons of the glorious gods;<br/>
From the gods and elves<br/>
who are gathered here<br/>
No friend in words shalt thou find.<br/>
<br/><br/>
Now read page 2</pre>"
extra {"page 2", "page two"}
"<pre>Loki spake:<br/>
In shall I go<br/>
into Aegir's hall,<br/>
For the feast I fain would see;<br/>
Bale and hatred<br/>
I bring to the gods,<br/>
And their mead with venom I mix.<br/>
<br/><br/>
Eldir spake:<br/>
If in thou goest<br/>
to Aegir's hall,<br/>
And fain the feast wouldst see,<br/>
And with slander and spite<br/>
wouldst sprinkle the gods,<br/>
Think well lest they wipe it on thee.<br/>
<br/><br/>
Now read page 3</pre>"
extra {"page 3","page three"}
"<pre>Loki spake:<br/>
Bethink thee, Eldir,<br/>
if thou and I<br/>
Shall strive with spiteful speech;<br/>
Richer I grow<br/>
in ready words<br/>
If thou speakest too much to me.<br/>
<br/><br/>
Then Loki went into the hall, but when they who were there<br/>
saw who had entered, they were all silent. </pre>"

weight 1
manipulate {MANIPULATE_TAKE, MANIPULATE_HOLD}
type ITEM_NOTE
cost 1 IRON_PIECE
rent 1 IRON_PIECE
end

/* Instrument for the skald to play */

moot_skci
title "a cithara"
names {"cithara","instrument","guitar"}
descr "a stringed instrument is propped here."
type ITEM_OTHER
extra {}
"A small six stringed wooden instrument.
that can be plucked or strummed. It has a strap to
help keep it steady as the player wanders and sings."
extra {"strap"}
"The strap is tablet woven in an intricate spiraling pattern
in white, golden yellow, brown and red."
cost 1 IRON_PIECE
rent 1 IRON_PIECE
MATERIAL_WOOD("rosewood")
manipulate {MANIPULATE_TAKE,MANIPULATE_HOLD}
end

/*bucket code goes here*/
moot_buck
title "a golden bucket"
descr "A large golden bucket hangs from a hook"
names {"golden bucket","bucket"}
extra {}
"The bucket seems to made of gold. It is chained to a post
in the center of the hall. Something is engraved on the side in large
ornate letters."

extra {"engraving","letters"}
"When this bucket is full Valhalla's Yearly fees are payed off for the
current year.  Once this happens Pi's will go on sale for the remaining
part of the year.  Each month costs Valhalla $200.  When looking in the
bucket you will also see a list of people who have helped fill the
bucket this year.  If you have donated and want to do so anonomously
please put that in your comments or let Whistler know."



type ITEM_OTHER
height 33
weight 5000

extra {"$dlist"}{-1}
"Donation variable for bucket"

dilbegin aware Gold_bucket ();
var
len :integer;
 i,t:integer;
 buf:string;
 tmp:string;
 args:stringlist;

code
{

interrupt (SFB_CMD, command("accadd"),add_name);
interrupt (SFB_CMD, command("accdel"),del_name);

:start:
wait (SFB_MSG, TRUE);

if (argument !="lookin" )
 goto start;


 if (length(self.extra.["$dlist"].names)==1)
  {
  sendtext ("No donations this year yet we still need $2400 per year.<br/>",activator);
 goto start;
 }


 len:=length (self.extra.["$dlist"].names);
  buf:="As you look into the bucket you see the images of";
 i:=1;
 while (i<len)
  {
  if (i==1)
  {
  if (i+1==len)
   buf:=buf+" "+self.extra.["$dlist"].names.[i]+".  ";
   else
      buf:=buf+" "+self.extra.["$dlist"].names.[i]+", ";
      }
      else
      {
        if (i+1==len)
   buf:=buf+" and "+ self.extra.["$dlist"].names.[i]+".  ";
   else
     buf:=buf+" "+self.extra.["$dlist"].names.[i]+", ";
      }
   t:=t+self.extra.["$dlist"].vals.[i];
   i:=i+1;
  }
if (t>2400)
 t:=2400;
  t:=(t*100)/2400;
if (t==100)
                                                                                     buf :=buf +"The images seem to fill the bucket, "+
                                                                                     " with their grandeur and generosity.<br/>";
else
  buf:=buf+"The images only seem to fill the bucket %"+itoa(t)+" of the way up. "+
  " There is still room for your image if you are worthy.<br/>";

  buf:=textformat(buf);
  sendtext(buf,activator);

goto start;

:add_name:
if (activator.level<240)
goto start;
block;
if (argument=="")
 {
 sendtext ("who do you want to add<br/>",activator);
 goto start;
 }
 args:=getwords(argument);

 if (length (args) <2)
  {
  sendtext ("Correct format is 'add &lt;amount&gt; &lt;person&gt;'<br/>",activator);
  goto start;
  }

  if (atoi(args.[0])==0)
  {
  sendtext ("The first argument needs to be greater than 0<br/>",activator);
  goto start;
  }

tmp:=getword(argument);
insert(self.extra.["$dlist"].names,length(self.extra.["$dlist"].names),argument);
insert(self.extra.["$dlist"].vals,length(self.extra.["$dlist"].vals),atoi(args.[0]));

store (self,"bucket",TRUE);
goto start;
:del_name:

if (activator.level<200)
goto start;
block;


if (argument=="")
 {
 sendtext ("who do you want to delete<br/>",activator);
 goto start;
 }

t:=argument in self.extra.["$dlist"].names;
if (t>0)
 {
 remove (self.extra.["$dlist"].names,t-1);
  remove (self.extra.["$dlist"].vals,t-1);
   sendtext(argument +" removed from the list<br/>",activator);
 }
else
{
sendtext ("That person is not in the list.<br/>",activator);
}

store (self,"bucket",TRUE);
goto start;
}
dilend

end

/*     MOOT HALL OBJECTS END HERE */

/*new newbie equipment*/
    newbie_dagger

names {"dagger", "rabbit's bane", "bane"}
title "the dagger Rabbit's Bane"
descr "A small glowing dagger lies here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WIELD}
WEAPON_DEF(WPN_DAGGER,0,0)
weight 1
extra {}
"This small dagger is standard issue for the conjurer, and is specially
useful against rabbits."
WEAPON_SLAYER(RACE_RABBIT)

end

    newbie_sword

names {"long sword", "boar's bane", "bane", "sword"}
title "the long sword Boar's Bane"
descr "A shining, sharp longsword lies here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WIELD}
WEAPON_DEF(WPN_LONG_SWORD,0,0)
romflags {OBJ_NO_DUAL}
weight 5
extra {}
"This longsword is standard issue for fighters, and seems especially useful
against boars."

WEAPON_SLAYER(RACE_BOAR)
end


    newbie_mace

names {"mace", "fox's bane", "bane"}
title "the mace Fox's Bane"
descr "A finely crafted mace lies here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WIELD}
WEAPON_DEF(WPN_MACE,0,0)
weight 4
extra {}
"This small mace is standard issue for healers, and has an image of a fox
engraved upon its head."

WEAPON_SLAYER(RACE_FOX)
end


    newbie_short

names {"short sword", "sword", "badger's bane", "bane"}
title "the short sword Badger's Bane"
descr "A small sword lies here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WIELD}
WEAPON_DEF(WPN_SHORT_SWORD,0,0)
weight 3
extra {}
"This small sword is standard issue for thieves, and has an image of a
badger
engraved into its hilt."
WEAPON_SLAYER(RACE_BADGER)

end




    newbie_robes
names {"conjurer robe", "robe"}
title "a conjurer's red robe"
descr "A red robe lies in the dirt here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_BODY}
ARMOUR_CLOTHES( 0,0)
weight 1
extra {}
"This red robe has the sigil of the conjurer College of Arcane upon it."
end



    newbie_bracers

names {"conjurer bracers", "bracers"}
title "a pair of bracers"
descr "A small pair of bracers lies here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_ARMS}
ARMOUR_CLOTHES(0,0)
weight 1
extra {}
"These small set of bracers provide a spell caster with some protection for
his
lower arms."
end

    newbie_boots
names {"boots"}
title "a pair of leather boots"
descr "A pair of boots sits here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_FEET}
ARMOUR_CLOTHES(0,0)
weight 1
extra {}
"These fine boots provide good protection for the feet."
end

    newbie_chain
names {"jerkin", "links","chain"}
title "a chain mail jerkin"
descr "A heap of chain links lies here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_BODY}
ARMOUR_CLOTHES(0,0)
weight 6
extra {}
"This jerkin is inscribed with the rune of the Healer's Guild upon its
chest."
end


    newbie_pants

names {"skirt", "links","chain"}
title "a chain mail skirt"
descr "A heap of chain links lies here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_LEGS}
ARMOUR_CLOTHES(0,0)
weight 5
extra {}
"This skirt provides protection to the leg and groin area."
end

    newbie_jacket

names {"leather jerkin", "jerkin"}
title "a leather jerkin"
descr "a leather jerkin lies here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_BODY}
ARMOUR_CLOTHES(0,0)
weight 3
extra {}
"This jerkin has the symbol of the Thieves Guild inscribed on the side."
end

    newbie_lpants

names {"leather pants", "pants"}
title "a pair of leather pants"
descr "a pair of leather pants lie here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_LEGS}
ARMOUR_CLOTHES(0,0)
weight 2
extra {}
"These pants are tight, black leather, and useful for keeping a person
concealed
at night."
end

    newbie_cloak

names {"cloak"}
title "a dark cloak"
descr "A cloak lies heaped on the ground here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_ABOUT}
ARMOUR_CLOTHES(0,0)
weight 1
extra {}
"This dark cloak is good for concealing yourself in the dark with."
end

    newbie_plate

names {"breastplate", "plate"}
title "a fighter's breastplate"
descr "a fine breastplate lies here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_BODY}
ARMOUR_CLOTHES(0,0)
weight 14
extra {}
"This fine breastplate is made of reinforced cloth and has the insignia of
the Fighter Guild on the chest."
end

    newbie_psleeves

names {"fighter sleeves", "sleeves"}
title "a fighter's sleeves"
descr "A fine pair of reinforced sleeves lies here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_ARMS}
ARMOUR_CLOTHES(0,0)
weight 10
extra {}
"This fine pair of sleeves has a sword inscribed upon its side."
end


    newbie_legg
names {"fighter leggings", "leggings"}
title "a fighter's leggings"
descr "A fine pair of reinforced leggings lies here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_LEGS}
ARMOUR_CLOTHES(0,0)
weight 10
extra {}
"This fine set of leggings has a sword inscribed upon its side."
end


    conjure_item
names {"ring"}
title "the Ring of the Conjurer"
descr "A small glowing ring lies here."
manipulate{MANIPULATE_TAKE, MANIPULATE_WEAR_FINGER}
weight 1
extra {}
"This ring will transport you to udgaard upon using the command 'home' and
while worn."
dilcopy home@udgaard();
dilcopy guild_restrict@function ({GUILD_UDG_MAGE},0,0,"");
end


    healer_item

names {"amulet"}
title "the Amulet of the Healers"
descr "A small glowing amulet lies here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_NECK}
weight 1
extra {}
"This amulet will transport you to udgaard upon the command 'home' and while
worn."
dilcopy home@udgaard();
dilcopy guild_restrict@function ({GUILD_UDG_CLERIC},0,0,"");

end

    thief_item

names {"broach"}
title "the Broach of Thieving"
descr "A small broach lies here."
manipulate {MANIPULATE_TAKE, MANIPULATE_WEAR_CHEST}
weight 1
extra {}
"This amulet will transport you to udgaard upon the command 'home' and while
worn."
dilcopy home@udgaard();
dilcopy guild_restrict@function ({GUILD_UDG_THIEF},0,0,"");

end


    fighter_item

names {"earring"}
title "the Earring of Battle"
descr "A small earring shaped like a sword is here."
weight 1
manipulate {MANIPULATE_TAKE, MANIPULATE_HOLD, MANIPULATE_WEAR_EAR}
extra {}
"This earring will transport you to udgaard upon the command 'home' and
while
worn."
dilcopy home@udgaard();
dilcopy guild_restrict@function ({GUILD_UDG_FIGHTER},0,0,"");
end

amer_flag
names {"flag"}
title "the American Flag"
descr "A small pole with the American Flag attached to it is here."
weight 1
manipulate {MANIPULATE_TAKE, MANIPULATE_HOLD}
extra {}
"<pre><br/>
<div class='cw'>=======================()<br/>
                       </div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#</div><div class='cpw'>&bb::::::</div><div class='default'><br/>
                       </div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#</div><div class='cpw'>&bb::::::</div><div class='default'><br/>
                       </div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#</div><div class='cpw'>&bb::::::</div><div class='default'><br/>
                       </div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#</div><div class='cpw'>&bb::::::</div><div class='default'><br/>
                       </div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#<br/>
                       </div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#<br/>
                       </div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#<br/>
                       </div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#<br/>
                       </div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#<br/>
                       </div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#<br/>
                       </div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#</div><div class='cpw'>#</div><div class='cpr'>#<br/>
</div></pre>"
cost 1 GOLD_PIECE
end







                                druid_item

names {"sash of nature","sash"}
title "the Sash of Nature"
descr "A green silk sash lies here."
weight 1
manipulate {MANIPULATE_TAKE,MANIPULATE_WEAR_WAIST}
DIV_TRANSFER(+1)
extra {}
"This sash will bestow additional Divine powers to the Druid wearing it."
dilcopy guild_restrict@function ({GUILD_NYM_DRUID},0,0,"");
end

                               fountain

names {"golden obelisk", "gold obelisk", "obelisk", "fountain", "water"}
title "the obelisk"
descr "A large golden obelisk majestically towers above you."
LIQ_DEF("clear", 100,-1,5000,10,1,0,0)
cost 1000 PLATINUM_PIECE
spell 200
extra {}
"The obelisk is very impressive standing ten feet tall. Water pours out from
the pyramidal top, runs down all four sides and is eventually collected in
a depression at the base. The obelisk appears to be made of pure gold and
engraved herein you see names of women and men,
who are forever friends of Udgaard and the world of Valhalla. To look at
them
you should look names."
extra {"names", "name", "sides", "side", "engraving", "engravings"}
"<div class='cpr'>Cinnamon Buns<br/>
</div><div class='cpb'>Kuros Master of The Inner Circle of Truth, and King of Valhalla<br/>
</div><div class='cpm'>Volklod Lord of the Shadows<br/>
</div><div class='cpg'>LightLord husband to Rejji<br/>
</div><div class='cpr'>Tigika Lord of the Tigers<br/>
</div><div class='cpm'>Jem ?<br/>
</div><div class='cpy'>Pookey the first friend of Valhalla<br/>
</div><div class='cpg'>Zahra the Grand Master Wizard<br/>
</div><div class='cpr'>Rikuo </div><div class='cpw'>Coldfire Knight of the Apocalypse<br/>
</div><div class='cpw'>Nitemare </div><div class='cpb'>Dreamweaver of the Legendary Midgaard Bums<br/>
</div><div class='cpy'>Copper</div><div class='cpw'> Pieces<br/>
</div><div class='cpb'>Corvin Prince of Amber - Valhalla Artist<br/>
</div><div class='cw'></div>"

extra{"heart","carving"}
"There is a heart cut into the bottom of the obelisk as
if by dragon's breath. In it is carved

<div class='cpn'>Kut</div><div class='cm'>ter</div><div class='default'>
       +
</div><div class='cpy'>Ael</div><div class='cpb'>le</div><div class='default'>
Forever (and then some)</div>"



end

/*---------------------------- KEYS ------------------------------*/

                            safe_key

/* This is for the safe in the guards office */
names {"brass key","key"}
title "a key"
descr "A brass key has been left here."
type ITEM_KEY
manipulate {MANIPULATE_TAKE, MANIPULATE_HOLD}
weight 1
cost 2 SILVER_PIECE
extra {}
"The brass key is small and looks like it fits a very complicated lock."
end

                           jail_key

/* Key to open the Jail in Udgaard */
names {"steel key","key"}
title "a steel key"
descr "A large steel key has been left here."
type ITEM_KEY
manipulate {MANIPULATE_TAKE, MANIPULATE_HOLD}
weight 1
cost 1 SILVER_PIECE
extra {}
"A key of this size must fit a very strong lock."
end

/*   MOOT HALL KEYS */
/* key to secret in library in a book in the library*/
sec_key
names {"iron key","key"}
title "an old key"
descr "an old iron key"
extra {}
"An old iron key that looks like something someone would
put in a safe place and forget what it belonged to."
weight 1
manipulate {MANIPULATE_TAKE, MANIPULATE_HOLD}
type ITEM_KEY
end

/*key to storage room on food shop keeper*/
stor_key
names {"key"}
title "a tagged key"
descr "a key on a ring with a tag"
extra {}
"A key that is made of some black metal on a small ring. A piece
of doeskin with some writing on it is attached to the ring."
extra {"doeskin","writing","tag"}
"The tag has STORR ROOM written on it."
weight 1
manipulate {MANIPULATE_TAKE, MANIPULATE_HOLD}
type ITEM_KEY
end

/*key to Besri's room on Besri*/
apt1_key
names {"key"}
title "key on a rope"
descr "a key on an old piece of rope"
extra {}
"A steel key with a piece of rope to tie to a belt."
weight 1
manipulate {MANIPULATE_TAKE, MANIPULATE_HOLD}
type ITEM_KEY
end

/*key to Del's room on Del */
apt2_key
names {"key"}
title "a key on a pretty ring"
descr "a key on piece of brightly colored wool</div>"
extra {}
"A steel key with a piece of red wool attached to it."
weight 1
manipulate {MANIPULATE_TAKE, MANIPULATE_HOLD}
type ITEM_KEY
end


/*dressing room key on Skald*/
dres_key
names {"key"}
title "a brass key"
descr "a small brass key"
extra {}
"A shiny brass key is attached to a ring. It looks like it
has been used a lot."
weight 1
manipulate {MANIPULATE_TAKE, MANIPULATE_HOLD}
type ITEM_KEY
end

/* Practice room key on head bouncer */
pra_key
names {"key"}
title "practice room key"
descr "a brass key</div>"
extra {}
"A shiny brass key is attached to a ring. It looks like it
has been used a lot."
weight 1
manipulate {MANIPULATE_TAKE, MANIPULATE_HOLD}
type ITEM_KEY
end


                               map

names {"map of udgaard", "map"}
title "a map of Udgaard"
descr "A map of Udgaard has been left here."
type ITEM_NOTE
manipulate {MANIPULATE_TAKE, MANIPULATE_HOLD}
weight 1
cost 10 IRON_PIECE
extra {}
"<pre>                   The Village of Udgaard<br/>
                       1 1 1 1 1 1 1 1 1 1<br/>
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9<br/>
A                C                             Temple          A07<br/>
                 |                             Shops<br/>
B        I   S   |   B   S                     Food Store      B05<br/>
         |   |   |   |   |                     Armourer        B11<br/>
C    1---#---#---#---#---#---2                 Ironmonger      D05<br/>
         |   |   |   |   |                     Weaponsmith     D11<br/>
D        P   S   |   O   S                     Inn             B03<br/>
                 |                             Post Office     D03<br/>
E  G-#---#---#---#---#---#---#-G               Guard's Office  D09<br/>
                 |                             Haon-Dor        C01<br/>
F  G-#---#---#---#---#---#---#-G               Bank            B09<br/>
                                               Cleric's Guild  E00<br/>
                                               Warrior's Guild E14<br/>
&gt;From C13 you reach the city of Midgaard       Thieve's Guild  H14<br/>
by going 'eseseenenee'                         Mage's Guild    H00<br/>
                                               Cypress Forest  C13</pre>"

end


                                 safe

names {"safe"}
title "the safe"
descr "A safe is placed in a dark corner of the room."
extra {} "You notice that the safe has a keyhole. The safe looks very
heavy."
manipulate {MANIPULATE_ENTER}
open {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED, EX_PICKPROOF}
key safe_key
CONTAINER_DEF(4000)
end

 /* ----------------------  SHOPS ITEMS --------------- */

/* ------------------- VILLAGE ROAD KILL CAFE --------- */
fburg
names {"Fido Burger", "fido", "dog","burger"}
title "fido burger"
descr "a burger waits to be eaten."
extra {}
"When this is eaten it makes you want to jump and
bark and wag your tail. When was the last time anyone
saw Beastly Fido?"
manipulate {MANIPULATE_TAKE}
FOOD_DEF(10, 0)
weight 1
cost 7 IRON_PIECE
rent 4 IRON_PIECE
MATERIAL_ORGANIC("dead dog")

end


dburg
names {"Dragon Burger", "burger","dragon"}
title "dragon burger"
descr "a dragonburger waits to be eaten."
extra {}
"Perhaps this IS made of dragon, it is tough enough.
It feels like maybe they ground up the scales with
the rest of the meat."
manipulate {MANIPULATE_TAKE}
FOOD_DEF(12, 0)
weight 1
cost 15 IRON_PIECE
rent 7 IRON_PIECE
MATERIAL_ORGANIC("dragon bits")
end

rburg
names {"Rat Burger","rat","burger"}
title "rat burger"
descr "a rat burger waits to be chewed."
extra {}
"This burger smells funny. Kind of reminiscent
of the sewers of Udgaard. Was that a whisker
you just saw in your burger?"
manipulate {MANIPULATE_TAKE}
FOOD_DEF(10, 0)
weight 1
cost 15 IRON_PIECE
rent 7 IRON_PIECE
MATERIAL_ORGANIC("rat bits")
end

frab
names {"Fried Rabbit","rabbit" }
title "fried rabbit"
descr "a bucket of fried rabbit parts is cooling here"
extra {}
"Extra crispy fried rabbit. Finger licking good."
manipulate {MANIPULATE_TAKE}
FOOD_DEF(10,0)
weight 1
cost 20 IRON_PIECE
rent 10 IRON_PIECE
MATERIAL_ORGANIC("dead cute little bunnies")
end

gpbbs
names {"Sandwich","peanut", "banana"}
title "Sandwich"
descr "a grilled sandwich lies on the ground"
extra {}
"The vegetarian option. Mashed nuts and bananas spread
between two pieces of bread that have been grilled in butter."
manipulate {MANIPULATE_TAKE}
FOOD_DEF(12, 0)
weight 3
cost 1 COPPER_PIECE
MATERIAL_ORGANIC("bread peanut butter and bananas")
end

fstick
names {"ferret on a stick","kabob","ferret"}
title "a ferret kabob"
descr "a stick with some meat on it lies leaking grease"
extra {}
"Deep fried ferret impaled on a pointed stick. With or without tail."
manipulate {MANIPULATE_TAKE}
FOOD_DEF(12,0)
weight 3
cost 10 IRON_PIECE
rent 5 IRON_PIECE
MATERIAL_ORGANIC("dead ferret")
end

/*THE GULP AND BELCH*/

wwine
names {"white wine","bottle","wine"}
title "white wine"
descr "a bottle of white wine "
extra {}
"A long necked green bottle. It has a cork stopper."
LIQ_DEF("light yellow tinted",3,5,5,1,0,5,0)
weight 1
cost 10 IRON_PIECE
rent 5 IRON_PIECE
manipulate {MANIPULATE_TAKE}
MATERIAL_ORGANIC("fermented grapes")

end

rwine
names {"red wine","bottle","wine"}
title "red wine"
descr "a bottle of red wine "
extra {}
"A long necked green bottle. It has a cork stopper."
LIQ_DEF("deep red",3,5,5,1,0,5,0)
weight 1
cost 11 IRON_PIECE
rent 5 IRON_PIECE
manipulate {MANIPULATE_TAKE}
MATERIAL_ORGANIC("fermented grapes")

end

bwine
names {"rose wine","bottle","wine"}
title "rose wine"
descr "a bottle of rose wine "
extra {}
"A long necked bottle with a green tint. It has a cork stopper."
LIQ_DEF("pinkish",3,5,5,1,0,5,0)
weight 1
cost 8 IRON_PIECE
rent 4 IRON_PIECE
manipulate {MANIPULATE_TAKE}
MATERIAL_ORGANIC("fermented grapes")

end

pbrandy
names {"peach brandy","bottle","decanter","brandy"}
title "peach brandy"
descr "a bottle of peach brandy "
extra {}
"A heavy glass bottle with a stopper."
LIQ_DEF("orange yellow",1,7,7,1,1,6,0)
weight 1
cost 8 IRON_PIECE
rent 4 IRON_PIECE
manipulate {MANIPULATE_TAKE}
MATERIAL_ORGANIC("distilled fermented peaches")
manipulate {MANIPULATE_TAKE}
end

bbrandy
names {"blackberry brandy","bottle","decanter","brandy"}
title "blackberry brandy"
descr "a bottle of blackberry brandy "
extra {}
"A heavy glass bottle with a stopper."
LIQ_DEF("deep purple",1,7,7,1,1,6,0)
weight 1
cost 8 IRON_PIECE
rent 4 IRON_PIECE
manipulate {MANIPULATE_TAKE}
MATERIAL_ORGANIC("distilled fermented blackberries")
end

moot_beer
names {"beer bottle","bottle","beer"}
title "a bottle of beer"
descr "a brown bottle of beer "
extra {}
"A brown bottle."
LIQ_DEF("brown",1, 8, 8, 3, 3, 3,0)
manipulate {MANIPULATE_TAKE}
weight 1
cost 5 IRON_PIECE
rent 2 IRON_PIECE
MATERIAL_ORGANIC("fermented hops")

end


moot_ale
names {"ale bottle","bottle","ale"}
title "a bottle of ale"
descr "a brown bottle of ale"
extra {}
"A brown bottle with a raven etched on it."
LIQ_DEF("brown",1,5,5,0, 1,4, 0)
manipulate {MANIPULATE_TAKE}
weight 1
cost 7 IRON_PIECE
rent 4 IRON_PIECE
MATERIAL_ORGANIC("hops")

end

moot_mead
names {"mead bottle","bottle","mead"}
title "an amber mead bottle"
descr "a bottle of mead"
extra {}
"The bottle is amber with a bee etched into
it."
LIQ_DEF("golden",1,5,5,1,1,4,0)
weight 1
cost 8 IRON_PIECE
rent 4 IRON_PIECE
MATERIAL_ORGANIC("honey mead")
end


moot_milk
names {"milk bottle","bottle","milk"}
title "a bottle of milk"
descr "a bottle of milk"
extra {}
"A bottle of creamy milk. It is cold."
manipulate {MANIPULATE_TAKE}
LIQ_DEF("white",1,3,3,5,5,0,0)
weight 1
cost 4 IRON_PIECE
rent 2 IRON_PIECE
MATERIAL_ORGANIC("milk")

end


moot_water
names {"a water bottle", "bottle","water"}
title "a bottle of water"
descr "a bottle of water "
extra {}
"A bottle of water! Who would pay for that?"
LIQ_DEF("clear",1,3,3,10,1,0,0)
manipulate {MANIPULATE_TAKE}
weight 1
cost 7 IRON_PIECE
rent 4 IRON_PIECE
MATERIAL_ORGANIC("water")
/*darg checked to here 5/2006*/
end
/*       OBJECTS FOR MOOT HALL END HERE */
/* ---------------------- GUILD SHOPS ITEMS --------------- */

/* ------------------------- THIEVES ITEMS ------------------- */
  lockpick
names {"simple lockpick","lockpick"}
title "a simple lockpick"
descr "A small lockpick lies here."
extra {}
"This small lockpick is just a very thin, bent steel rod. In the hands of
an experienced thief this can open many a door, however!"
extra {"$identify"}
"This lockpick is very simple but will still add 2% to your picklock
skill."
manipulate {MANIPULATE_TAKE,MANIPULATE_HOLD}
type ITEM_KEY
cost 2 COPPER_PIECE
rent 16 IRON_PIECE
end

  dirk
names {"small dirk","dirk"}
title "a small dirk"
descr "A small dirk lies here."
extra {}
"A small, slender dirk. This is a simple and easy to conceal weapon for a
rookie thief and it doubles as a lock-picking tool as well!"
weight 1
WEAPON_DEF(WPN_DAGGER,0,0)
manipulate {MANIPULATE_TAKE,MANIPULATE_WIELD}
cost 15 IRON_PIECE
rent 8 IRON_PIECE
end

  facemask
names {"black facemask","facemask","mask","cloth"}
title "a black facemask"
descr "A black piece of cloth lies here."
extra {}
"A black piece of cloth you can wrap around your face to aid you in
hiding from view."
extra {"$wear_s"}
"You wrap the cloth around your head."
extra {"$wear_o"}
"$1n wraps a piece of black cloth around $1s head."
ARMOUR_CLOTHES(0,0)
manipulate {MANIPULATE_TAKE,MANIPULATE_WEAR_HEAD}
weight 1
cost 18 IRON_PIECE
rent 8 IRON_PIECE
end

  blk_hood_cloak
names {"black hooded cloak","cloak"}
title "a black, hooded cloak"
descr "A black, hooded cloak lies here in a heap."
extra {}
"A black cloak with a hood, it would do nicely if you hope to escape
unwanted attention."
extra {"$identify"}
"This cloak will raise your Hide skill by one but is quite difficult to
swim in and decreases your swim skills by 3."
ARMOUR_CLOTHES(0,0)
manipulate {MANIPULATE_TAKE,MANIPULATE_WEAR_ABOUT}
weight 1
cost 2 COPPER_PIECE
rent 8 IRON_PIECE
end

/* ------------------- HEAL ITEMS --------------------------- */
  prot_talisman
names {"protective talisman","talisman"}
title "a protective talisman"
descr "A small talisman lies here, forgotten by all but you."
extra {}
"A small talisman, looks like a small, flat stone disc with a small hole.
You've seen those before, they protect you against the evil eye and
the various mischievous forces."
extra {"$wear_s"}
"You wear $2n around your neck.<br/>
You feel protected from evil eye.<br/>
You feel protected from various mischievous forces."
extra {"$rem_s"}
"You remove $2n.<br/>
You gasp, as you realize that you are now wounded to evil eye.<br/>
With horror you realize that evil forces can now have free play with you."
extra {"$identify"}
"Rocks with natural holes in them are generally regarded as great protection
from faeries although no-one knows why but the faeries themselves, and they
aren't too keen to share their secrets."
manipulate {MANIPULATE_TAKE,MANIPULATE_WEAR_NECK}
type ITEM_WORN
cost 2 COPPER_PIECE
end

  holycharm
names {"holy charm","charm"}
title "a small holy charm"
descr "A small holy charm lies here in the dust."
extra {}
"This tiny item is a small token of all pious people. It is made of a
shiny metal, although hoping for silver would be aiming far too high."
extra {"$wear_s"}
"You wear $2n around your neck.<br/>
Your feel more confident under the protection of the gods."
type ITEM_WORN
manipulate {MANIPULATE_TAKE,MANIPULATE_WEAR_NECK}
cost 5 COPPER_PIECE
rent 8 IRON_PIECE
end

  holybook
names {"holy book","book"}
title "a holy book"
descr "A book lies here in the dust."
extra {}
"Skimming through the book, you realize that it is an holy item, a book
of the teachings and dogmas of the church. Pious people use them to further
their understanding of gods and their works."
extra {"$identify"}
"When held, this book will raise your Div by one but its size will make
you more clumsy in combat."
type ITEM_BOOK
manipulate {MANIPULATE_TAKE,MANIPULATE_HOLD}
weight 4
cost 2 SILVER_PIECE
rent 25 IRON_PIECE
open {EX_OPEN_CLOSE,EX_CLOSED}
end

  holywater
names {"holy water","vial","water"}
title "a vial of holy water"
descr "A small, transparent vial stands here."
extra {}
"A small, transparent vial, containing what looks like water. A small
holy sigil is engraved into the vial. If you want to use it, just
'sprinkle' whomever you want to use it on."
extra {"engraving","sigil"}
"This small sigil is the holy symbol of the church."
extra {"$identify"}
"The holy water has only true power in the hands of skilled men of the
church. However, it will always prove effective against undead and evil
demons. Necromancers and other evil worshippers will have no use for the
holy water."
type ITEM_OTHER
manipulate {MANIPULATE_TAKE,MANIPULATE_HOLD}
weight 1
cost 1 COPPER_PIECE
spell 10
dilcopy holy_water@udgaard();
end

  aid_kit
names {"first aid kit","kit","bag","first aid","aid"}
title "a first aid kit"
descr "A healer's first aid kit stands here."
extra {}
"A small, white bag containing bandages, some simple healing and
painkilling herbs and a bottle of clean water. Excellent aid kit for any
aspiring healer out there."
extra {"$wear_s"}
"You grab your $2N and prepare for medical business."
extra {"$wear_o"}
"$1n grabs $1s $2N and prepares for some medical business."
extra {"$rem_s"}
"You pack up the $2N and stash it away for later use."
extra {"$rem_o"}
"$1n packs up the $2N and stashes it away for later use."
type ITEM_OTHER
manipulate {MANIPULATE_TAKE,MANIPULATE_HOLD}
weight 4
cost 2 SILVER_PIECE
rent 16 IRON_PIECE
end

  heal_herbs
names {"healing herbs","herbs","bunch"}
title "a bunch of healing herbs"
descr "A bunch of herbs lies here."
extra {}
"although they look very much like any other weed around this place, those
have weak healing powers and if you eat them, you will probably feel a
bit better."
extra {"$identify"}
"Eating the herbs will heal one hp if your wounds are not too extensive."
manipulate {MANIPULATE_TAKE,MANIPULATE_HOLD}
FOOD_DEF(0,0)
weight 1
cost 6 IRON_PIECE

dilbegin healing_herbs();
code
{
 :start:
wait(SFB_CMD,command("eat") and
(("herbs" in argument)or("bunch" in argument))
and(activator==self.outside)and(activator.position>POSITION_SLEEPING));
block;
sendtext("You munch the healing herbs... minty taste.<br/>",self.outside);
act("$1n munches some healing herbs.",
A_SOMEONE,self.outside,self,null,TO_REST);
if ((self.outside.hp<self.outside.max_hp/2)or
(self.outside.hp==self.outside.max_hp))
{
destroy(self);
quit;
}
sendtext("Hmmm... You feel slightly better.<br/>",self.outside);
self.outside.hp:=self.outside.hp+1;
position_update(self.outside);
destroy(self);
}
dilend
end

  heal_balm
names {"healing balm","balm","jug"}
title "a small jug of healing balm"
descr "A small white clay jug stands here."
extra {}
"The white clay jug is marked with healer's sigil. It is filled with
balm used to rescue people hovering at the Death's door - however, only
those skilled in First Aid know how to make use of it. Hold it in your
hand and 'aid &lt;victim&gt;' for the balm to work."
extra {"$identify"}
"This balm will heal the patient if applied correctly - the success depends
on healer's First Aid skill. The balm will only stabilize the patient,
and will only work on mortally wounded."
manipulate {MANIPULATE_TAKE,MANIPULATE_HOLD}
type ITEM_POTION

POTION_DEF(60,SPL_CURE_WOUNDS_2,SPL_CURE_WOUNDS_2,SPL_NONE)

weight 1
cost 2 COPPER_PIECE

dilbegin healing_balm();
var
 u : unitptr;
 pc : unitptr;
 txt : string;
code
{
        :start:
wait(SFB_CMD,(command("aid")or command("quaff"))and
(self.equip==WEAR_HOLD)
and(activator==self.outside)and(activator.position>POSITION_SLEEPING));
block;
pc:=activator;
txt:=argument;

if (command("quaff"))
{
sendtext("No idea in quaffing the balm, it's for external use only.<br/>",pc);
goto start;
}

if ((pc.position==POSITION_SITTING)or(pc.position==POSITION_RESTING))
{
sendtext("Nah... you're too relaxed to think about that right now...<br/>",pc);
goto start;
}

if (txt=="")
{
sendtext("Aid who?<br/>",pc);
goto start;
}

u:=findunit(self.outside,txt,FIND_UNIT_SURRO,null);

if ((u.type==UNIT_ST_PC)or(u.type==UNIT_ST_NPC))
{
if (u==pc)
  {
  sendtext("What point would there be in applying the balm to yourself?<br/>"+
  "You are not dying at the moment!<br/>",pc);
  goto start;
  }
if ((u.hp>0)and(u.position>POSITION_INCAP))
  {
  sendtext("But "+u.name+" is not dying at the moment!<br/>",pc);
  goto start;
  }
if ((u.type==UNIT_ST_NPC)and(u.race>999))
 {
 sendtext("You don't recognize the anatomy of this creature, you can't "+
 "apply the balm!<br/>",pc);
 goto start;
 }

 sendtext("You carefully apply the healing balm to "+u.name+"'s bleeding "+
 "wounds...<br/>",pc);
 act("$1n carefully applies some $2N to $3n's bleeding wounds...",
 A_SOMEONE,pc,self,u,TO_NOTVICT);
 if (openroll(60,5)<pc.skills[SKI_FIRST_AID])
 {
 u.hp:=1;
 u.position:=POSITION_RESTING;
 position_update(u);
 act("The wounds on $3n's body close up, and a sigh comes from $3s chest.",
 A_SOMEONE,pc,self,u,TO_NOTVICT);
 act("The wounds on $3n's body close up, and a sigh comes from $3s chest.",
 A_SOMEONE,pc,self,u,TO_CHAR);
 sendtext("You awake from the coma, feeling weak yet still alive!<br/>",u);
 destroy(self);
 }
 else
 {
 sendtext("Oh no! You must have made some error in your treatment!<br/>",pc);
 act("There is no apparent effect to be seen.",A_SOMEONE,pc,self,u,TO_ALL);
 destroy(self);
 }
goto start;
}
sendtext("No-one here by this name.<br/>",self.outside);
goto start;
}
dilend

end

/* ------------------------- OUTDOORS GOODS ------------------------- */

  small_tent
names {"small tent","tent"}
title "a small tent"
descr "A small tent stands here, wonder what's inside."
extra {}
"A small, but sturdy tent with an oilskin canvas as an added protection
versus the elements. It is quite small and can only contain a one or two 
people, depending on their size and the size of their packs."
extra {"$get_s"}
"You pack up the $2N."
extra {"$get_o"}
"$1n packs up $2n."
extra {"$drop_s"}
"You unpack your $2N and assemble it on the ground."
extra {"$drop_o"}
"$1n unpacks $2n and assembles it on the ground."
extra {"$enter_s"}
"You slip into $2n."
extra {"$enter_o"}
"$1n slips into $2n."
weight 20
manipulate {MANIPULATE_TAKE,MANIPULATE_ENTER}
open {EX_OPEN_CLOSE}
flags {UNIT_FL_INDOORS,UNIT_FL_NO_WEATHER}
CONTAINER_DEF(500)
cost 1 SILVER_PIECE
dilcopy tent_dil@udgaard();
end

                large_tent
names {"large tent","tent"}
title "a large tent"
descr "A large tent stands here, wonder what's inside."
extra {}
"A large, sturdy tent with an oilskin canvas as an added protection
versus the elements. It looks large enough for several people."
extra {"$get_s"}
"You pack up the $2N."
extra {"$get_o"}
"$1n packs up $2n."
extra {"$drop_s"}
"You unpack your $2N and assemble it on the ground."
extra {"$drop_o"}
"$1n unpacks $2n and assembles it on the ground."
extra {"$enter_s"}
"You slip into $2n."
extra {"$enter_o"}
"$1n slips into $2n."
weight 30
manipulate {MANIPULATE_TAKE,MANIPULATE_ENTER}
open {EX_OPEN_CLOSE}
flags {UNIT_FL_INDOORS,UNIT_FL_NO_WEATHER}
CONTAINER_DEF(1000)
cost 3 GOLD_PIECE
dilcopy tent_dil@udgaard();
end

  blanket
names {"woolen sleeping blanket","blanket"}
title "a woolen sleeping blanket"
descr "A large sleeping blanket of nice, warm wool lies here."
extra {}
"A large and warm sleeping blanket, clearly designed for outdoors use.
This will keep you warm on the long nights under the stars."
extra {"$wear_s"}
"You wrap $2n about your body.<br/>
You feel nice and warm."
ARMOUR_CLOTHES(0,0)
manipulate {MANIPULATE_TAKE,MANIPULATE_WEAR_ABOUT}
weight 8
cost 5 IRON_PIECE
end

  backpack
names {"backpack","pack"}
title "an oilskin backpack"
descr "A sturdy oilskin backpack lies here."
extra {}
"A sturdy oilskin backpack, it will protect your items from rain and
other harshness of travel."
manipulate {MANIPULATE_TAKE,MANIPULATE_WEAR_BACK,MANIPULATE_ENTER}
CONTAINER_DEF(150)
open {EX_OPEN_CLOSE,EX_CLOSED}
weight 3
cost 2 COPPER_PIECE
end

r_grapnel
names {"grapnel and rope","grapnel","rope","length","hook"}
title "a grapnel and rope"
descr "A coiled rope with a hook attached lies here."
extra {}
"A length of rope with a sturdy hook. You can hold it and use it whenever
you are trying to climb something. although rather unwieldy, it is an
excellent aid in all sorts of climbing."
manipulate {MANIPULATE_TAKE,MANIPULATE_HOLD}
SKILL_TRANSFER(SKI_CLIMB,+2)
SKILL_TRANSFER(SKI_FLEE,-3)
weight 8
cost 10 COPPER_PIECE
rent 40 IRON_PIECE
end

/* ------------------------- SMOKING GOODS -------------------------- */
small_pipe
names {"small smoking pipe","smoking pipe","pipe","small pipe"}
title "a small smoking pipe"
descr "A small smoking pipe of white clay lies here."
extra {}
"A small smoking pipe of white pipe-clay. If you have some tobacco and
feel like having a smoke, just 'fill pipe' and light it while holding it.<br/>
When holding it, you can use the command 'smoke' to enjoy the pipe."
extra {"$identify"}
"<pre><br/>
For those who did not understand the instructions in the description:<br/>
<br/>
  <div class='cpw'>fill pipe</div><div class='cw'>     - will fill the pipe from your tobacco pouch<br/>
                  (if you have one)<br/>
  </div><div class='cpw'>light pipe</div><div class='cw'>    - will light the pipe - you need to hold it<br/>
                  in order to smoke it<br/>
  </div><div class='cpw'>smoke</div><div class='cw'>         - a social command of smoking<br/>
                  ('smoke pipe', 'smoke &lt;name&gt;', 'smoke pipe/cigar')<br/>
<br/>
        The pipe can be extinguished with </div><div class='cpw'>extinguish pipe</div><div class='cw'><br/>
        or </div><div class='cpw'>remove pipe</div><div class='cw'>.<br/>
<br/>
<br/></div></pre>"
PIPE(30,0,360)
end
  large_pipe
names {"large smoking pipe","smoking pipe","pipe","large pipe"}
title "a large smoking pipe"
descr "A large smoking pipe lies here."
extra {}
"A large smoking pipe carved in wood. If you got some tobacco and feel
like having a smoke, just 'fill pipe' and light it while holding it.<br/>
When holding it, you can use the command 'smoke' to enjoy the pipe."
extra {"$identify"}
"<pre><br/>
For those who did not understand the instructions in the<br/>
description:<br/>
<br/>
  <div class='cpw'>fill pipe</div><div class='cw'>     - will fill the pipe from your<br/>
tobacco pouch<br/>
                  (if you have one)<br/>
  </div><div class='cpw'>light pipe</div><div class='cw'>    - will light the pipe - you need to<br/>
hold it<br/>
                  in order to smoke it<br/>
  </div><div class='cpw'>smoke</div><div class='cw'>         - a social command of smoking<br/>
                  ('smoke pipe', 'smoke &lt;name&gt;', 'smoke<br/>
pipe/cigar')<br/>
<br/>
        The pipe can be extinguished with </div><div class='cpw'>extinguish<br/>
pipe</div><div class='cw'><br/>
        or </div><div class='cpw'>remove pipe</div><div class='cw'>.<br/>
<br/>
<br/></div></pre>"
PIPE(50,1,480)
end

  carved_pipe
names {"white meerschaum pipe","smoking pipe","pipe","carved pipe"}
title "a beautiful meerschaum pipe"
descr "A beautifully carved pipe of white meerschaum lies here."
extra {}
"A small piece of art, this pipe is crafted in white meerschaum and the
head is carved in the shape of a small, mischievous devil.<br/>
If you got some tobacco and feel like having a smoke, just 'fill pipe'
and light it while holding it.<br/>
When holding it, you can use the command 'smoke' to enjoy the pipe."
extra {"$identify"}
"<pre><br/>
For those who did not understand the instructions in the<br/>
description:<br/>
<br/>
  <div class='cpw'>fill pipe</div><div class='cw'>     - will fill the pipe from your<br/>
tobacco pouch<br/>
                  (if you have one)<br/>
  </div><div class='cpw'>light pipe</div><div class='cw'>    - will light the pipe - you need to<br/>
hold it<br/>
                  in order to smoke it<br/>
  </div><div class='cpw'>smoke</div><div class='cw'>         - a social command of smoking<br/>
                  ('smoke pipe', 'smoke &lt;name&gt;', 'smoke<br/>
pipe/cigar')<br/>
<br/>
        The pipe can be extinguished with </div><div class='cpw'>extinguish<br/>
pipe</div><div class='cw'><br/>
        or </div><div class='cpw'>remove pipe</div><div class='cw'>.<br/>
<br/>
<br/></div></pre>"
PIPE(200,0,400)
end

                tobacco_aroma
names {"pouch of aromatic tobacco","tobacco pouch","tobacco","pouch"}
title "a pouch of aromatic tobacco"
descr "A small tobacco pouch lies here."
extra {}
"A small pouch of aromatic tobacco."
extra {"$identify"}
"You need a pipe to use this tobacco pouch."
weight 1
manipulate{MANIPULATE_TAKE,MANIPULATE_WEAR_NECK,MANIPULATE_HOLD}
type ITEM_OTHER
value[1] 5
cost 2 COPPER_PIECE
dilcopy tobacco_pouch@udgaard();
end

                tobacco_cheap
names {"pouch of cheap tobacco","tobacco pouch","tobacco","pouch"}
title "a pouch of cheap tobacco"
descr "A small tobacco pouch lies here."
extra {}
"A small pouch of cheap tobacco."
extra {"$identify"}
"You need a pipe to use this tobacco pouch."
weight 1
manipulate{MANIPULATE_TAKE,MANIPULATE_WEAR_NECK,MANIPULATE_HOLD}
type ITEM_OTHER
value[1] 10
cost 1 COPPER_PIECE
dilcopy tobacco_pouch@udgaard();
end

                fat_cigar
names {"huge, fat cigar","cigar"}
title "a huge, fat cigar"
descr "A huge and fat cigar lies here."
extra {}
"A huge and fat cigar, the sort you would deal out to celebrate a birth
of your kid. Just hold it and light it if you want a smoke.<br/>
When smoking a cigar, you can use the command 'smoke' if you wish to bother
others with your smoke."
CIGAR(8,420)
end


  cheap_cigar
names {"cheap cigar","cigar"}
title "a large, cheap cigar"
descr "A large cigar of the cheaper kind lies here."
extra {}
"A large cigar, perhaps not the best quality but it will do for a
desperate chain-smoker. Just hold it and light it if you want a smoke.<br/>
If smoking a cigar, you can use the command 'smoke' if you wish to bother
others with your smoke."
CIGAR(5,300)
end

  long_cigar
names {"fine cigar","cigar"}
title "a fine, long cigar"
descr "A slick, long cigar lies here, tempting you."
extra {}
"A long, fine cigar if you happen to like smoking. Just hold it and light
it if you want a smoke.<br/>
If smoking a cigar, you can use the command 'smoke' if you wish to bother
others with your smoke."
CIGAR(15,420)
end

                slick_cigar
names {"slick cigar","cigar"}
title "a slick, long cigar"
descr "A slick, long cigar lies here, ready to be smoked."
extra {}
"A thin and long, slick cigar of high quality and elegance. Just hold it and
light it if you want a smoke.<br/>
When smoking a cigar, you can use the command 'smoke' if you wish to bother
others with your smoke."
CIGAR(16,420)
end

  dogend
names {"a cigar stump","stump","dog-end","cigar"}
title "a burned-out cigar stump"
descr "A smelly cigar stump lies here."
extra {}
"Once a cigar, now only a soggy dog-end."
type ITEM_TRASH
manipulate {MANIPULATE_TAKE,MANIPULATE_HOLD}
dilcopy blowaway@function(180,"A soggy dog-end of a cigar falls apart.");
end

  glasses
names {"gold-rimmed glasses","glasses","pair"}
title "gold-rimmed glasses"
descr "A pair of gold-rimmed glasses lies here."
extra {}
"A pair of gold-rimmed glasses, rather heavy but very fancy. They seem
rather thick."
extra {"$identify"}
"Unless you are EXTREMELY nearsighted, those glasses will only worsen
your vision."
extra {"$wear_s"}
"You put on the $2n.<br/>
Everything gets blurred."
extra {"$wear_o"}
"$1n puts on some $2n, $1s eyes looks like huge fishes in a pair of bowls."
extra {"$rem_s"}
"You remove the $2n and rub your aching eyes.<br/>
Everything returns to normal shape."
extra {"$rem_o"}
"$1n removes $1s $2n and rubs $1s aching eyes."
manipulate {MANIPULATE_TAKE,MANIPULATE_WEAR_HEAD}
weight 1
cost 2 GOLD_PIECE
DEX_TRANSFER(-2)
end

auc_container
names {"auction container","container","auccont"}
title "the auction container"
descr "The auction storage container is here."
CONTAINER_DEF(4000)
weight 1
cost 1 IRON_PIECE
extra {}
"This container stores items being put up for auction. Don't screw with it."
minv 51
end

auc_sign
names {"large sign","sign"}
title "a large sign"
descr "A large <a cmd='read #'>sign</a> hangs here, demanding your attention."
weight 1
cost 1 IRON_PIECE
extra {}
"Udgaard Auction House<br/><br/>  This auction house serves those who want to
sell or trade items through a neutral third party.  Use the following
commands:<br/><br/> <div class='cpw'>auction</div><div class='cw'> &lt;item&gt;<br/> Used to put up the item for
auction.<br/><br/> </div><div class='cpw'>bid</div><div class='cw'> &lt;item&gt;<br/> Used to begin bidding on an item. Note:
The item's original owner must be present for an auction to be allowed.
<br/><br/> </div><div class='cpw'>list</div><div class='cw'><br/> Used to see the current list of items up for auction.
Note: If an item is not sold for a maximum of 12 mud-days, the auctioneer
will dispose of the items.</div>"
end

%mobiles

                               janitor2

names {"janitor"}
title "the janitor"
descr "A janitor is walking around, cleaning up."

romflags {CHAR_PROTECTED}
M_AVG_HUMAN(6, SEX_MALE)
alignment 900
money 5 IRON_PIECE
dilcopy janitors@midgaard(15);
dilcopy wander_zones@function("udgaard", 20, 1, 1);

end

    ud_clerk

names {"clerk"}
title "Storage Clerk"
descr "The storage clerk stands here waiting to serve you."
extra {}
"The storage clerk is wearing a leather apron which is quite stained.
He looks at you with as half cocked eye as if awaiting your request."
M_HUMAN_WARRIOR_SWORD(140,SEX_MALE)
romflags {CHAR_PROTECTED}

extra {"$storage clerk"} ""
dilbegin aperion_replace();
var
    pcname : string;
    obj    : unitptr;
    pc     : unitptr;
    i      : integer;
    x      : extraptr;
code
{
   :init:
   heartbeat := PULSE_SEC*6;
   on_activation((self.position < POSITION_SITTING) or
  (self.position == POSITION_FIGHTING), skip);

   :start:
wait(SFB_CMD, (activator.type == UNIT_ST_PC) and (command("look") and
 (argument == "clerk")));
    x := DRAKAR_COMPLETE in activator.quests;

 if (x == null)
    {
  act("You are not worthy of a replacement!",A_ALWAYS, activator, null, null ,TO_CHAR);

 goto start;
    }
 if (DRAKAR_REPLACED in x.names)
    {
 act("You have already been rewarded once, move on!",A_ALWAYS, activator, null, null ,TO_CHAR);
 goto start;
    }
   pc := activator;
   secure(pc, lostpc);

   {
 exec("say Hello there "+pc.name +", I see you are in need of a new shield!",self);
   addstring(x.names,DRAKAR_REPLACED);
 pause;
      {
       obj := load("apeiron1@timezon");
       obj.height:= pc.height;
dilcopy ("ply_restrict@function("+pc.name+",0,25,quest_act@gnome)",obj);
    link(obj, pc);
   }
 exec("say There you go. Take good care of it as you won't get another!",self);
 pause;
 exec ("wave "+pc.name ,self);
    unsecure(pc);
    goto start;
   }
:lostpc:
goto start;
}
dilend

end



                        kazeem

names {"Al Kazeem", "Al", "Kazeem"}
title "Al Kazeem"
descr "Al Kazeem the feared one is standing here."
extra {}
"Al Kazeem is from the southern parts of the world and has a distinct
arabian appearance, perhaps from around Khorsabad. Kazeem looks like a
battle scared veteran capable of showing no mercy."
romflags {CHAR_DETECT_INVISIBLE,CHAR_PROTECTED}
M_HUMAN_WARRIOR_SWORD(150,SEX_MALE)
ATTACK_DEFENSE(+400, +400)
exp -500
alignment 1000
exp 150 /* hes really hard to kill */
money 3 SILVER_PIECE
NATURAL_DEF(WPN_FIST, ARM_CLOTHES)

dilcopy no_command@udgaard();
dilcopy no_sleep@udgaard();

dilbegin wait_for_bounty();
external
 integer walk_room@function (s:string,i:integer);

var
tf:integer;
  tgt : unitptr;

code
{
tf:=walk_room@function("accuse_room@midgaard",4);

   :search:
   heartbeat := PULSE_SEC * 10;

   :loop:
   pause;
   tgt := ghead();
   if (tgt.type != UNIT_ST_PC)
     goto loop;

   /* We are here using the fact that all players are at the front of the
      unit list. Thus, we put our pointer at the first unit in the list,
      and then we can check him and all players after that player. */

   while (tgt.type == UNIT_ST_PC)
   {
      if (isset(tgt.charflags, CHAR_OUTLAW))
        if (tgt.level < 200)
           goto gotone;
      tgt := tgt.gnext;
   }
   goto loop;
   :gotone:
   /* Approximate them to be identical. Is this good or bad? */
   /* clone_attr(tgt, hunter); */
   exec("grin", self);

   dilcopy("hunt@udgaard("+tgt.name+","+itoa(tgt.idx)+")", self);
   dilcopy("inter_target@udgaard("+tgt.name+"," +itoa(tgt.idx)+")", self);
   dilcopy("intercept_kill@udgaard(" +itoa(tgt.idx)+")", self);
   quit;
}
dilend

dilcopy rescue@function("guard / captain / mayor / daf / cityguard");

dilbegin spell_block(); /* Block spells */
var
    targ     : unitptr;
code
{
:start:
    wait(SFB_PRE,((command("cast")) and (activator.type==UNIT_ST_PC)));

      targ := activator;
      secure(targ,losttarg);
      if (targ.level >= CREATOR_LEVEL) goto start;
      block;
   act("Al Kazeem dodges your spell.",
          A_ALWAYS,targ,null,null,TO_CHAR);
      act("$1n vainly tries to cast a spell.",
          A_SOMEONE,targ,null,null,TO_REST);
:losttarg:
unsecure(targ);
goto start;
}
dilend /* spell block */



end





                            nicholas

names {"father Nicholas", "father", "Nicholas"}
title "Father Nicholas"
descr "Father Nicholas is sitting here, chanting softly."
extra {}
"Father Nicholas is surrounded by a white aura of peace. His blue eyes
reveal that he is a wise priest. Try the command <a cmd='#'>professions</a>
if your profession has not been set."
flags {UNIT_FL_NO_TELEPORT}
romflags {CHAR_PROTECTED}

M_HUMAN_CLERIC_HAMMER(12, SEX_MALE, "cast harm", "cast heal")
alignment 1000

dilcopy profess_choose@basis();
end


    jens
names {"Jens Grib", "Jens", "Grib"}
title "Jens Grib"
descr "Jens Grib is standing here."
extra {}
"Jens is a middle aged man, nearly bald, with a really short haircut.
Somehow you wonder if he is really as nice as he tries to seem."

M_HUMAN_THIEF_SWORD(3, SEX_MALE)
alignment -800
money 3 IRON_PIECE
dilcopy rescue@function("jesper/enver");
dilcopy teamwork@function("jesper/enver");
dilbegin crook1();
var
   pc : unitptr;
code
{
   heartbeat := PULSE_SEC * 8;

   :start:
   nopriority;
   wait(SFB_CMD, activator.type == UNIT_ST_PC);

   pc := activator;
   secure(pc, start);
   priority;

   pause;

   exec("say Hello "+pc.name+", do you need some work?", self);
   pause;

   exec("steal money from "+pc.name, self);
   pause;

   exec("say I got this really nice offer for you.", self);
   pause;

   exec("steal money from "+pc.name, self);
   pause;

   exec("say You'll earn a lot of money!", self);
   pause;

   exec("steal money from "+pc.name, self);
   pause;

   exec("say No hard feelings, my friend, bye!", self);
   pause;
   pause;
   pause;
   pause;
   pause;
}
dilend

dilcopy global_wander@function(30,0,0);

end

    jesper
names {"Jesper Grib", "Jesper", "Grib"}
title "Jesper Grib"
descr "Jesper Grib is standing here."
extra {}
"Jesper has curly black hair and look a bit smarter than Jens, although
perhaps more naive. Perhaps he is the smaller brother."
M_HUMAN_THIEF_SWORD(1, SEX_MALE)
alignment -600
money 3 IRON_PIECE
dilcopy rescue@function("jens/enver");
dilcopy teamwork@function("jens/enver");
dilbegin crook2();
code
{
   heartbeat := PULSE_SEC * 60;

   exec("say My brain tells me, that this probably wont work.", self);
   pause;
   exec("emote listens to his brain.", self);
   pause;
   exec("say My brain tells me, that we could get in trouble for this!",
self);
   pause;
   exec("emote talks with his brain.", self);
   pause;
   exec("say Weird, my brain doesn't say anything, wonder if it is empty?",
 self);
   pause;

}
dilend

end




                             trader

names {"Ben", "skin trader","trader","shopkeeper"}
title "Ben the skin trader"
extra {} "He is a burly looking man with a scruffy beard and unkempt hair"
descr "Ben is waiting to buy some skins"
exp -500
M_SHOP_KEEPER(10, SEX_MALE, RACE_HUMAN)
money 20 IRON_PIECE

special SFUN_WHISTLE

dilcopy shopkeeper@function(
{"base_skin@skills 5 200"},
{
 "$1n says, 'I've got no such item!'",
 "$1n says, '$3n, you haven't even got it!'",
 "$1n says, 'I don't trade with things such as $2n'",
 "$1n says, '$3n, you can't afford $2n'",
 "$1n says, 'Here you are.'",
 "$1n says, 'This is a nice $2n, thank you.'",
 "$1n says, 'I don't have that many in my stock'",
 "$1n says, 'I'm on a break come back later.'",
 "$1n says, 'What do you want me to do with this?'",
 "$1n says, 'I'm sorry $3n, but i can't afford it'"
}, {"6","6"}, "26", 110, 60, 1619200, "", "" );


special SFUN_TEACH_INIT
"skills;;
$1n tells you, 'I have never heard of such a skill.';
$1n tells you, 'I do not know how to teach this skill.';
$1n tells you, 'You haven't got %s for me.';
$1n tells you, 'You haven't got %d skill points.';
$1n tells you, 'I can not teach you any more';
$1n tells you, 'You must be unaffected by magic, otherwise I can't teach
you';
$1n tells you, 'Remove all equipment, please.';

0;50;skin;4;4000;5;10;0;
"


end


                             sam

/* For the Checken's Rest Inn */
names {"Sam", "bartender"}
title "Sam the Bartender"
descr "Sam watches you calmly, while he skillfully mixes a drink."
extra {} "He is a tired-looking bartender, who hates trouble in his bar."
exp -500
M_SHOP_KEEPER(15, SEX_MALE, RACE_HUMAN)
money 20 IRON_PIECE

special SFUN_WHISTLE

dilcopy shopkeeper@function(
{"tuborg@udgaard 5 20","beer_barrel@midgaard 2 10","beer_bottle@midgaard 10 30"},
{
 "$1n says, 'I've got no such item!'",
 "$1n says, '$3n, you haven't even got it!'",
 "$1n says, 'I don't trade with things such as $2n'",
 "$1n says, '$3n, you can't afford $2n'",
 "$1n says, 'Here you are.'",
 "$1n says, 'This is a nice $2n, thank you.'",
 "$1n says, 'I don't have that many in my stock'",
 "$1n says, 'I'm not serving now, come back later.'",
 "$1n says, 'What do you want me to do with this?'",
 "$1n says, 'I'm sorry $3n, but i can't afford it'"
}, {"6","6"}, "-1", 150, 80, 81920, "", "" );

end


                             hansen

names {"postman", "Hansen"}
title "Hansen"
descr "Hansen the Postman is standing here."
exp -500
M_SHOP_KEEPER(30, SEX_MALE, RACE_HUMAN)
money 10 IRON_PIECE
flags {UNIT_FL_NO_TELEPORT}
special SFUN_WHISTLE
dilcopy mail@mail();

end

eliza
names {"Bonzino"}
title "Bonzino"
descr "<div class='pc_title'>Bonzino the human is standing here.</div>"
extra {}
"She has big green ears, and long greasy hair."
M_SHOP_KEEPER(10, SEX_FEMALE, RACE_HUMAN)
money 3 COPPER_PIECE

dilbegin poly_names();
var
   c : string;
   i : integer;
code
{
   i := rnd(1, 10);

   if (i == 1)
   {
      c := "Elvira";
   }
   else if (i == 2)
   {
      c := "Darkmoon";
   }
   else if (i == 3)
   {
      c := "Sunbeam";
   }
   else if (i == 4)
   {
      c := "Patricia";
   }
   else if (i == 5)
   {
      c := "Elisabeth";
   }
   else if (i == 6)
   {
      c := "Deseri";
   }
   else if (i == 7)
   {
      c := "Courtney";
   }

   else if (i == 8)
   {
      c := "Slyth";
   }
   else if (i == 9)
   {
      c := "Imarlyu";
   }
   else
   {
      c := "Kitty";
   }

   addstring(self.names, c);
   substring(self.names, "bonzino");

   self.title := c+"</div>";
   self.outside_descr := "<div class='pc_descr'>"+c+" the human is standing here.</div>";

   quit;
}
dilend

special SFUN_ORACLE
dilcopy wander_zones@function ("udgaard haon_dor cypress", 55, 1,1);

end

                                 rosanne

names {"Rosanne"}
title "Rosanne"
descr
"Rosanne is here."
extra {}
"She is a quite large, nice-looking lady."
exp -500

M_SHOP_KEEPER(8, SEX_FEMALE, RACE_HUMAN)
money 30 IRON_PIECE
flags {UNIT_FL_NO_TELEPORT}
special SFUN_WHISTLE

dilcopy shopkeeper@function(
{"honeybun@udgaard 20 30", "pastry@midgaard 10 15", "garlic@midgaard 20 50", "bread@midgaard 20 30"},
{
 "$1n says, 'I've got no such item!'",
 "$1n says, '$3n, you haven't even got it!'",
 "$1n says, 'I don't trade with things such as $2n'",
 "$1n says, '$3n, you can't afford $2n'",
 "$1n says, 'Here you are'",
 "$1n says, 'This is a nice $2n, thank you.'",
 "$1n says, 'I don't have that many in my stock'",
 "$1n says, 'The shop is closed, come back later'",
 "$1n says, 'What do you want me to do with this?'",
 "$1n says, 'I'm sorry $3n, but i can't afford it'"
}, {"6","6"}, "19", 110, 10, 81920, "", "" );

end
	 /* MOBS FOR MOOT HALL START HERE */
/*Skald - needs DIL added to sing the names
of the contributors to valhalla. Perhaps
something along the lines of an Edda? Would be
nice to have a 'list' of 3 or 4 songs that player
could request as well. Have his song list play on mud
weekend at 8:00 after noon
*/
moot_skal
names {"skald","jan","bard"}
title "a skald"
descr "A skald sings the praises of the heros of Valhalla."
extra {}
"A darkelf sings in a high voice strumming a
strange instrument. He has piercing blue eyes
and almost white hair that show off his dusky
complexion. He is well known about the land
as Jan Hammerskald."
alignment 300
M_DARK_ELF_CLERIC_CLUB(55,SEX_MALE,"thorn strike","cure light")
money 2 COPPER_PIECE
position POSITION_STANDING
end

/* moot_skal */

moot_jigr
names {"jimmy","shopkeeper","bookie"}
title "a bookie"
descr "A bookie sits here calculating the odds."
extra {}
"Jimmy the Geek sits here with his abacus and pen
calculating the odds and willing to take all of your
money."
flags {UNIT_FL_NO_TELEPORT}
alignment -300
M_ELF_MAGE_FIRE(52,SEX_MALE,"burn")
money 2 COPPER_PIECE
position POSITION_STANDING
end


/* cook/shopkeeper for greasy spoon */
moot_elpr
names {"cook","ogre"}
title "a greasy cook"
descr "A greasy cook hums as he works at the grill."
extra {}
"A middle aged man, a little overweight. He wears greasy white
clothes and a barely readable name tag. He hums something about hounds
as he flips dragon burgers. "

extra {"tag","name tag"}
"The once white tag is now yellow. It looks like it says
'L V Espresly.' Sequins surround the name."

M_SHOP_KEEPER(50, SEX_MALE, RACE_OGRE)
money 10 IRON_PIECE, 1 COPPER_PIECE
position POSITION_STANDING
flags {UNIT_FL_NO_TELEPORT}
default POSITION_STANDING

dilcopy opening_hours@function({5,23}, {"list", "buy", "sell", "value", "request"}, 
                                "say Sorry we're closed", 
                                {"wake","stand","say We're open for business"},
                                {"rest", "say I'm closed, come back at 5am"});

dilcopy shopkeeper@function(
{"fburg@udgaard 5 10",
"dburg@udgaard 5 10",
"rburg@udgaard 5 10",
"frab@udgaard 5 10",
"gpbbs@udgaard 6 12",
"fstick@udgaard 8 16"},
{
 "$1n says, 'What does this look like a four star restaurant?!'",
 "$1n says, '$3n, don't try to sell air!'",
 "$1n says, 'Who would eat a $2n?'",
 "$1n says, '$3n, you can't afford $2n and you can't wash dishes here.'",
 "$1n says, 'Thank you, thank you very much.'",
 "$1n says, 'Nice $2n! thank you, thank you very much, man.'",
 "$1n says, 'I can't cook that many I only have two hands!'",
 "$1n says, 'Closed, come back later, much later'",
 "$1n says, 'What do you want me to do with this?'",
 "$1n says, '$3n, my purse is too thin for that.'"
}, {"5","24"}, "19", 120, 50, 81920, "", "" );
 /*
dilbegin elpr_move
external
 integer walk_room@function (s:string,i:integer);
var
tf:integer;
code
{
  on_activation((self.position <= POSITION_SLEEPING) or
  (self.position == POSITION_FIGHTING), skip);

  :start:
  heartbeat := WAIT_SEC*5;
 if((mudhour >= 1) and (mudhour < 4))
  {
   goto bed;
  }
  if(mudhour == 24)
  {
   goto stclo;
  }
  if(mudhour == 5)
  {
   goto strop;
  }
  goto start;

 :bed:

 :stclo:

 :strop:
*/
end

/*moot_elpr */


moot_besr
names {"besri","bartender"}
title "Besri"
descr "a large bartender pours beer and mead"
extra {}
"Besri reminds most of a bear. He is large and hairy.
Today for some reason he is dressed in his best clothing."
alignment -300
M_SHOP_KEEPER(59, SEX_MALE, RACE_HUMAN)
money 5 COPPER_PIECE
flags {UNIT_FL_NO_TELEPORT}
position POSITION_STANDING

dilcopy shopkeeper@function(
{"moot_beer@udgaard 20 30",
 "moot_ale@udgaard 10 15",
 "moot_mead@udgaard 20 30",
 "moot_milk@udgaard 20 30",
 "moot_water@udgaard 10 15"},
{
 "$1n says, 'Everybody is comedian.'",
 "$1n says, '$3n, don't try to sell air!'",
 "$1n says, 'We don't DO imported stuff.'",
 "$1n says, '$3n, you can't afford $2n and no tabs allowed.'",
 "$1n says, 'Here you are'",
 "$1n says, 'This is a nice $2n, thank you.'",
 "$1n says, 'You are way over limit!'",
 "$1n says, 'Last call was an hour ago.'",
 "$1n says, 'What do you want me to do with this?'",
 "$1n says, '$3n, not enough tips for that - sorry.'"
}, {"11","5"}, "19", 110, 60, 81920, "", "" );
/*
dilbegin besr_move
external
 integer walk_room@function (s:string,i:integer);
var
tf:integer;
code
{
  on_activation((self.position <= POSITION_SLEEPING) or
  (self.position == POSITION_FIGHTING), skip);

  :start:
  heartbeat := WAIT_SEC*5;
 if((mudhour >= 6) and (mudhour < 10))
  {
   goto bed;
  }
  if(mudhour == 5)
  {
   goto stclo;
  }
  if(mudhour == 10)
  {
   goto strop;
  }
  goto start;

 :bed:

 :stclo:

 :strop:     */
end

moot_del
names {"dellinger","bartender"}
title "Dellinger"
descr "a slight bartender pours wines and brandies"
extra {}
"Dellinger dances as he pours a glass of wine here a
snifter of brandy there. He is lithe and small and always
well dressed."
alignment -300
M_SHOP_KEEPER(59, SEX_MALE, RACE_ELF)
money 5 COPPER_PIECE
flags {UNIT_FL_NO_TELEPORT}
position POSITION_STANDING
dilcopy shopkeeper@function(
{"wwine@udgaard 10 20",
 "rwine@udgaard 10 20",
 "bwine@udgaard 10 20",
 "bbrandy@udgaard 10 20",
 "pbrandy@udgaard 10 20"},
{
"$1n says, 'Oh, darling you know we only stock the best!'",
"$1n says, '$3n, don't try to sell me inferior wine!'",
"$1n says, 'Oh is that a new wine?'",
"$1n says, '$3n, you can't possibly afford $2n on your budget.'",
"$1n says, 'Here you are, isn't it lovely?'",
"$1n says, 'Oh for me? Thank you for the lovely $2n.'",
"$1n says, 'Don't you think you have had wee bit much to drink?'",
"$1n says, 'Sorry sweetie, It's gone.'",
"$1n says, 'What do you want me to do with this?'",
"$1n says, '$3n, maybe if you tipped me once in a while I could.'"
}, {"13","10"}, "19", 120, 75, 81920, "", "" );

/*
DIL to keep underage (under level 50) characters from buy alcohol
must check level then if under 50 refuse service
dilbegin under_age1();
code
{
on_activation((self.position <= POSITION_SLEEPING) or
  (self.position == POSITION_FIGHTING), skip);

        :start:
wait(SFB_DONE,command("buy")and if (pc.level < 50)
{
   exec("Come back when you're an adult sweetie!",self);
   goto start;
  }); */
end

/*repair code goes on this one */
moot_rath
names {"rathvith"}
title "Rathvith"
descr "Rathvith waits to sharpen your sword"
extra {}
"Rathvith is a dwarf with some mileage on him. His beard is ragged and
his face scarred."
alignment -300
M_SHOP_KEEPER(59, SEX_MALE, RACE_DWARF)
money 5 COPPER_PIECE
position POSITION_STANDING
flags {UNIT_FL_NO_TELEPORT}
end

/*election Judge */
moot_elju
names {"judge","election judge"}
title "an election judge"
descr "An election judge watches for cheating."
extra {}
"Am election judge watches each person as they place
their vote and ticks them off a list. She has a long nose
and eyes that burn at the prospect the evil things she would do
to any caught cheating. "
alignment 200
flags {UNIT_FL_NO_TELEPORT}
M_BROWNIE_WARRIOR_SWORD(47,SEX_FEMALE)
money 3 COPPER_PIECE
position POSITION_STANDING
end

moot_hbou
names {"groll"}
title "a big groll"
descr "A big groll looks for trouble."
extra {}
"A big, hairy, mean-looking groll watches the room for trouble.
Come to think of it, is there any other kind of groll?"
alignment -1000
flags {UNIT_FL_NO_TELEPORT}
M_GROLL_WARRIOR_AXE(47,SEX_MALE)
money 3 COPPER_PIECE
position POSITION_STANDING
dilcopy teamwork@function("bouncer/shopkeeper/skald");
dilbegin sec_roun();
external
 integer walk_room@function (s:string,i:integer);
var
 tf:integer;
code
{
  on_activation((self.position <= POSITION_SLEEPING) or
  (self.position == POSITION_FIGHTING), skip);

 :start:
 heartbeat := WAIT_SEC*7;
pause;
 if((mudhour >= 5)and (mudhour < 6))
 {
   goto morn;
 }
 if((mudhour >= 12)and (mudhour < 13))
 {
   goto lunch;
 }
 if((mudhour >= 17)and (mudhour < 19))
 {
   goto dinner;
 }
 if((mudhour >= 13)and (mudhour < 14))
 {
   goto abreak;
 }
 if(mudhour == 0)
 {
   goto bed;
 }
 else
  {
  goto pround;
  }
goto start;

  :morn:
  heartbeat := PULSE_SEC*10;
  pause;
  exec("wake", self);
  pause;
  exec("yawn", self);
  pause;
  exec("say Four more years till I retire", self);
  pause;
  tf:=walk_room@function ("moot_cen@udgaard",15);

  goto start;

 :lunch:
 heartbeat := PULSE_SEC*10;
  pause;
  exec("say Time for lunch.", self);
  pause;
  tf:=walk_room@function ("moot_food@udgaard",15);
  if (tf==TRUE)
  {
    exec("buy sandwich", self);
    pause;
    exec("eat sandwich", self);
	pause;
    exec("say Need to wash that down", self);
    pause;
  }
  tf:=walk_room@function ("moot_bar@udgaard",15);
  if (tf==TRUE)
  {
  exec("buy mead", self);
  pause;
  exec("drink mead", self);
  }
  pause;
  exec("say Back to work", self);
  pause;
  tf:=walk_room@function ("moot_cen@udgaard",15);
 goto start;

 :dinner:
 heartbeat := PULSE_SEC*10;
  pause;
  exec("say Dinnertime!", self);
  pause;
  tf:=walk_room@function ("moot_food@udgaard",15);
  if (tf==TRUE)
  {
    exec("buy rabbit", self);
    pause;
    exec("emote leans against the wall.", self);
    pause;
    exec("eat rabbit", self);
    pause;
    exec("emote licks his fingers.", self);
    pause;
    exec("emote loosens his belt.", self);
    pause;
    exec("emote leans back in his chair",self);
    pause;
  }
  tf:=walk_room@function ("moot_bar@udgaard",15);
  if (tf==TRUE)
  {
  exec("buy mead", self);
  pause;
  exec("drink mead", self);
  }
  pause;
  exec("say Back to work", self);
  pause;
  tf:=walk_room@function ("moot_cen@udgaard",15);
 goto start;

 :abreak:
 heartbeat := PULSE_SEC*10;
  pause;
  exec("Think I'll take a quick break", self);
  pause;
  tf:=walk_room@function ("moot_sta1@udgaard",15);
  if (tf==TRUE)
 {
  exec("buy peach brandy", self);
  pause;
  exec("drink peach brandy", self);
  pause;
  exec("drink peach brandy", self);
  pause;
  exec("drop peach brandy", self);
  pause;
  exec("wink dellinger",self);
  pause;
 }
 goto start;

 :bed:
  heartbeat := PULSE_SEC*10;
  pause;
  exec("Time for some shuteye", self);
  pause;
  exec("yawn", self);
  tf:=walk_room@function ("moot_prac@udgaard",15);
  if (tf==TRUE)
 {
  exec("emote curls up in a corner", self);
  pause;
  exec("sleep", self);
  :sleeping:
  exec("snore", self);
  heartbeat := PULSE_SEC*SECS_PER_MUD_HOUR;
  wait(SFB_TICK, TRUE);
  if (mudhour < 5)
    {
      goto sleeping;
    }

  }
  goto start;

  :pround:
  heartbeat := PULSE_SEC*10;
  pause;
   exec("mumble", self);
  pause;
  exec("say Wonder what Rath is up to.", self);
  pause;
  tf:=walk_room@function ("moot_weap@udgaard",15);
  if (tf==TRUE)
  {
  pause;
  exec("emote watches Rathvith work.", self);
  pause;
  }
  tf:=walk_room@function ("moot_cen@udgaard",15);
  if (tf==TRUE)
  {
  exec("mumble", self);
  pause;
  exec("say Need to check the ballots", self);
  pause;
  }
  tf:=walk_room@function ("moot_vote@udgaard",15);
  if (tf==TRUE)
  {
  pause;
  exec("emote makes sure no one is ballot stuffing.", self);
  pause;
  }
  tf:=walk_room@function ("moot_cen@udgaard",15);
   if (tf==TRUE)                                    
  {
  pause;
  exec("say Better make sure those guys are on the job", self);
  pause;
  }
  tf:=walk_room@function ("moot_sou@udgaard",15);
  if (tf==TRUE)
  {
  pause;
  exec("emote supervises the bouncer.", self);
  pause;
  }
  tf:=walk_room@function ("moot_cen@udgaard",15);
  if (tf==TRUE)
  {
  pause;
  exec("say Better check the other slacker", self);
  pause;
  }
  tf:=walk_room@function ("moot_nor@udgaard",15);
  if (tf==TRUE)
  {
  pause;
  exec("emote supervises the bouncer.", self);
  pause;
  }
  tf:=walk_room@function ("moot_cen@udgaard",15);
  if (tf==TRUE)
  {
  pause;
  exec("say Should go say hey to Besri", self);
  pause;
  }
  tf:=walk_room@function ("moot_bar@udgaard",15);
  if (tf==TRUE)
  {
  pause;
  exec("emote chats with Besri", self);
  pause;
  }
  tf:=walk_room@function ("moot_cen@udgaard",15);
  if (tf==TRUE)
  {
  pause;
  exec("say Wonder what is cooking.", self);
  pause;
  }
  tf:=walk_room@function ("moot_food@udgaard",15);
  if (tf==TRUE)
  {
  pause;
  exec("emote listens to the cook sing", self);
  pause;
  }
  tf:=walk_room@function ("moot_cen@udgaard",15);
  if (tf==TRUE)
  {
  pause;
  exec("say Time to check the bookies out.", self);
  pause;
  }
  tf:=walk_room@function ("moot_bet@udgaard",15);
  if (tf==TRUE)
 {
  pause;
  exec("emote makes sure no one is cheating.", self);
  pause;
 }
  tf:=walk_room@function ("moot_cen@udgaard",15);
  if (tf==TRUE)
 {
  pause;
  exec("say Wonder how Dellinger is today.", self);
  pause;
  }
  tf:=walk_room@function ("moot_sta1@udgaard",15);
  if (tf==TRUE)
  {
  exec("buy peach brandy", self);
  pause;
  exec("drink peach brandy", self);
  pause;
  exec("wink dellinger",self);
 }
 tf:=walk_room@function ("moot_cen@udgaard",15);
  if (tf==TRUE)
 {
  pause;
  exec("say Back to work", self);
  pause;
 }
 tf:=walk_room@function ("moot_sta2@udgaard",15);
  if (tf==TRUE)
 {
  pause;
  exec("emote pulls out a book and reads it.", self);
  pause;
  exec("emote puts the book away.", self);
 }
 tf:=walk_room@function ("moot_cen@udgaard",13);
  if (tf==TRUE)
 {
  pause;
  exec("emote chats with the guards",self);
  pause;
 }
  goto start;
}

dilend

end

moot_boun
names {"groll"}
title "a big groll"
descr "A mean-looking groll leers at women."
extra {}
"A big, hairy, mean-looking groll watches the room for trouble.
He keeps flexing his biceps for the ladies."
alignment -1000
flags {UNIT_FL_NO_TELEPORT}
M_GROLL_WARRIOR_CLUB(47,SEX_MALE)
money 5 COPPER_PIECE
position POSITION_STANDING
dilcopy teamwork@function("bouncer");
/*
DIL flirt with female characters
dilbegin flirt_women();
code
{
on_activation((self.position <= POSITION_SLEEPING) or
  (self.position == POSITION_FIGHTING), skip);

        :start:
wait(SFB_DONE,command("look")and(target == self)and (
activator.type == UNIT_ST_PC)
if (pc.gender == "female")
{
   exec("stretch "+pc.name,self);
   goto start;
  });
  dilend */
end

moot_fbou
names {"groll"}
title "a big groll"
descr "A hairy groll bats her eyes at men."
extra {}
"A big, hairy, mean-looking groll watches the room for trouble.
She keeps looking your way."
alignment -1000
flags {UNIT_FL_NO_TELEPORT}
M_GROLL_WARRIOR_SWORD(47,SEX_FEMALE)
money 5 COPPER_PIECE
position POSITION_STANDING
dilcopy teamwork@function("bouncer");
/*dilbegin flirt_men();
code
{
on_activation((self.position <= POSITION_SLEEPING) or
  (self.position == POSITION_FIGHTING), skip);

        :start:
wait(SFB_DONE,command("look")and(target == self)and (
activator.type == UNIT_ST_PC)
if (pc.gender == "male")
{
   exec("flirt "+pc.name,self);
   goto start;
  });
  dilend */
end

	     /*MOBS FOR MOOT HALL END HERE*/

                              harold

names {"Harold", "ironmonger"}
title "Harold"
descr
"Harold the Ironmonger stands behind the counter."
extra {}
"A big, but weird-looking, fellow."
exp -500
flags {UNIT_FL_NO_TELEPORT}
M_SHOP_KEEPER(6, SEX_MALE, RACE_HUMAN)
money 50 COPPER_PIECE

special SFUN_WHISTLE
dilcopy evaluate@function(74);
dilcopy shopkeeper@function(
{"torch@midgaard 5 8","lantern@midgaard 2 6","bag@midgaard 5 8",
 "paper@midgaard 10 20","quill@midgaard 10 20", 
 "map@udgaard 2 5","dictionary@basis 2 5", "dice@basis 2 5"},
{
 "$1n says, 'I've got no such item!'",
 "$1n says, '$3n, you haven't even got it!'",
 "$1n says, 'I don't trade with things such as $2n'",
 "$1n says, '$3n, you can't afford $2n'",
 "$1n says, 'Here you are'",
 "$1n says, 'This is a nice $2n, thank you'",
 "$1n says, 'I don't have that many in my stock'",
 "$1n says, 'The shop is closed, come back later'",
 "$1n says, 'What do you want me to do with this?'",
 "$1n says, 'I'm sorry $3n, but i can't afford it'"
}, {"6","6"}, "1 15 16 17 18 21 11 26", 120, 80, 81920, "", "" );

end

                             bob

names {"Bob"}
title "Bob"
descr "Bob the Banker is here, sitting behind the counter."
extra {} "He has a very serious look on his face."

M_SHOP_KEEPER(13, SEX_MALE, RACE_HUMAN)
money 2 SILVER_PIECE
position POSITION_SITTING
default POSITION_SITTING
exp -500

special SFUN_WHISTLE
flags {UNIT_FL_NO_TELEPORT}

special SFUN_BANK

end


                               slade

names {"armourer", "Slade"}
title "Slade"
descr "Slade the Armourer is standing here."
extra {}
"An old and yet very strong armourer, he has made more armours in his
lifetime than you have eaten peas."

M_SHOP_KEEPER(4, SEX_MALE, RACE_HUMAN)
money 20 IRON_PIECE
position POSITION_SITTING
default POSITION_SITTING
exp -500
flags {UNIT_FL_NO_TELEPORT}
special SFUN_WHISTLE
dilcopy evaluate@function(94);
dilcopy shopkeeper@function(
{"chain_coif@midgaard 4 20", "chain_sleeves@midgaard 4 20",
 "chain_jerkin@midgaard 4 20", "chain_skirt@midgaard 4 20",
 "scale_boots@midgaard 4 20", "swood_shield@midgaard 4 20"},
{
 "$1n says, 'I've got no such item!'",
 "$1n says, '$3n, you haven't even got it!'",
 "$1n says, 'I don't trade with things such as $2n'",
 "$1n says, '$3n, you can't afford $2n'",
 "$1n says, 'Here you are.'",
 "$1n says, 'This is a nice $2n, thank you.'",
 "$1n says, 'I don't have that many in my stock'",
 "$1n says, 'I'm not serving now, come back later.'",
 "$1n says, 'What do you want me to do with this?'",
 "$1n says, 'I'm sorry $3n, but i can't afford it'"
}, {"6","6"}, "9 25", 140, 30, 81920, "", "" );



end

                             arny

names {"weaponsmith", "Arny"}
title "Arny"
descr "Arny the Weaponsmith is standing here."
extra {} "He's a young weaponsmith who still has a lot to learn."
exp -500
flags {UNIT_FL_NO_TELEPORT}
M_SHOP_KEEPER(6, SEX_MALE, RACE_HUMAN)
money 15 IRON_PIECE
position POSITION_SITTING
default POSITION_SITTING

special SFUN_WHISTLE
dilcopy shopkeeper@function(
{"sword_1@udgaard 4 20", "dag0@midgaard 4 20",
 "sword0@midgaard 4 20", "ham0@midgaard 4 20"},
{
 "$1n says, 'I've got no such item!'",
 "$1n says, '$3n, you haven't even got it!'",
 "$1n says, 'I don't trade with things such as $2n'",
 "$1n says, '$3n, you can't afford $2n'",
 "$1n says, 'Here you are'",
 "$1n says, 'This is a nice $2n, thank you.'",
 "$1n says, 'I don't have that many in my stock'",
 "$1n says, 'The shop is closed, come back later'",
 "$1n says, 'What do you want me to do with this?'",
 "$1n says, 'I'm sorry $3n, but i can't afford it'"
}, {"6","6"}, "5 6", 110, 60, 81920, "", "" );


end

                              roland
names {"roland","auctioneer"}
title "Roland the Auctioneer"
descr "Roland the Auctioneer stands here, waiting to do business."
extra {}
"Roland is an average-looking, middle-aged man. He looks either bored or
irritated, possibly both."
M_AVG_HUMAN(20, SEX_MALE)
alignment 1
exp -500
dilbegin nokill();
var
 pc      : unitptr;
 room    : unitptr;
 i       : integer;

code
{
 heartbeat := 3 * PULSE_SEC;
 :start:
 wait(SFB_COM,  self.position == POSITION_FIGHTING);
 pc := self.fighting;
 if (pc.level > 200) goto start;
 secure(pc,gone);
 if (command("flee"))
  block;

self.hp:= self.max_hp;
act("$1n grabs a large oak staff from behind $1m.", A_ALWAYS, self, null,
pc, TO_VICT);
act("$1n grabs a large oak staff from behind $1m.", A_ALWAYS, self, null,
pc, TO_NOTVICT);
act("With a surprisingly swift move he swings, connecting with your head and
knocking you unconscious!", A_ALWAYS, self, null, pc, TO_VICT);
act("With a surprisingly swift move he swings, smashing $3n in the head
knocking $3m unconscious!", A_SOMEONE, self, null, pc, TO_NOTVICT);

pc.hp:= 0;
pc.endurance:= 0;
position_update(pc);
:gone:
unsecure(pc);
goto start;
}
dilend

dilbegin auction();
var
        pc         : unitptr;
        item       : unitptr;
        bitem      : unitptr;
        items      : unitptr;
        bidmult    : integer;
        firstbid   : integer;
        bidstr     : string;
        seller     : unitptr;
        bidder     : unitptr;
        raise      : integer;
        t          : integer;
        cont       : unitptr;
        price      : integer;
        l          : integer;
        alist      : stringlist;
        owner      : string;
		bname:string;
		sname:string;
		temp2:string;
		temp:string;
code
{
heartbeat:= PULSE_SEC * 10;
  on_activation((self.position <= POSITION_SLEEPING) or
               (self.position == POSITION_FIGHTING), skip);

:start:


  wait(SFB_CMD, (command("auction") or command("bid") or command("list"))
and (activator.type == UNIT_ST_PC));
  block;
  pc := activator;
  secure(pc,lost);

if(command("auction"))
{
  cont := findunit(self, "auccont", FIND_UNIT_SURRO, null);
   if(cont == null)
    {
     exec("say I can't take your item right now.", self);
     goto lost;
    }
if(("platinum" in argument) or ("gold" in argument) or
   ("silver" in argument) or ("copper" in argument) or
   ("iron" in argument))
     {
      exec("say What do I look like, a bank?  Items ONLY.", self);
      goto lost;
     }
temp:=argument;
item:= findunit(pc, temp, FIND_UNIT_INVEN, null);
temp:=argument;
    if(item == null)
      {
        exec("say You don't have anything like that, "+pc.name+".", self);
        goto lost;
      }
    if(item.type != UNIT_ST_OBJ)
      {
        exec("say I only auction items, pal.", self);
        goto lost;
      }
exec("say You're sure you want to auction off "+item.title+",
"+pc.name+"?", self);
wait(SFB_DONE, (command("nod") or command("shake")) and (pc ==
activator));
pc:= activator;
  if(command("shake"))
     {
      exec("say Fine.  Make up your mind already.", self);
      goto lost;
     }
  if(command("nod"))
   {
cont:= findunit(self, "auccont", FIND_UNIT_SURRO, null);
temp2:=temp;
item:= findunit(pc,temp, FIND_UNIT_INVEN, null);
temp:=temp2;
   if((cont.weight + item.weight) > cont.capacity)
    {
     exec("say Sorry, I'm out of free space in here.", self);
     exec("shrug", self);
     goto lost;
    }
      link(item, cont);
      addstring(item.names, pc.name);
    act("$1n tags the item and puts it on one of the shelves.", A_ALWAYS,
self, null, pc, TO_VICT);
    act("$1n tags the item and puts it on one of the shelves.", A_ALWAYS,
self, null, pc, TO_NOTVICT);
goto lost;
   }
}
if(command("bid"))
{
temp:=argument;
bidder:= pc;
bname:=bidder.name;
:begin:
cont:= findunit(self, "auccont", FIND_UNIT_SURRO, null);
   if(cont == null)
    {
     exec("say I can't take your request right now.", self);
     goto lost;
    }
cont:= findunit(self, "auccont", FIND_UNIT_SURRO, null);
     bitem := cont.inside;
     while(bitem)
     {
       if(temp in bitem.names)
        {
         goto foundit;
        }
      bitem := (bitem.next);
     }
      exec("say I don't have anything like that up for auction.", self);
      goto lost;
:foundit:
alist:=bitem.names;
if (bname==alist.[length(alist)-1])
{
exec ("say you can't bid on something your selling "+bname+", please have patience I will sell it if I can.",self);
goto lost;
}
exec("say You wish to bid on "+bitem.title+", "+bname+"?", self);
   wait(SFB_DONE, (command("nod") or command("shake")) and (bname
== activator.name));
    bidder := activator;

if(command("shake"))
{
  exec("say Fine then.  Come back when you know what you want to buy.",
self);
  goto lost;
}
if(command("nod"))
{
cont:= findunit(self, "auccont", FIND_UNIT_SURRO, null);
     bitem := cont.inside;
     while(bitem)
     {
       if(temp in bitem.names)
        {
         goto findowner;
        }
      bitem := (bitem.next);
     }
:findowner:
      l := 0;
      alist := bitem.names;
      while(alist.[l] != "")
       {
        l := l + 1;
       }
      owner := alist.[l - 1];

  seller := findunit(self, owner, FIND_UNIT_SURRO, null);
   if(seller == null)
    {
     exec("say The one who gave me this item isn't here.  Can't do "+
          "an auction without that person.", self);
     goto lost;
    }
sname:=seller.name;
     cont := findunit(self, "auccont", FIND_UNIT_SURRO, null);
     bitem := cont.inside;
     while(bitem)
     {
       if(temp in bitem.names)
        {
         goto booty;
        }
      bitem := (bitem.next);
     }

:booty:
exec("say "+sname+", how much do you wanna auction this for?  "+
     "Say something like '10 silver' or '100 gold'.", self);
  wait(SFB_DONE, command("say") and (sname == activator.name));
    price := atoi(argument);
if(price <= 0)
 {
  exec("say Look, I don't just give this stuff away.  I need a "+
       "price to start with.", self);
  pause;
  goto booty;
 }
if("platinum" in argument)
 {
  bidmult := 40960;
  goto cont;
 }
if("gold" in argument)
 {
  bidmult := 5120;
  goto cont;
 }
if("silver" in argument)
 {
  bidmult := 640;
  goto cont;
 }
if("copper" in argument)
 {
  bidmult := 80;
  goto cont;
 }
if("iron" in argument)
 {
  bidmult := 10;
  goto cont;
 }
exec("say Um, "+itoa(price)+" what?  Oranges?  Mumak furs?", self);
exec("sigh", self);
goto booty;

:cont:
firstbid:= price;
bidstr:= moneystring((price*bidmult), 1);
exec("emote steps up to the podium.", self);
     cont := findunit(self, "auccont", FIND_UNIT_SURRO, null);
     bitem := cont.inside;
     while(bitem)
     {
       if(temp in bitem.names)
        {
         goto bootsy;
        }
      bitem := (bitem.next);
     }
:bootsy:
exec("say Folks, up for bidding now is this fine example of "+bitem.title+
     ".  The bidding will start at "+bidstr+".   Just NOD, folks,"+
     " if you want to match the bid.", self);
exec("say "+sname+", you can SHAKE at any time to accept the most "+
     "recent bid.", self);

:bidding:
  wait(SFB_DONE, (command("nod") or command("shake")) and
(activator.type == UNIT_ST_PC));
  pc := activator;
if(command("nod"))
 {
  if(activator.name == sname)
   {
    goto bidding;
   }
  bidder := pc;
  bname := bidder.name;
  goto match;
 }
if(command("shake"))
 {
  if(activator.name != sname)
   {
    goto bidding;
   }
  seller := pc;
  goto sold;
 }
goto bidding;

:match:
exec("say I hear "+bidstr+" from "+bname+".", self);
raise:= 5;
price:= (price + raise);
bidstr:= moneystring((price*bidmult), 1);
exec("say Do I hear "+bidstr+"?  NOD to match, folks.", self);
goto bidding;

:sold:
 {
     cont := findunit(self, "auccont", FIND_UNIT_SURRO, null);
     bitem := cont.inside;
     while(bitem)
     {
       if(temp in bitem.names)
        {
         goto butsy;
        }
      bitem := (bitem.next);
     }
:butsy:
if(price == firstbid)
 {
  exec("say Sorry, "+sname+", but it looks like nobody wants "+
       "to buy "+bitem.title+".", self);
  goto lost;
 }
price:= (price - raise);
bidstr:= moneystring((price*bidmult), 1);
temp2:=bname;
bidder:= findunit(self, temp2, FIND_UNIT_SURRO, null);
  if(bidder == null)
   {
    exec("say Look at that, "+bname+" left.  What a jerk!", self);
    goto lost;
   }
   temp2:=sname;
seller:= findunit(self, temp2, FIND_UNIT_SURRO, null);
  if(seller == null)
   {
    exec("say Look at that, "+sname+" left.  What a jerk!", self);
    goto lost;
   }

  t := transfermoney(bidder, seller, (price*bidmult));
   if(t == FALSE)
    {
     exec("say Hey, "+bidder.name+", you don't have enough money!  Get "+
          "out of my sight!", self);
     goto lost;
    }
  exec("say Sold to "+bidder.name+" for "+bidstr+"!", self);

     cont := findunit(self, "auccont", FIND_UNIT_SURRO, null);
     bitem := cont.inside;
     while(bitem)
     {
       if(temp in bitem.names)
        {
         goto botsy;
        }
      bitem := (bitem.next);
     }
:botsy:
link(bitem, bidder);
act("Roland exchanges the money and the item.", A_ALWAYS, self, null, null,
TO_ALL);
goto lost;
}
}
}

if(command("list"))
 {
  cont := findunit(self, "auccont", FIND_UNIT_SURRO, null);
   if(cont == null)
    {
     exec("say I can't take your request right now.", self);
     goto lost;
    }
act("Items up for auction:", A_ALWAYS, self, null, pc, TO_VICT);
   items := cont.inside;
    if(items == null)
     {
      act("Nothing.", A_ALWAYS, self, null, pc, TO_VICT);
      goto lost;
     }
    while(items)
     {
	 alist:=items.names;
	 log ("Fucking length:  ");
	 log (itoa(length(alist)));
      owner := alist.[length(alist)-1];
      act(""+items.title+" ("+owner+")", A_ALWAYS, self, null, pc,
TO_VICT);
      items := items.next;
     }
 }
:lost:
unsecure(pc);
goto start;
}
dilend

end

/* ------------------------ The law! -------------------------- */

                           adolf

names {"captain", "Adolf"}
title "the captain"
descr "Adolf the Captain of the guard is here."
extra {}
"He looks like a tall, muscular, athletic fighter. You notice that there is
an electric blue aura around his black eyes."

romflags {CHAR_PROTECTED, CHAR_DETECT_INVISIBLE}
M_HUMAN_WARRIOR_SWORD(70, SEX_MALE)
alignment 1000
exp -500
dilcopy reward_give@function();
special SFUN_WHISTLE
dilcopy rescue@function("cityguard / captain / thargarad / kazeem / daf ");
special SFUN_PROTECT_LAWFUL time PULSE_SEC*60 bits SFB_RANTIME
special SFUN_ACCUSE "udgaard/accuse_room"
dilcopy guard_dir@function("south", {""}, {""}, "");
dilcopy guard_door@function(SOUTH,
"$1n stops you.",
"$1n prevents $3n from accessing the steel door.");
dilcopy guard_unit@function("safe@udgaard","$1n stops you.","$1n prevents $3n from accessing the safe.");
dilcopy captain@midgaard("jail@udgaard");

end


                           tower_guard

names {"cityguard","guard"}
title "the cityguard"
descr "A cityguard is here."
extra {}
"A big, strong, helpful, trustworthy guard.  He looks as though he's keeping
an eye on the townsfolk."

romflags {CHAR_PROTECTED}
M_HUMAN_WARRIOR_SWORD(60, SEX_MALE)
exp -400
alignment 400  /* Just above neutral */
money 3 IRON_PIECE

special SFUN_WHISTLE
dilcopy rescue@function("cityguard / captain / thargarad / kazeem / daf");
special SFUN_PROTECT_LAWFUL time PULSE_SEC*60 bits SFB_RANTIME
dilcopy arrest_check@midgaard("accuse_room@udgaard");

end


                           patrol_guard

names {"cityguard","guard"}
title "the cityguard"
descr "A cityguard is here."
extra {}
"A big, strong, helpful, trustworthy guard.  He looks as though he's keeping
an eye on the townsfolk."

romflags {CHAR_PROTECTED}
M_HUMAN_WARRIOR_SWORD(55, SEX_MALE)
exp -400
alignment 400  /* Just above neutral */
money 3 IRON_PIECE

special SFUN_WHISTLE
dilcopy rescue@function("cityguard / captain / mayor / kazeem / daf ");
special SFUN_PROTECT_LAWFUL time PULSE_SEC*60 bits SFB_RANTIME
dilcopy arrest_check@midgaard("accuse_room@udgaard");
dilcopy wander_zones@function("udgaard", 15, 1, 0);

end

                             sent_guard
/* This guard is supposed to guard various shopkeepers, i.e. Banker */

names {"cityguard","guard"}
title "the cityguard"
descr "A cityguard is here."
extra {} "A fairly big, content looking cityguard."

romflags {CHAR_PROTECTED}
M_HUMAN_WARRIOR_POLE(62, SEX_MALE)
exp -200
alignment 400  /* Just above neutral */
money 7 IRON_PIECE

special SFUN_WHISTLE
dilcopy rescue@function("guard / captain / thargarad / kazeem / daf / cityguard");
special SFUN_PROTECT_LAWFUL time PULSE_SEC*60 bits SFB_RANTIME
dilcopy arrest_check@midgaard("accuse_room@udgaard");

end

/* ----------------- the mayor and his escorts --------------- */


                     mayor

names {"thargarad","mayor"}
title "Thargarad the Mayor of Udgaard"
descr "Thargarad the Mayor of Udgaard walks about greeting people."
extra {}
"The Mayor is a large Dwarf who walks about the town with well
established ease.  He seems to know everyone, and greets them
cheerfully as he goes about his rounds.  However nice his exterior
appears, you can tell that he has a hardened edge beneath, and it
would be unwise to trifle with him.  The large axe in his belt bears
witness to this."

romflags {CHAR_PROTECTED}
flags {UNIT_FL_NO_TELEPORT}
M_DWARF_WARRIOR_AXE(120, SEX_MALE)
exp -300
alignment 650
money 6 GOLD_PIECE
special SFUN_WHISTLE
dilcopy rescue@function("quenis/ariana/nestor/morgan");
dilcopy teamwork@function("morgan/quenis/ariana/nestor");
dilbegin kill_chance0(); /* Stop newbies committing suicide */

var
    perp : unitptr;

code
{
:start:
    wait(SFB_CMD,command("kill"));
    perp := activator;
    secure(perp,lost);

       if ((findunit(activator,argument,FIND_UNIT_SURRO,null)==self) and
(perp.level < 25))
       {
        block;
        exec("say " + perp.name + ", you can't kill me, so don't be
foolish.", self);
        exec("spank " + perp.name, self);
        goto start;
       }
    goto start;

:lost:
    unsecure(perp);
    goto start;
}
dilend /* kill_chance */


end

                        hgmage

names {"ariana","guard"}
title "Ariana the conjurer guard"
descr "Ariana the conjurer guard is escorting the Mayor on his rounds."
extra {}
"Ariana has been studying the mystical arts for some time now, and it
is quite an honor to be placed as escort to the mayor.  She has fair
blonde hair and deep blue eyes.  You think perhaps that you should
let both her and the mayor about their business."

romflags {CHAR_PROTECTED}
flags {UNIT_FL_NO_TELEPORT}
M_GNOME_MAGE_ACID(100, SEX_FEMALE, "cast acid ball")
exp -300
alignment 650
money 1 GOLD_PIECE
special SFUN_WHISTLE
dilcopy rescue@function("thargarad/nestor/morgan/quenis");
dilcopy teamwork@function("thargarad/nestor/morgan/quenis");
dilbegin kill_chance1(); /* Stop newbies committing suicide */

var
    perp : unitptr;

code
{
:start:
    wait(SFB_CMD,command("kill"));
    perp := activator;
    secure(perp,lost);

       if ((findunit(activator,argument,FIND_UNIT_SURRO,null)==self) and
(perp.level < 25))
       {
        block;
        exec("say " + perp.name + ", you can't kill me, so don't be
foolish.", self);
        exec("spank " + perp.name, self);
        goto start;
       }
    goto start;

:lost:
    unsecure(perp);
    goto start;
}
dilend /* kill_chance */

end

                        hghealer

names {"quenis","guard"}
title "Quenis the healer guard"
descr "Quenis the healer guard is escorting the Mayor on his rounds."
extra {}
"Quenis is an accomplished healer whose task is to protect the mayor
from harm.  He has a gleam in his eyes, and there is something all
too knowing in his glance.  He is a tall elf, and loves the duties which
he must fulfill."

romflags {CHAR_PROTECTED}
flags {UNIT_FL_NO_TELEPORT}
M_ELF_CLERIC_HAMMER(100, SEX_MALE, "cast harm", "cast heal")
exp -100
alignment 650
money 2 GOLD_PIECE
special SFUN_WHISTLE
dilcopy rescue@function("thargarad/morgan/ariana/nestor");
dilcopy teamwork@function("thargarad/morgan/ariana/nestor");
dilbegin kill_chance2(); /* Stop newbies committing suicide */

var
    perp : unitptr;

code
{
:start:
    wait(SFB_CMD,command("kill"));
    perp := activator;
    secure(perp,lost);

       if ((findunit(activator,argument,FIND_UNIT_SURRO,null)==self) and
(perp.level < 25))
       {
        block;
        exec("say " + perp.name + ", you can't kill me, so don't be
foolish.", self);
        exec("spank " + perp.name, self);
        goto start;
       }
    goto start;

:lost:
    unsecure(perp);
    goto start;
}
dilend /* kill_chance */

end

hgthief
names {"morgan", "thief guard", "guard", "thief"}
title "Morgan the thief guard"
descr "Morgan the thief guard is escorting the Mayor on his rounds."
extra {}
"Morgan is a master thief who has hired himself out in the honorable
duty of protecting Thargarad, the Mayor of Udgaard."
M_HALFLING_THIEF_SWORD(100, SEX_MALE)
romflags {CHAR_PROTECTED}
flags {UNIT_FL_NO_TELEPORT}
special SFUN_WHISTLE
dilcopy rescue@function("thargarad/quenis/ariana/nestor");
dilcopy teamwork@function("thargarad/quenis/ariana/nestor");
dilbegin kill_chance3(); /* Stop newbies committing suicide */

var
    perp : unitptr;

code
{
:start:
    wait(SFB_CMD,command("kill"));
    perp := activator;
    secure(perp,lost);

       if ((findunit(activator,argument,FIND_UNIT_SURRO,null)==self) and
(perp.level < 25))
       {
        block;
        exec("say " + perp.name + ", you can't kill me, so don't be
foolish.", self);
        exec("spank " + perp.name, self);
        goto start;
       }
    goto start;

:lost:
    unsecure(perp);
    goto start;
}
dilend /* kill_chance */

end

hgfighter
names {"nestor", "fighter guard", "guard", "fighter"}
title "Nestor the fighter guard"
descr "Nestor the fighter guard is escorting the Mayor on his rounds."
extra {}
"Nestor is a master fighter who has hired himself out in the honorable
duty of protecting Thargarad, the Mayor of Udgaard."
M_HUMAN_WARRIOR_SWORD(100, SEX_MALE)
flags {UNIT_FL_NO_TELEPORT}
romflags {CHAR_PROTECTED}
special SFUN_WHISTLE
dilcopy rescue@function("thargarad/quenis/ariana/morgan");
dilcopy teamwork@function("thargarad/quenis/ariana/morgan");
dilbegin kill_chance4(); /* Stop newbies committing suicide */

var
    perp : unitptr;

code
{
:start:
    wait(SFB_CMD,command("kill"));
    perp := activator;
    secure(perp,lost);

       if ((findunit(activator,argument,FIND_UNIT_SURRO,null)==self) and
(perp.level < 25))
       {
        block;
        exec("say " + perp.name + ", you can't kill me, so don't be
foolish.", self);
        exec("spank " + perp.name, self);
        goto start;
       }
    goto start;

:lost:
    unsecure(perp);
    goto start;
}
dilend /* kill_chance */

end


                bthief
names {"filthy young boy","young boy","thief", "boy"}
title "a filthy young boy"
descr "A filthy young boy dressed in rags is moving about in the shadows."
extra {}
"The young lad looks to be in his early teens. His hands are as fast as
a whip, you had better check you have all your belongings."
M_HUMAN_THIEF_SWORD(6, SEX_MALE)
alignment -100
money 4 IRON_PIECE

end

                bthief1
names {"skinny lad","thief","lad","boy"}
title "a skinny lad"
descr "A skinny lad eyes your purse as he stands in the shadows."
extra {}
"The teen is dressed in little more then rags with a hollow empty look to
his face. It obvious that the only way this young lad can survive is to
help himself to others belongings"
M_HUMAN_THIEF_SWORD(4, SEX_MALE)
MSET_WEAPON(10,15,15,10,25,10)
alignment 0
money 4 IRON_PIECE

end

                gthief
names {"filthy young girl","young girl","thief", "girl"}
title "a filthy young girl"
descr "A young filthy girl is eagerly eyeing your belongings."
extra {}
"The young girl looks to be in her early teens. She is eagerly eyeing your
stuff, better watch out!"
M_HUMAN_THIEF_SWORD(3, SEX_FEMALE)
alignment -200
money 5 IRON_PIECE

end

                gthief1
names {"young girl","girl","thief"}
title "a young girl"
descr "A young girl eyes your possessions."
extra {}
"The young girl looks to be in her early teens. As you move bye her eyes
follow you, taking in every last item of value that you may be carrying."
M_HUMAN_THIEF_CLUB(5, SEX_FEMALE) alignment -200
money 5 IRON_PIECE

end

                bwarrior
names {"young warrior","warrior","boy"}
title "a young warrior"
descr "A young warrior is here practicing his sword thrusts."
extra {}
"The young warrior looks to be in his early teens. He already ripples
with huge muscles from wielding heavy swords."
M_HUMAN_WARRIOR_SWORD(5, SEX_MALE)
alignment 100
money 3 IRON_PIECE

end

                bwarrior1
names {"young warrior","warrior","boy"}
title "a young warrior"
descr "A young warrior practises his axe skills on nearby trees."
extra {}
"A young, warrior has huge arms, obviously from heaving that huge axe
about."
M_HUMAN_WARRIOR_AXE(6, SEX_MALE)
alignment 300
money 4 IRON_PIECE

end

                gwarrior
names {"young girl","swordswoman", "girl"}
title "a young girl"
descr "A young girl is here practicing her sword skills."
extra {}
"The young warrior looks to be in her early teens. Her body is solid and
muscular, obviously from wielding heavy swords. "
M_HUMAN_WARRIOR_SWORD(4, SEX_FEMALE)
alignment 100
money 5 IRON_PIECE

end

                gwarrior1
names {"young girl","warrior", "girl"}
title "a young girl"
descr "A young girl is here charges a tree with her sword drawn."
extra {}
"The young warrior looks to be in her early teens, with dark hair and
muscular arms."
M_HUMAN_WARRIOR_SWORD(5, SEX_FEMALE)
alignment 100
money 3 IRON_PIECE

end

                bmage
names {"young conjurer","conjurer","mage","student","boy"}
title "a young conjurer"
descr "A young conjurer is here summoning up energy bolt."
extra {}
"The young conjurer is throwing energy bolt at imaginary foes."
M_HUMAN_MAGE_FIRE(4, SEX_MALE, "energy bolt")
alignment 0
money 3 IRON_PIECE

end

                bmage1
names {"young conjurer","conjurer","mage", "man","boy"}
title "a young conjurer"
descr "A young conjurer is trying to move a large rock with his will."
extra {}
"The young conjurer is trying to move a HUGE rock with the 'word' and the
'will'."
M_HUMAN_MAGE_FIRE(4, SEX_MALE, "energy bolt")
alignment 200
money 3 IRON_PIECE

end

                fmage
names {"young conjurer","conjurer","mage", "woman","girl"}
title "a young conjurer"
descr "A young conjurer is practicing the will and the word."
extra {}
"The young conjurer is attempting to create a magic candle."
M_HUMAN_MAGE_FIRE(4, SEX_MALE, "energy bolt")
alignment 500
money 8 IRON_PIECE

end

                fmage1
names {"young conjurer","conjurer","mage", "woman","girl"}
title "a young conjurer"
descr "A young conjurer is trying to make herself invisible."
extra {}
"The conjurer is attempting to make herself invisible."
M_HUMAN_MAGE_FIRE(4, SEX_FEMALE, "energy bolt")
alignment 200
money 3 IRON_PIECE

end

                bhealer
names {"young healer","healer","man","boy"}
title "a young healer"
descr "A young healer is here trying to learn how to cure wounds."
extra {}
"The young healer is trying to learn how to cure wounds."
M_HUMAN_CLERIC_HAMMER(4, SEX_MALE, "cause light", "cure light")
alignment 700
money 3 IRON_PIECE

end

                bhealer1
names {"young healer","healer", "man","boy"}
title "a young healer"
descr "A young healer is here trying to turn his skin to bark "
extra {}
"The young healer is trying to cast bark skin."
M_HUMAN_CLERIC_HAMMER(5, SEX_MALE,"cause light","cure light")
alignment 500
money 4 IRON_PIECE

end

                fhealer
names {"young healer","cleric","healer","girl"}
title "a young healer"
descr "A young healer is here trying to create a healing rain."
extra {}
"The young healer is trying to cast summer rain."
M_HUMAN_CLERIC_HAMMER(3, SEX_FEMALE, "cause light", "cure light")
alignment 600
money 3 IRON_PIECE

end

                fhealer1
names {"young healer","cleric","healer", "girl"}
title "a young healer"
descr "A young healer is sitting under a tree, contemplating life. "
extra {}
"The  young healer is sitting under a tree, contemplating life. "
M_HUMAN_CLERIC_HAMMER(6, SEX_FEMALE, "cause light", "cure light")
alignment 700
money 5 IRON_PIECE

end

/* --------------------- GUILD SHOPS MOBILES ------------------- */

/* --------------------- MAGES TAILOR ----------------- */
                winky
names {"Mr Winky","winky","tailor"}
title "Mr Winky"
descr "Mr Winky walks around here, taking care of the merchandise."
extra {}
"A small, round man, Mr Winky is the tailor of the Conjurers. It is said
that his clothes don't lose facon even after the heaviest spell fumbles."
M_SHOP_KEEPER(33,SEX_MALE,RACE_HUMAN)
flags {UNIT_FL_NO_TELEPORT}
money 10 COPPER_PIECE
alignment 850
dilcopy shopkeeper@function(
{"wide_hat@mageguild 1 10","wiz_staff@mageguild 1 10"
,"wiz_dagger@mageguild 1 10","signet_ring@mageguild 2 15"
,"scrollcase@mageguild 2 16","conjurer_robe@mageguild 1 16"
,"pointy_boots@mageguild 2 16"},
 { "$1n says, 'I am sorry, I am out of those, $3n.'",
   "$1n says, 'Sell me what, $3n?'",
   "$1n says, 'I have no use for this, sorry.'",
   "$1n exclaims, 'Uhm, no credit, $3n!'",
   "$1n says, 'This $2N is all yours, $3n.'",
   "$1n says, 'Excellent, it's a deal, $3n.'",
   "$1n sighs and says, 'I don't seem to have that many in my
stock'",
   "$1n asks, 'I'm having a quick lunch, can you drop by later?'" },
{"13","12"},"2 3 4 5 8 9 10 11 12 23 24 25",100,30,81920,"",""
);

end

/* --------------------- THIEVES FENCE ---------------- */
  thief_fence
names {"Ratling","fence","person","man","thief"}
title "Ratling the fence"
descr "A person of apparent low moral fiber looks like he might be
fencing something."
extra {}
"A typical low-life from the poorer part of Udgaard, Ratling is small,
unshaven and smelly. His nervous eyes keep darting from shadow to shadow
and he regards you with even higher suspicion than you regard him. He
might be the right person to ask if you want to buy second-hand wares in
this village."
M_AVG_HUMAN(30,SEX_MALE)
alignment -250
exp 100
romflags {CHAR_WIMPY}
flags {UNIT_FL_NO_TELEPORT}
money 2 COPPER_PIECE

dilcopy shopkeeper@function(
{"dirk@udgaard 10 15","lockpick@udgaard 10 20",
"facemask@udgaard 10 15","blk_hood_cloak@udgaard 5 15"},
{
 "$1n shakes his head 'Ah no trade 'ose, $3n.'",
 "$1n scowls 'Don't try to cheat a honest peddler, $3n!'",
 "$1n shakes his head quickly 'Ah'm not dealin' in this, too hot.'",
 "$1n scowls 'Eez no gift-shop here $3n, pay or beat it.'",
 "$1n says 'Deal, $3n' as the goods change the owner.",
 "$1n peers nervously around as the goods change the owner.",
 "$1n scratches his head 'Ah'll surely have some of that later on,
$3n.'",
 "$1n frowns 'Not now, $3n, ah'm waitin' fer me contact..!'"
  },{"1","24"}, "1 2 5 6 7 8 9 10 11 12 14 15 16 17 20 23 24 25",
 100, 90, 81920,"", "");


end

/* --------------------- HEALER SELLER ---------------- */
  talismonger
names {"Roskva","talismonger","woman","shopkeeper","keeper"}
title "Roskva the Talismonger"
descr "Roskva the Talismonger is preparing some charm for needy
adventurers."
extra {}
"Not in her first youth, Roskva looks like a good-natured woman with the
strong body and healthy complexion that can only come from spending a lot
of time outdoors."
M_SHOP_KEEPER(35,SEX_FEMALE,RACE_HUMAN)
flags {UNIT_FL_NO_TELEPORT}
money 3 IRON_PIECE

dilcopy opening_hours@function({4,22}, {"list", "buy", "sell", "value", "request"}, 
                                "say Sorry we're closed", 
                                {"wake","stand","say We're open for business"},
                                {"rest", "say I'm closed, come back at 4am"});


dilcopy shopkeeper@function(
{"holywater@udgaard 5 20","prot_talisman@udgaard 5 20",
"holycharm@udgaard 5 15","heal_herbs@udgaard 5 10",
"heal_balm@udgaard 5 10","holybook@udgaard 5 20",
"aid_kit@udgaard 5 15"},
{
 "$1n smiles 'I don't trade with those, $3n!'",
 "$1n smiles 'You don't have any such thing, $3n!'",
 "$1n smiles 'I don't buy such stuff, $3n!'",
 "$1n smiles 'I hate to tell you, but you lack money, $3n.'",
 "$1n smiles 'A great buy, $3n!'",
 "$1n smiles 'It's a deal, $3n!'",
 "$1n smiles 'I don't have any in stock right now, try later $3n!'",
 "$1n smiles 'I am working on more charms, try later, $3n!'"
  },{"4","22"}, "1 2 3 4 8 10 12 23 24", 100, 70, 81920,"", "" );

dilbegin ask_keeper2();
code
{
on_activation(self.position==POSITION_FIGHTING,skip);

        :start:
wait(SFB_DONE,command("ask")and(target==self)and(argument));
if ("talisman" in argument)
{
exec("smile",self);
exec("say I've crafted those protective talismans for many adventurers, "+
"they will protect you from dangers of the road.",self);
goto start;
}
if ("charm" in argument)
{
exec("say Holy charms? Every pious believer should have one!",self);
goto start;
}
if ("book" in argument)
{
exec("say Oh, the holy writings. No man of the church should be without
one."
,self);
exec("nod",self);
goto start;
}
if (("water" in argument)or("vial" in argument))
{
exec("say The holy water can be used to give a blessing or to destroy the "+
"foul monstrosities of undead.",self);
exec("say Just sprinkle the person in question... but only those "+
"of the faith will be able to make it work properly.",self);
goto start;
}
if (("herbs" in argument)or("bunch" in argument))
{
exec("smile",self);
exec("say Those herbs have very weak healing powers and can aid you if "+
"you eat them.",self);
goto start;
}
if (("balm" in argument)or("jug" in argument))
{
exec("say This balm is my own recipe - it can save a man dying of his "+
"wounds!",self);
exec("say If you are skilled in the arts of first aid, simply hold the jar
"+
"before treating the patient.",self);
exec("strut",self);
goto start;
}
if (("kit" in argument)or("aid" in argument))
{
exec("smile ",self);
exec("say A first aid kit, a must for any good healer!",self);
goto start;
}
exec("say Uhm, are you sure you saw this in my shop?",self);
goto start;
}
dilend

end

/* ---------------------- OUTDOORS STUFF SELLER ------------ */

                thorbjorn
names {"Thorbjorn","shopkeeper","keeper","hunter"}
title "Thorbjorn"
descr "Thorbjorn waits here, watching you suspiciously."
extra {}
"His rugged hands and stout build witness his past as a hunter. He knows
the outdoors better than anyone else."
M_SHOP_KEEPER(35,SEX_MALE,RACE_HUMAN)
flags {UNIT_FL_NO_TELEPORT}
money 3 IRON_PIECE

dilcopy shopkeeper@function(
{"small_tent@udgaard 10 15","large_tent@udgaard 5 15",
"r_grapnel@udgaard 10 20","blanket@udgaard 5 20",
"backpack@udgaard 10 20"},
{
 "$1n shakes his head 'I don't sell that, $3n.'",
 "$1n frowns 'Sell me what, $3n?'",
 "$1n shakes his head 'I don't buy that, $3n.'",
 "$1n shakes his head 'Nothing is for free, $3n.'",
 "$1n nods 'A great buy, it's gonna last you ages, $3n.'",
 "$1n says 'It's a deal, $3n.'",
 "$1n says 'I am out of this, but should be getting supplies soon,
$3n.'",
 "$1n says 'It's my time off, $3n, try again later.'"
  },{"1","24"}, "1 5 6 7 8 12 14 15 22 25", 100, 50,81920,"","" );

dilbegin ask_keeper1();
code
{
on_activation(self.position==POSITION_FIGHTING,skip);

        :start:
wait(SFB_DONE,command("ask")and(target==self)and(argument));
if ("tent" in argument)
{
exec("say Aaah... the tents are some of the best... You can pinch them "+
"virtually everywhere for a bit of privacy or shelter from the elements."
,self);
exec("say The small tent can house only a few people, buy the large "+
"one for added space.",self); goto start;
}
if ("backpack" in argument)
{
exec("say An excellent backpack, sturdy and weatherproof.",self);
goto start;
}
if ("blanket" in argument)
{
exec("say A warm blanket, the best friend out in the cold
wilderness.",self);
goto start;
}
if (("grapnel" in argument)or("rope" in argument))
{
exec("say Ah, a length of rope with a grapnel, you never know when you "+
"need to climb something!",self);
goto start;
}
else
{
exec("say Uhm... I don't think I have this in my stock...",self);
exec("scratch",self);
goto start;
}
goto start;
}
dilend

end

/* ---------------------- TOBACCO SELLER ------------------- */
  tobacco_seller
names {"Mr Catherfield","catherfield","seller","tobacco seller","man"}
title "Mr Catherfield"
descr "A small, wizened man regards you suspiciously from above his
glasses."
extra {}
"A small, elderly man, Mr Catherfield has been selling tobacco all his
life, boy and man. He regards you suspiciously from above his glasses,
apparently he doesn't like your kind in here."
M_SHOP_KEEPER(38,SEX_MALE,RACE_HUMAN)
flags {UNIT_FL_NO_TELEPORT}
money 5 COPPER_PIECE

dilcopy opening_hours@function({5,23}, {"list", "buy", "sell", "value", "request"}, 
                                "say Sorry we're closed", 
                                {"wake","stand","say We're open for business"},
                                {"rest", "say I'm closed, come back at 5am"});


dilcopy shopkeeper@function(
{"carved_pipe@udgaard 5 15","large_pipe@udgaard 10 20",
"small_pipe@udgaard 10 20","tobacco_aroma@udgaard 15 30",
"tobacco_cheap@udgaard 15 30","long_cigar@udgaard 10 30",
"slick_cigar@udgaard 10 30","fat_cigar@udgaard 20 40",
"cheap_cigar@udgaard 20 40"},
{
 "$1n sighs 'I am most terribly sorry, I don't trade those, $3n.'",
 "$1n says 'Trying to sell me something you don't have, $3n?'",
 "$1n shakes his head 'I only sell tobacco, $3n.'",
 "$1n rolls his eyes 'I only sell my wares to people who can afford it,
$3n.'",
 "$1n says 'A $2N for you, $3n. Top quality.'",
 "$1n says 'Deal, $3n.'",
 "$1n sighs 'I am most terribly sorry, we don't have as much for the
moment, $3n.'",
 "$1n says 'My pardons, I am on my break, could you care to step in
later?'"
  },{"5","23"}, "1", 100, 50,81920,"", "");

dilbegin ask_keeper3();
var
s: string;
code
{
on_activation(self.position==POSITION_FIGHTING,skip);

        :start:
wait(SFB_DONE,command("ask")and(target==self)and(argument));
if ((activator.sex==SEX_MALE)or(activator.sex==SEX_NEUTRAL)) s:="sir";
if (activator.sex==SEX_FEMALE) s:="madam";
if ("pipe" in argument)
{
exec("smile",self);
exec("say Aaah, my pipes are of the best quality, guaranteeing hours of "+
"smoking pleasure, "+s+".",self);
goto start;
}
if(("pouch"in argument)or("tobacco" in argument))
{
exec("emote nods slightly.",self);
exec("say Only the finest of the gnomish tobacco sorts are used for my "+
"blends, "+s+".",self);
goto start;
}
if ("cigar" in argument)
{
exec("say Manufactured of the best tobacco leaves available, I have "+
"cigars in every price category.",self);
exec("whisper "+activator.name+" ...although I might suggest the fine "+
"cigars myself, "+s+".",self);
exec("say The enjoyment is unsurpassed.",self);
exec("emote smiles slightly.",self);
goto start;
}
exec("say Uhm, are you sure, you saw it in my store, "+s+"?",self);
goto start;
}
dilend
end

/* =================== BASIC TEACHERS ======================= */


               base_abils
names {"Rune"}
title "Rune the teacher"
descr "Rune the ability teacher is here."
M_SHOP_KEEPER(35,SEX_MALE,RACE_HUMAN)
flags {UNIT_FL_NO_TELEPORT}
money 3 IRON_PIECE
extra {} 
"Rune is here to teach you abilities. Try the <a cmd='#'>info</a> command."

special SFUN_TEACH_INIT
"abilities;;
$1n tells you, 'I have never heard of such an ability.';
$1n tells you, 'I do not know how to teach this ability.';
$1n tells you, 'You haven't got %s for me.';
$1n tells you, 'You haven't got %d ability points.';
$1n tells you, 'I can not teach you any more';
$1n tells you, 'You must be unaffected by magic, otherwise I can't teach you.';
$1n tells you, 'Remove all equipment, please.';

  0;   35; Strength                      ;   5;  9000;  10;       0;
  0;   35; Dexterity                     ;   5;  4000;  10;       0;
  0;   35; Constitution                  ;   5; 14000;  10;       0;
  0;   35; Hitpoints                     ;   5; 14000;  10;       0;
  0;   35; Charisma                      ;   5; 14000;  10;       0;
  0;   35; Brain                         ;   5; 14000;  10;       0;
  0;   35; Magic                         ;   5; 23000;  10;       0;
  0;   35; Divine                        ;   5;  4000;  10;       0;"
end


               base_skills
names {"Gustav"}
title "Gustav the teacher"
descr "Gustav the skill teacher is here."
M_SHOP_KEEPER(35,SEX_MALE,RACE_HUMAN)
flags {UNIT_FL_NO_TELEPORT}
extra {} 
"Gustav is here to teach you skills. Try the <a cmd='#'>info</a> command."
money 3 IRON_PIECE
special SFUN_TEACH_INIT
"skills;;
$1n tells you, 'I have never heard of such a skill.';
$1n tells you, 'I do not know how to teach this skill.';
$1n tells you, 'You haven't got %s for me.';
$1n tells you, 'You haven't got %d skill points.';
$1n tells you, 'I can not teach you any more';
$1n tells you, 'You must be unaffected by magic, otherwise I can't teach you';
$1n tells you, 'Remove all equipment, please.';

  0;   35; backstab                      ;   5;  4000;   10;      0;
  0;   35; bash                          ;   5;  9000;   10;      0;
  0;   35; climb                         ;   5; 14000;   10;      0;
  0;   35; consider                      ;   5;  9000;   10;      0;
  0;   35; diagnostics                   ;   5;  4000;   10;      0;
  0;   35; first aid                     ;   5;  4000;   10;      0;
  0;   35; fleeing                       ;   5; 14000;   10;      0;
  0;   35; hide                          ;   5;  4000;   10;      0;
  0;   35; herbs                         ;   5;  4000;   10;      0;
  0;   35; search                        ;   5;  4000;   10;      0;
  0;   35; shield                        ;   5;  9000;   10;      0;
  0;   35; rescue                        ;   5;  4000;   10;      0;
  0;   35; scan                          ;   5;  9000;   10;      0;
  0;   35; sneak                         ;   5;  9000;   10;      0;
  0;   35; skin                          ;   5;  9000;   10;      0;
  0;   35; scroll use                    ;   4;  4000;   10;      0;
  0;   35; swimming                      ;   5; 14000;   10;      0;
  0;   35; wand use                      ;   4;  4000;   10;      0;
  0;   35; armor soft leather            ;   4;  4000;   10;      0;
  0;   35; armor hard leather            ;   4;  4000;   10;      0;
  0;   35; armor chain                   ;   4;  4000;   10;      0;
  0;   35; armor plate                   ;   4;  4000;   10;      0;"
end


               base_weapons
names {"Tue Ironside", "Tue"}
title "Tue Ironside the teacher"
descr "Tue Ironside the weapons teacher is here."
M_SHOP_KEEPER(35,SEX_MALE,RACE_HUMAN)
extra {} 
"Tue Ironside is here to teach you weapons. Try the <a cmd='#'>info</a> command."
flags {UNIT_FL_NO_TELEPORT}
money 3 IRON_PIECE
special SFUN_TEACH_INIT
"weapons;;
$1n tells you, 'I have never heard of such a weapon.';
$1n tells you, 'I do not know how to teach that weapon.';
$1n tells you, 'You haven't got %s for me.';
$1n tells you, 'You haven't got %d skill points.';
$1n tells you, 'I can not teach you any more.';
$1n tells you, 'You must be unaffected by magic, otherwise I can't teach you';
$1n tells you, 'Remove all equipment, please.';

  0;   35; fist                          ;   4;  4000;  10;          0;
  0;   35; dagger                        ;   4;  4000;  10;          0;
  0;   35; sling                         ;   4;  4000;  10;          0;
  0;   35; hand axe                      ;   9;  9000;  10;          0;
  0;   35; long sword                    ;   9;  9000;  10;          0;
  0;   35; short sword                   ;   9;  9000;  10;          0;
  0;   35; quarterstaff                  ;   9;  9000;  10;          0;
  0;   35; mace                          ;   9;  9000;  10;          0;"
end

               base_spells
names {"Kåre", "Kaare"}
title "Kaare the teacher"
descr "Kaare the spells teacher is here."
extra {} 
"Kåre is here to teach you spells. Try the <a cmd='#'>info</a> command."
M_SHOP_KEEPER(35,SEX_MALE,RACE_HUMAN)
flags {UNIT_FL_NO_TELEPORT}
money 3 IRON_PIECE
special SFUN_TEACH_INIT
"spells;;
$1n tells you, 'I have never heard of such magic.';
$1n tells you, 'I do not know how to teach this kind of magic.';
$1n tells you, 'You have not got %s for me.';
$1n tells you, 'You have not got %d skill points.';
$1n tells you, 'I can not teach you any more, find a better teacher!';
$1n tells you, 'You must be unaffected by magic, otherwise I can't teach you';
$1n tells you, 'Remove all equipment, please.';

  0;   35; burn                          ;   4;  4000;   5;          0;
  0;   35; calm                          ;   4;  4000;   5;          0;
  0;   35; cure light wounds             ;   4;  4000;   5;          0;
  0;   35; cause light wounds            ;   4;  4000;   5;          0;
  0;   35; detect undead                 ;   4;  4000;   5;          0;
  0;   35; detect alignment              ;   4;  4000;   5;          0;
  0;   35; detect magic                  ;   4;  4000;   5;          0;
  0;   35; electrical shock              ;   4;  4000;   5;          0;
  0;   35; energy bolt                   ;   4;  4000;   5;          0;
  0;   35; fart                          ;   4;  4000;   5;          0;
  0;   35; mire                          ;   4;  4000;   5;          0;
  0;   35; protection from good          ;   4;  4000;   8;          0;
  0;   35; raise divine                  ;   4;  4000;   8;          0;
  0;   35; raise magic                   ;   4;  4000;   5;          0;
  0;   35; sense life                    ;   4;  4000;   5;          0;
  0;   35; thorn strike                  ;   4;  4000;   5;          0;"
end

%reset
/*
remove trader@udgaard in trading_post@udgaard
*/
load trader into trading_post max 1
 {
    equip lth_cap@midgaard WEAR_HEAD
    equip lth_gloves@midgaard WEAR_HANDS
    equip lth_sleeves@midgaard WEAR_ARMS
    equip lth_jerkin@midgaard WEAR_BODY
    equip lth_pants@midgaard WEAR_LEGS
    equip lth_boots@midgaard WEAR_FEET

 }

load healer@g_q into heal_room max 1
{
     equip go_boots position WEAR_FEET
     equip crown position WEAR_HEAD
	 equip healer_arms position WEAR_ARMS
     equip healer_pants position WEAR_LEGS
     equip healer_tunic position WEAR_BODY
     equip mayor_cloak position WEAR_ABOUT

}
load chat_board@garden into inn_2

load ud_clerk into ud_storage@udgaard max 1
{
    equip lth_cap@midgaard WEAR_HEAD
    equip lth_gloves@midgaard WEAR_HANDS
    equip lth_sleeves@midgaard WEAR_ARMS
    equip lth_jerkin@midgaard WEAR_BODY
    equip lth_pants@midgaard WEAR_LEGS
    equip lth_boots@midgaard WEAR_FEET

}

/*
load bwarrior into fighters_way1 local 1
{
equip fighter_helmet position WEAR_HEAD
equip wd_plate position WEAR_BODY
equip fighter_bands position WEAR_ARMS
equip fighter_sword position WEAR_WIELD
equip wd_pants position WEAR_LEGS
equip go_boots position WEAR_FEET
}
load bwarrior1 into fighters_way2 local 1
{
equip fighter_helmet position WEAR_HEAD
equip wd_plate position WEAR_BODY
equip wood_buckler position WEAR_SHIELD
equip hand_axe position WEAR_WIELD
equip midgaard/lth_pants position WEAR_LEGS
equip midgaard/scale_boots position WEAR_FEET
}
load bwarrior into fighters_way2 local 1
{
equip fighter_helmet position WEAR_HEAD
equip wd_plate position WEAR_BODY
equip wood_buckler position WEAR_SHIELD
equip fighter_sword position WEAR_WIELD
equip fighter_leg position WEAR_LEGS
equip midgaard/scale_boots position WEAR_FEET
}
load bwarrior1 into fighters_way3 local 1
{
equip hand_axe position WEAR_WIELD
equip fighter_helmet position WEAR_HEAD
equip wd_plate position WEAR_BODY
equip wood_buckler position WEAR_SHIELD
equip wd_pants position WEAR_LEGS
equip midgaard/scale_boots position WEAR_FEET
}
load gwarrior into fighters_way1 local 1
{
equip fighter_sword position WEAR_WIELD
equip fighter_helmet position WEAR_HEAD
equip wd_plate position WEAR_BODY
equip wd_pants position WEAR_LEGS
equip midgaard/scale_boots position WEAR_FEET
}
load gwarrior into fighters_way1 local 1
{
equip fighter_sword position WEAR_WIELD
equip fighter_helmet position WEAR_HEAD
equip wd_plate position WEAR_BODY
equip wd_pants position WEAR_LEGS
equip midgaard/scale_boots position WEAR_FEET
}
load gwarrior1 into fighters_way2 local 1
{
equip fighter_helmet position WEAR_HEAD
equip fighter_bands position WEAR_ARMS
equip rapier position WEAR_WIELD
equip wd_pants position WEAR_LEGS
equip wd_plate position WEAR_BODY
equip midgaard/scale_boots position WEAR_FEET
}
load gwarrior into fighters_way3 local 1
{
equip fighter_sword position WEAR_WIELD
equip fighter_helmet position WEAR_HEAD
equip fighter_bands position WEAR_ARMS
equip rapier position WEAR_WIELD
equip wd_pants position WEAR_LEGS
equip wd_plate position WEAR_BODY
equip midgaard/scale_boots position WEAR_FEET
}
load bmage1 into magic_way1 local 1
{
equip short_staff position WEAR_WIELD
equip mage_robes position WEAR_BODY
equip mage_cloak position WEAR_ABOUT
equip mage_helmet position WEAR_HEAD
equip go_boots position WEAR_FEET
equip mage_leggings position WEAR_LEGS
equip wood_buckler position WEAR_SHIELD
}
load bmage into magic_way2 local 1
{
equip short_staff position WEAR_WIELD
equip mage_robes position WEAR_BODY
equip mage_cloak position WEAR_ABOUT
equip mage_helmet position WEAR_HEAD
equip go_boots position WEAR_FEET
equip mage_leggings position WEAR_LEGS
equip wood_buckler position WEAR_SHIELD
}
load bmage1 into magic_way3 local 1
{
equip short_staff position WEAR_WIELD
equip mage_robes position WEAR_BODY
equip mage_cloak position WEAR_ABOUT
equip mage_helmet position WEAR_HEAD
equip go_boots position WEAR_FEET
equip mage_leggings position WEAR_LEGS
equip wood_buckler position WEAR_SHIELD
}
load fmage into magic_way1 local 1
{
equip short_staff position WEAR_WIELD
equip mage_robes position WEAR_BODY
equip mage_cloak position WEAR_ABOUT
equip mage_helmet position WEAR_HEAD
equip go_boots position WEAR_FEET
equip mage_leggings position WEAR_LEGS
equip wood_buckler position WEAR_SHIELD
}
load fmage1 into magic_way2 local 1
{
equip mage_staff position WEAR_WIELD
equip mage_robes position WEAR_BODY
equip mage_cloak position WEAR_ABOUT
equip mage_helmet position WEAR_HEAD
equip go_boots position WEAR_FEET
equip mage_leggings position WEAR_LEGS
equip wood_buckler position WEAR_SHIELD
}
load fmage into magic_way3 local 1
{
equip short_staff position WEAR_WIELD
equip mage_robes position WEAR_BODY
equip mage_cloak position WEAR_ABOUT
equip mage_helmet position WEAR_HEAD
equip go_boots position WEAR_FEET
equip mage_leggings position WEAR_LEGS
equip wood_buckler position WEAR_SHIELD
}
load fhealer into healers_way1 local 1
{
equip healer_arms position WEAR_ARMS
equip healer_pants position WEAR_LEGS
equip mayor_cloak position WEAR_ABOUT
equip healers_vest position WEAR_BODY
equip hand_mace position WEAR_WIELD
equip go_boots position WEAR_FEET
}
load fhealer into healers_way2 local 1
{
equip healer_arms position WEAR_ARMS
equip healer_tunic position WEAR_BODY
equip mayor_cloak position WEAR_ABOUT
equip healer_leggings position WEAR_LEGS
equip healer_mace position WEAR_WIELD
equip go_boots position WEAR_FEET
}
load fhealer into healers_way3 local 1
{
equip healer_arms position WEAR_ARMS
equip healer_pants position WEAR_LEGS
equip healer_tunic position WEAR_BODY
equip hand_mace position WEAR_WIELD
equip healer_cloak position WEAR_ABOUT
equip wood_buckler position WEAR_SHIELD
equip go_boots position WEAR_FEET
}
load fhealer1 into healers_way1 local 1
{
equip healer_arms position WEAR_ARMS
equip healer_pants position WEAR_LEGS
equip crown position WEAR_HEAD
equip hand_mace position WEAR_WIELD
equip healers_vest position WEAR_BODY
equip go_boots position WEAR_FEET
}
load bhealer1 into healers_way2 local 1
{
equip healer_arms position WEAR_ARMS
equip healer_pants position WEAR_LEGS
equip healer_tunic position WEAR_BODY
equip holybook position WEAR_HOLD
equip short_staff position WEAR_WIELD
equip go_boots position WEAR_FEET
}
load bhealer into healers_way3 local 1
{
equip healer_arms position WEAR_ARMS
equip healer_tunic position WEAR_BODY
equip hand_mace position WEAR_WIELD
equip healer_leggings position WEAR_LEGS
equip go_boots position WEAR_FEET
}
load bthief1 into dark_all1 local 1
{
equip fistiron position WEAR_WIELD
equip thief_gloves position WEAR_HANDS
equip go_boots position WEAR_FEET
equip thief_shirt position WEAR_BODY
equip thief_leggings position WEAR_LEGS
equip thief_pouch position WEAR_CHEST
}

load bthief into dark_all2 local 1
{
equip thief_dagger position WEAR_WIELD
equip thief_leggings position WEAR_LEGS
equip go_boots position WEAR_FEET
equip thief_shirt position WEAR_BODY
equip thief_gloves position WEAR_HANDS
}

load bthief1 into dark_all3 local 1
{
equip fistiron position WEAR_WIELD
equip thief_pouch position WEAR_CHEST
equip go_boots position WEAR_FEET
equip thief_shirt position WEAR_BODY
equip thief_leggings position WEAR_LEGS
equip thief_gloves position WEAR_HANDS
}

load gthief into dark_all1 local 1
{
equip thief_dagger position WEAR_WIELD
equip thief_pouch position WEAR_CHEST
equip thief_shirt position WEAR_BODY
equip thief_leggings position WEAR_LEGS
equip go_boots position WEAR_FEET
equip thief_gloves position WEAR_HANDS
}

load gthief1 into dark_all2 local 1
{
equip cudgel position WEAR_WIELD
equip thief_shirt position WEAR_BODY
equip thief_leggings position WEAR_LEGS
equip go_boots position WEAR_FEET
equip thief_pouch position WEAR_CHEST
equip thief_gloves position WEAR_HANDS
}

load gthief1 into dark_all3 local 1
{
equip cudgel position WEAR_WIELD
equip thief_shirt position WEAR_BODY
equip thief_leggings position WEAR_LEGS
equip go_boots position WEAR_FEET
equip thief_pouch position WEAR_CHEST
equip thief_gloves position WEAR_HANDS
}
*/

/* ----- BASIS STUFF ----- */

#define SLTH_ARMOUR \
   equip midgaard/slth_sleeves position WEAR_ARMS \
   equip midgaard/slth_jerkin position WEAR_BODY  \
   equip midgaard/slth_pants position WEAR_LEGS   \
   equip midgaard/scale_boots position WEAR_FEET

door accuse_room SOUTH {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED}
door jail        NORTH {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED}


/* EXTENDED MUD  */
load fountain into market_sq@midgaard local 1

load bull_board into inn local 1

load odin_statue into temple local 1

load odin_statue into midgaard/cth_nave local 1

load base_abils into inn_2
load base_weapons into inn_3
load base_skills into inn_4
load base_spells into inn_5

/* ----- SHOP KEEPERS ----- */

load sam into inn max 1
{
    SLTH_ARMOUR
	equip midgaard/sword0 position WEAR_WIELD
}

load hansen into postoffice max 1
{
   SLTH_ARMOUR
   equip midgaard/scale_boots position WEAR_FEET
}
load rosanne into food_store max 1
{
equip dress2@wcastle  WEAR_BODY
equip prot_talisman  WEAR_NECK_1
equip midgaard/dag0 position WEAR_WIELD
equip go_boots position WEAR_FEET
}

load harold into ironmonger max 1
{
    SLTH_ARMOUR
    equip midgaard/sword0 position WEAR_WIELD
}

load bob into bank max 1
{
    SLTH_ARMOUR
    equip midgaard/scale_boots position WEAR_FEET
}
load slade into armourer max 1
{
    SLTH_ARMOUR
	equip midgaard/sword0 position WEAR_WIELD

}


load arny into weaponsmith max 1
{
    SLTH_ARMOUR
	equip midgaard/sword0 position WEAR_WIELD

}

/* ------------------------ MOOT HALL ----------------------------- */
#ifdef EXTENDEDMUD
load moot_fbou into moot_cen local 1
{
equip moot_swor position WEAR_WIELD
equip moot_grpl position WEAR_BODY
equip moot_grle position WEAR_LEGS
equip moot_grbo position WEAR_FEET
}
load moot_skal into moot_cen max 1
{
load dres_key
equip moot_skci position WEAR_HOLD
equip moot_sktun position WEAR_BODY
equip moot_skoc position WEAR_ABOUT
equip moot_skcap position WEAR_HEAD
equip moot_skbo position WEAR_FEET
equip moot_skle position WEAR_LEGS
}
load moot_elpr into moot_food max 1
{
load stor_key
equip moot_epsp position WEAR_WIELD
equip moot_epca position WEAR_HEAD
equip moot_epbo position WEAR_FEET
equip moot_eple position WEAR_LEGS
equip moot_eptu position WEAR_BODY
}
load moot_besr into moot_bar max 1
{
load apt1_key
equip moot_bebo position WEAR_FEET
equip moot_bele position WEAR_LEGS
equip moot_betu position WEAR_BODY
equip moot_beco position WEAR_ABOUT
equip moot_beca position WEAR_HEAD
}
load moot_del into moot_sta1 max 1
{
load apt2_key
equip moot_debo position WEAR_FEET
equip moot_dele position WEAR_LEGS
equip moot_detu position WEAR_BODY
equip moot_deco position WEAR_ABOUT
equip moot_deca position WEAR_HEAD
equip moot_debe position WEAR_WAIST
}
load moot_rath into moot_weap local 1
{
equip moot_coif position WEAR_HEAD
equip moot_shir position WEAR_BODY
equip moot_legg position WEAR_LEGS
equip moot_axe2 position WEAR_WIELD
equip moot_boot position WEAR_FEET
equip moot_slee position WEAR_ARMS
}
load moot_elju into moot_vote max 1
{
 equip moot_quil position WEAR_WIELD
 equip moot_tuni position WEAR_BODY
 equip moot_legg position WEAR_LEGS
 equip moot_boot position WEAR_FEET
}
load moot_jigr into moot_bet max 1
{
 equip moot_abac position WEAR_SHIELD
 equip moot_quil position WEAR_WIELD
 equip moot_tuni position WEAR_BODY
 equip moot_legg position WEAR_LEGS
 equip moot_boot position WEAR_FEET
}
load moot_hbou into moot_prac max 1
{
load pra_key
equip moot_axe position WEAR_WIELD
equip moot_grpl position WEAR_BODY
equip moot_grle position WEAR_LEGS
equip moot_grbo position WEAR_FEET
}
load moot_boun into moot_ent local 1
{
equip moot_grpl position WEAR_BODY
equip moot_grle position WEAR_LEGS
equip moot_grbo position WEAR_FEET
}
load moot_boun into moot_nor local 1
{
equip moot_grpl position WEAR_BODY
equip moot_grle position WEAR_LEGS
equip moot_grbo position WEAR_FEET
}
load moot_fbou into moot_sou local 1
{
equip moot_swor position WEAR_WIELD
equip moot_grpl position WEAR_BODY
equip moot_grle position WEAR_LEGS
equip moot_grbo position WEAR_FEET
}
load moot_fbou into moot_ent local 1
{
equip moot_swor position WEAR_WIELD
equip moot_grpl position WEAR_BODY
equip moot_grle position WEAR_LEGS
equip moot_grbo position WEAR_FEET
}
load moot_bbook into moot_lib1 local 1
load moot_gbook into moot_lib1 local 1
load moot_rbook into moot_lib2 local 1
load book_safe into moot_lib2 local 1
{
 load sec_key
}
door moot_uha3 SOUTHEAST {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED}
door moot_dres NORTHWEST {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED}
door moot_uha4 EAST {EX_OPEN_CLOSE, EX_CLOSED}
door moot_urm1 WEST {EX_OPEN_CLOSE, EX_CLOSED}
door moot_uha5 NORTHEAST {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED}
door moot_urm2 SOUTHWEST {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED}
door moot_uha6 NORTH {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED}
door moot_stor SOUTH {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED}
door moot_uha7 NORTHWEST {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED}
door moot_urm3 SOUTHEAST {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED}
door moot_uha8 WEST {EX_OPEN_CLOSE, EX_CLOSED}
door moot_urm4 EAST {EX_OPEN_CLOSE, EX_CLOSED}
door moot_uha9 SOUTHWEST {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED}
door moot_prac NORTHEAST {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED}
door moot_stor NORTH {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED, EX_HIDDEN}
door moot_lib2 SOUTH {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED, EX_HIDDEN}
door moot_dres NORTHWEST {EX_OPEN_CLOSE, EX_CLOSED, EX_LOCKED}
/*end heul*/
#endif
/* ------------------------ THE LAW ----------------------------- */

load nicholas into heal_room max 1
load midgaard/fido_dog into dump zonemax 1
load janitor2@udgaard into dump zonemax 1
{
    SLTH_ARMOUR
}

  /* load kazeem into accuse_room@midgaard */
   load kazeem into inn@udgaard
   {
      equip midgaard/scale_sleeves position WEAR_ARMS
      equip midgaard/scale_jerkin position WEAR_BODY
      equip midgaard/scale_skirt position WEAR_LEGS
      equip midgaard/scale_boots position WEAR_FEET
      equip midgaard/scale_gloves position WEAR_HANDS
      equip midgaard/scale_coif position WEAR_HEAD
      equip midgaard/lmetal_shiel position WEAR_SHIELD
      equip midgaard/katana position WEAR_WIELD
   }

load safe into accuse_room local 1

load reward_board into accuse_room local 1

load midgaard/bread into jail local 1
load midgaard/water_cup into jail local 1


load eliza into haon_dor/rn_6014 max 1
{
 SLTH_ARMOUR
 equip sirius position WEAR_WIELD
}
load adolf into accuse_room max 1 complete
{
   load jail_key
   load safe_key

   load midgaard/bread
   load midgaard/water_cup

   equip midgaard/iron_bracers position WEAR_ARMS
   equip midgaard/iron_plate position WEAR_BODY
   equip midgaard/iron_leggings position WEAR_LEGS
   equip midgaard/iron_boots position WEAR_FEET
   equip midgaard/iron_gloves position WEAR_HANDS
   equip midgaard/iron_helmet position WEAR_HEAD
   equip midgaard/sword2 position WEAR_WIELD

   follow sent_guard local 3
   {
      SLTH_ARMOUR
      equip midgaard/spear0 position WEAR_WIELD
   }
   follow sent_guard local 3
   {
      SLTH_ARMOUR
      equip midgaard/spear0 position WEAR_WIELD
   }
   follow sent_guard local 3
   {
      SLTH_ARMOUR
      equip midgaard/spear0 position WEAR_WIELD
   }
}

load sent_guard into bank local 1 complete
{
   SLTH_ARMOUR
   equip midgaard/spear0 position WEAR_WIELD
}

load patrol_guard into square zonemax 6 complete
{
   SLTH_ARMOUR
   equip midgaard/lsword0 position WEAR_WIELD
}
load patrol_guard into dump zonemax 6 complete
{
   SLTH_ARMOUR
   equip midgaard/lsword0 position WEAR_WIELD
}
load patrol_guard into market zonemax 6 complete
{
   SLTH_ARMOUR
   equip midgaard/lsword0 position WEAR_WIELD
}



load tower_guard into up_tower1 max 4
{
   SLTH_ARMOUR
   equip midgaard/lsword0 position WEAR_WIELD
}
load tower_guard into up_tower2 max 4
{
   SLTH_ARMOUR
   equip midgaard/lsword0 position WEAR_WIELD
}
load tower_guard into up_tower3 max 4
{
   SLTH_ARMOUR
   equip midgaard/lsword0 position WEAR_WIELD
}
load tower_guard into up_tower3 max 4
{
   SLTH_ARMOUR
   equip midgaard/lsword0 position WEAR_WIELD
}


load jens into market_sq@midgaard max 1
{
   equip shirt position WEAR_BODY

   follow jesper max 1
   {
      equip overalls@farm1 position WEAR_LEGS
      equip boots@farm1 position WEAR_FEET
      equip shirt position WEAR_BODY
   }
}
/* ------------ Loads for Mayor and escorts --------------- */
#ifdef EXTENDEDMUD
load mayor into mayor_house max 1
{
   equip mayor_boots position WEAR_FEET
   equip mayor_legs position WEAR_LEGS
   equip mayor_arms position WEAR_ARMS
   equip mayor_hands position WEAR_HANDS
   equip mayor_plate position WEAR_BODY
   equip mayor_head position WEAR_HEAD
   equip mayor_axe1 position WEAR_WIELD
   equip mayor_cloak position WEAR_ABOUT

   follow hgfighter max 1
   {
     equip war_boots position WEAR_FEET
     equip war_legs position WEAR_LEGS
     equip war_sle position WEAR_ARMS
     equip war_plate position WEAR_BODY
     equip war_helm position WEAR_HEAD
     equip sirius position WEAR_WIELD
     equip mayor_cloak position WEAR_ABOUT
   }
   follow hgthief max 1
   {
     equip castor position WEAR_WIELD
     equip pollux position WEAR_HOLD
     equip coif_is position WEAR_HEAD
     equip chshirt position WEAR_BODY
     equip dgloves position WEAR_HANDS
     equip mayor_cloak position WEAR_ABOUT
     equip midgaard/scale_boots position WEAR_FEET
   }
   follow hgmage max 1
   {
     equip mage_ring position WEAR_FINGER_L
     equip sagit position WEAR_WIELD
     equip mage_robe position WEAR_BODY
     equip mayor_cloak position WEAR_ABOUT
     equip go_boots position WEAR_FEET
   }
   follow hghealer max 1
   {
     equip healer_arms position WEAR_ARMS
     equip healer_pants position WEAR_LEGS
     equip healer_tunic position WEAR_BODY
     equip war_polaris position WEAR_WIELD
     equip crown position WEAR_HEAD
     equip mayor_cloak position WEAR_ABOUT
     equip go_boots position WEAR_FEET
   }
}
#endif

/* ----------------- GUILD SHOP RESETS ------------------------ */
/*
    load lth_cap@midgaard
    load lth_gloves@midgaard
    load lth_sleeves@midgaard
    load lth_jerkin@midgaard
    load lth_pants@midgaard
    load lth_boots@midgaard

    load hlth_cap@midgaard
    load hlth_gloves@midgaard
    load slth_sleeves@midgaard
    load slth_jerkin@midgaard
    load slth_pants@midgaard
    load hlth_boots@midgaard
*/

load winky into mageshop max 1
{
 equip midgaard/robe1 WEAR_ABOUT
 equip midgaard/lth_boots WEAR_FEET
}

load thief_fence into side_alley max 1
{
 equip blk_hood_cloak  WEAR_ABOUT
 equip dirk   WEAR_WIELD
 equip thief_gloves  WEAR_HANDS
 equip thief_shirt  WEAR_BODY
 equip midgaard/lth_pants WEAR_LEGS
 equip midgaard/lth_boots WEAR_FEET
}

load talismonger into heal_shop max 1
{
equip healer_arms position WEAR_ARMS
equip healer_cloak   WEAR_ABOUT
equip dress2@wcastle  WEAR_BODY
equip prot_talisman  WEAR_NECK_1
equip midgaard/lth_boots WEAR_FEET
}

load tobacco_seller into tobacco_shop max 1
{
        equip xiyang/black_shoes WEAR_FEET
        equip xiyang/black_suit  WEAR_ABOUT
        equip xiyang/butterfly  WEAR_NECK_1
        equip glasses   WEAR_HEAD
        equip midgaard/lth_boots WEAR_FEET
}

load thorbjorn into field_shop max 1
{
 equip midgaard/lth_pants  WEAR_LEGS
 equip xiyang/linnen_shirt  WEAR_BODY
 equip midgaard/lth_boots WEAR_FEET
}

load kurt into records max 1
/*load roland into ud_auction max 1
{
 equip midgaard/lth_boots WEAR_FEET
  equip midgaard/lth_pants  WEAR_LEGS
 equip xiyang/linnen_shirt  WEAR_BODY
} */
#ifdef EXTENDEDMUD
load auc_container into ud_auction max 1
load auc_sign into ud_auction max 1
#endif

%end
